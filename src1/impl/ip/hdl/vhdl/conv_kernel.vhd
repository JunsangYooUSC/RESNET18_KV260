-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conv_kernel is
generic (
    C_M_AXI_GMEM0_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM0_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM0_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 7;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM0_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM0_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM0_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_gmem0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem0_AWREADY : IN STD_LOGIC;
    m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ADDR_WIDTH-1 downto 0);
    m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem0_WVALID : OUT STD_LOGIC;
    m_axi_gmem0_WREADY : IN STD_LOGIC;
    m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH-1 downto 0);
    m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem0_WLAST : OUT STD_LOGIC;
    m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_WUSER_WIDTH-1 downto 0);
    m_axi_gmem0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem0_ARREADY : IN STD_LOGIC;
    m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ADDR_WIDTH-1 downto 0);
    m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem0_RVALID : IN STD_LOGIC;
    m_axi_gmem0_RREADY : OUT STD_LOGIC;
    m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH-1 downto 0);
    m_axi_gmem0_RLAST : IN STD_LOGIC;
    m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_RUSER_WIDTH-1 downto 0);
    m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BVALID : IN STD_LOGIC;
    m_axi_gmem0_BREADY : OUT STD_LOGIC;
    m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_BUSER_WIDTH-1 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of conv_kernel is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "conv_kernel_conv_kernel,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xck26-sfvc784-2LV-c,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=29977,HLS_SYN_LUT=41781,HLS_VERSION=2022_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (73 downto 0) := "00000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (73 downto 0) := "00000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (73 downto 0) := "00000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (73 downto 0) := "00000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (73 downto 0) := "00000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (73 downto 0) := "00000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (73 downto 0) := "00000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (73 downto 0) := "00001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (73 downto 0) := "00010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (73 downto 0) := "00100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (73 downto 0) := "01000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (73 downto 0) := "10000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv166_lc_1 : STD_LOGIC_VECTOR (165 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv134_lc_1 : STD_LOGIC_VECTOR (133 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv102_0 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv70_0 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv38_0 : STD_LOGIC_VECTOR (37 downto 0) := "00000000000000000000000000000000000000";
    constant ap_const_lv35_0 : STD_LOGIC_VECTOR (34 downto 0) := "00000000000000000000000000000000000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv65_124924925 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000100100100100100100100100100100101";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv166_lc_2 : STD_LOGIC_VECTOR (165 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv35_1 : STD_LOGIC_VECTOR (34 downto 0) := "00000000000000000000000000000000001";
    constant ap_const_lv38_1 : STD_LOGIC_VECTOR (37 downto 0) := "00000000000000000000000000000000000001";
    constant ap_const_lv70_1 : STD_LOGIC_VECTOR (69 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv102_1 : STD_LOGIC_VECTOR (101 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv134_lc_2 : STD_LOGIC_VECTOR (133 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv38_31 : STD_LOGIC_VECTOR (37 downto 0) := "00000000000000000000000000000000110001";
    constant ap_const_lv33_6 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000110";
    constant ap_const_lv67_24924924A : STD_LOGIC_VECTOR (66 downto 0) := "0000000000000000000000000000000001001001001001001001001001001001010";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv39_31 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000000000110001";
    constant ap_const_lv39_0 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000000000000000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (73 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal act_mem : STD_LOGIC_VECTOR (63 downto 0);
    signal act_in : STD_LOGIC_VECTOR (63 downto 0);
    signal act_out : STD_LOGIC_VECTOR (63 downto 0);
    signal weight_mem : STD_LOGIC_VECTOR (63 downto 0);
    signal bn_weight_mem : STD_LOGIC_VECTOR (63 downto 0);
    signal start_layer : STD_LOGIC_VECTOR (63 downto 0);
    signal end_layer : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem0_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal gmem0_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal gmem0_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal gmem0_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state74 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state74 : signal is "none";
    signal icmp_ln1442_reg_2930 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1444_reg_2934 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal icmp_ln1409_reg_2594 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal bn_weight_mem_read_reg_2206 : STD_LOGIC_VECTOR (63 downto 0);
    signal weight_mem_read_reg_2213 : STD_LOGIC_VECTOR (63 downto 0);
    signal act_mem_read_reg_2218 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem0_addr_12_reg_2261 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem0_addr_13_reg_2267 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln5_reg_2273 : STD_LOGIC_VECTOR (61 downto 0);
    signal trunc_ln6_reg_2279 : STD_LOGIC_VECTOR (61 downto 0);
    signal layer_cnt_reg_2285 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem0_addr_13_read_reg_2291 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem0_addr_14_reg_2297 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem0_addr_15_reg_2302 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln1406_fu_920_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1406_reg_2388 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal icmp_ln1376_fu_815_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal nif_reg_2392 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal nof_reg_2407 : STD_LOGIC_VECTOR (31 downto 0);
    signal noy_reg_2420 : STD_LOGIC_VECTOR (31 downto 0);
    signal nox_reg_2431 : STD_LOGIC_VECTOR (31 downto 0);
    signal nkx_reg_2443 : STD_LOGIC_VECTOR (31 downto 0);
    signal nky_reg_2454 : STD_LOGIC_VECTOR (31 downto 0);
    signal stride_reg_2468 : STD_LOGIC_VECTOR (31 downto 0);
    signal pad_reg_2475 : STD_LOGIC_VECTOR (31 downto 0);
    signal bb_en_reg_2482 : STD_LOGIC_VECTOR (0 downto 0);
    signal conv_en_reg_2489 : STD_LOGIC_VECTOR (0 downto 0);
    signal bn_en_reg_2496 : STD_LOGIC_VECTOR (0 downto 0);
    signal skip_en_reg_2501 : STD_LOGIC_VECTOR (0 downto 0);
    signal relu_en_reg_2506 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_pool_en_reg_2511 : STD_LOGIC_VECTOR (0 downto 0);
    signal avg_pool_en_reg_2516 : STD_LOGIC_VECTOR (0 downto 0);
    signal fc_en_reg_2521 : STD_LOGIC_VECTOR (0 downto 0);
    signal base_addr_in_reg_2525 : STD_LOGIC_VECTOR (31 downto 0);
    signal base_addr_out_reg_2535 : STD_LOGIC_VECTOR (31 downto 0);
    signal base_addr_add_reg_2545 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_base_reg_2551 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_size_reg_2557 : STD_LOGIC_VECTOR (31 downto 0);
    signal bn_weight_base_reg_2562 : STD_LOGIC_VECTOR (31 downto 0);
    signal bn_weight_size_reg_2571 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_size_reg_2576 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_size_reg_2585 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1409_fu_1065_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal trunc_ln1409_1_reg_2598 : STD_LOGIC_VECTOR (61 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal and_ln121_fu_1106_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln121_reg_2609 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal bound_fu_1120_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal bound_reg_2613 : STD_LOGIC_VECTOR (34 downto 0);
    signal bound13_fu_1138_p2 : STD_LOGIC_VECTOR (37 downto 0);
    signal bound13_reg_2618 : STD_LOGIC_VECTOR (37 downto 0);
    signal bound25_fu_1151_p2 : STD_LOGIC_VECTOR (69 downto 0);
    signal bound25_reg_2623 : STD_LOGIC_VECTOR (69 downto 0);
    signal tmp_reg_2630 : STD_LOGIC_VECTOR (29 downto 0);
    signal icmp_ln137_fu_1177_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln137_reg_2635 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln135_fu_1183_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln135_reg_2643 : STD_LOGIC_VECTOR (0 downto 0);
    signal bound45_fu_1195_p2 : STD_LOGIC_VECTOR (101 downto 0);
    signal bound45_reg_2650 : STD_LOGIC_VECTOR (101 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal tmp_3_reg_2657 : STD_LOGIC_VECTOR (29 downto 0);
    signal bound77_fu_1227_p2 : STD_LOGIC_VECTOR (133 downto 0);
    signal bound77_reg_2662 : STD_LOGIC_VECTOR (133 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal cmp331_i_fu_1233_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp331_i_reg_2668 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal bound117_fu_1244_p2 : STD_LOGIC_VECTOR (165 downto 0);
    signal bound117_reg_2672 : STD_LOGIC_VECTOR (165 downto 0);
    signal icmp_ln139_fu_1250_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln139_reg_2677 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_fu_1255_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_reg_2686 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln129_fu_1260_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln129_reg_2692 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln127_fu_1265_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln127_reg_2697 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal add_ln125_3_fu_1281_p2 : STD_LOGIC_VECTOR (165 downto 0);
    signal add_ln125_3_reg_2706 : STD_LOGIC_VECTOR (165 downto 0);
    signal icmp_ln127_fu_1287_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln127_reg_2711 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln125_fu_1276_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln127_1_fu_1292_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln127_1_reg_2722 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln125_6_fu_1338_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln125_6_reg_2728 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln125_7_fu_1345_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln125_7_reg_2735 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln127_4_fu_1367_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln127_4_reg_2740 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln129_fu_1374_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln129_reg_2747 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln129_4_fu_1387_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln129_4_reg_2753 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln131_2_fu_1394_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln131_2_reg_2762 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln127_fu_1433_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln127_reg_2769 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal or_ln129_1_fu_1455_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln129_1_reg_2775 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln131_fu_1486_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln131_reg_2780 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln131_3_fu_1514_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln131_3_reg_2785 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln137_fu_1544_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln137_reg_2790 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_fu_1552_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_reg_2795 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln7_reg_2800 : STD_LOGIC_VECTOR (61 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal add_ln139_fu_1604_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal select_ln137_1_fu_1629_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal select_ln135_1_fu_1647_p3 : STD_LOGIC_VECTOR (37 downto 0);
    signal select_ln131_4_fu_1661_p3 : STD_LOGIC_VECTOR (69 downto 0);
    signal select_ln129_5_fu_1674_p3 : STD_LOGIC_VECTOR (101 downto 0);
    signal select_ln127_5_fu_1687_p3 : STD_LOGIC_VECTOR (133 downto 0);
    signal tmp_4_reg_2841 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal tmp_5_reg_2846 : STD_LOGIC_VECTOR (29 downto 0);
    signal bound172_fu_1737_p2 : STD_LOGIC_VECTOR (37 downto 0);
    signal bound172_reg_2852 : STD_LOGIC_VECTOR (37 downto 0);
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal bound184_fu_1750_p2 : STD_LOGIC_VECTOR (69 downto 0);
    signal bound184_reg_2859 : STD_LOGIC_VECTOR (69 downto 0);
    signal add14_i_fu_1756_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add14_i_reg_2866 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal bound213_fu_1767_p2 : STD_LOGIC_VECTOR (101 downto 0);
    signal bound213_reg_2871 : STD_LOGIC_VECTOR (101 downto 0);
    signal icmp_ln314_fu_1774_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln314_reg_2877 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_2883 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal mul_ln271_1_fu_1812_p2 : STD_LOGIC_VECTOR (38 downto 0);
    signal mul_ln271_1_reg_2888 : STD_LOGIC_VECTOR (38 downto 0);
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal mul_ln271_2_fu_1825_p2 : STD_LOGIC_VECTOR (70 downto 0);
    signal mul_ln271_2_reg_2894 : STD_LOGIC_VECTOR (70 downto 0);
    signal mul_ln271_3_fu_1837_p2 : STD_LOGIC_VECTOR (102 downto 0);
    signal mul_ln271_3_reg_2900 : STD_LOGIC_VECTOR (102 downto 0);
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal icmp_ln275_fu_1843_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln275_reg_2905 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp21_i83_fu_1848_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp21_i83_reg_2910 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal add_ln507_fu_1854_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln507_reg_2915 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln_reg_2920 : STD_LOGIC_VECTOR (61 downto 0);
    signal trunc_ln1_reg_2925 : STD_LOGIC_VECTOR (61 downto 0);
    signal icmp_ln1442_fu_1926_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal icmp_ln1444_fu_1930_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1444_1_reg_2938 : STD_LOGIC_VECTOR (61 downto 0);
    signal grp_controller_fu_536_ap_start : STD_LOGIC;
    signal grp_controller_fu_536_ap_done : STD_LOGIC;
    signal grp_controller_fu_536_ap_idle : STD_LOGIC;
    signal grp_controller_fu_536_ap_ready : STD_LOGIC;
    signal grp_controller_fu_536_bb_en_read : STD_LOGIC;
    signal grp_controller_fu_536_conv_en_read : STD_LOGIC;
    signal grp_controller_fu_536_bn_en_read : STD_LOGIC;
    signal grp_controller_fu_536_skip_en_read : STD_LOGIC;
    signal grp_controller_fu_536_relu_en_read : STD_LOGIC;
    signal grp_controller_fu_536_max_pool_en_read : STD_LOGIC;
    signal grp_controller_fu_536_avg_pool_en_read : STD_LOGIC;
    signal grp_controller_fu_536_fc_en_read : STD_LOGIC;
    signal grp_controller_fu_536_ap_return_0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_controller_fu_536_ap_return_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_controller_fu_536_ap_return_2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_controller_fu_536_ap_return_3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_controller_fu_536_ap_return_4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_controller_fu_536_ap_return_5 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_controller_fu_536_ap_return_6 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_controller_fu_536_ap_return_7 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_controller_fu_536_ap_return_8 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_controller_fu_536_ap_return_9 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_controller_fu_536_ap_return_10 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_controller_fu_536_ap_return_11 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_controller_fu_536_ap_return_12 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_controller_fu_536_ap_return_13 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_controller_fu_536_ap_return_14 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_controller_fu_536_ap_return_15 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_controller_fu_536_ap_return_16 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_controller_fu_536_ap_return_17 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_controller_fu_536_ap_return_18 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_controller_fu_536_ap_return_19 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_controller_fu_536_ap_return_20 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_controller_fu_536_ap_return_21 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_controller_fu_536_ap_return_22 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_controller_fu_536_ap_return_23 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_controller_fu_536_ap_return_24 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_ap_start : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_ap_done : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_ap_idle : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_ap_ready : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_AWVALID : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_WVALID : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_WLAST : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_ARVALID : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_RREADY : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_BREADY : STD_LOGIC;
    signal grp_load_input_fu_575_ap_start : STD_LOGIC;
    signal grp_load_input_fu_575_ap_done : STD_LOGIC;
    signal grp_load_input_fu_575_ap_idle : STD_LOGIC;
    signal grp_load_input_fu_575_ap_ready : STD_LOGIC;
    signal grp_load_input_fu_575_m_axi_gmem0_AWVALID : STD_LOGIC;
    signal grp_load_input_fu_575_m_axi_gmem0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_input_fu_575_m_axi_gmem0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_input_fu_575_m_axi_gmem0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_input_fu_575_m_axi_gmem0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_input_fu_575_m_axi_gmem0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_input_fu_575_m_axi_gmem0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_input_fu_575_m_axi_gmem0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_input_fu_575_m_axi_gmem0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_input_fu_575_m_axi_gmem0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_input_fu_575_m_axi_gmem0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_input_fu_575_m_axi_gmem0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_input_fu_575_m_axi_gmem0_WVALID : STD_LOGIC;
    signal grp_load_input_fu_575_m_axi_gmem0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_input_fu_575_m_axi_gmem0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_input_fu_575_m_axi_gmem0_WLAST : STD_LOGIC;
    signal grp_load_input_fu_575_m_axi_gmem0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_input_fu_575_m_axi_gmem0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_input_fu_575_m_axi_gmem0_ARVALID : STD_LOGIC;
    signal grp_load_input_fu_575_m_axi_gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_input_fu_575_m_axi_gmem0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_input_fu_575_m_axi_gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_input_fu_575_m_axi_gmem0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_input_fu_575_m_axi_gmem0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_input_fu_575_m_axi_gmem0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_input_fu_575_m_axi_gmem0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_input_fu_575_m_axi_gmem0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_input_fu_575_m_axi_gmem0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_input_fu_575_m_axi_gmem0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_input_fu_575_m_axi_gmem0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_input_fu_575_m_axi_gmem0_RREADY : STD_LOGIC;
    signal grp_load_input_fu_575_m_axi_gmem0_BREADY : STD_LOGIC;
    signal grp_load_input_fu_575_load_input_fifo5_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_input_fu_575_load_input_fifo5_write : STD_LOGIC;
    signal grp_PE_fu_594_ap_start : STD_LOGIC;
    signal grp_PE_fu_594_ap_done : STD_LOGIC;
    signal grp_PE_fu_594_ap_idle : STD_LOGIC;
    signal grp_PE_fu_594_ap_ready : STD_LOGIC;
    signal grp_PE_fu_594_load_input_fifo5_read : STD_LOGIC;
    signal grp_PE_fu_594_load_weight_fifo6_read : STD_LOGIC;
    signal grp_PE_fu_594_pe_out_fifo7_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_PE_fu_594_pe_out_fifo7_write : STD_LOGIC;
    signal grp_PE_fu_594_grp_fu_2949_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_PE_fu_594_grp_fu_2949_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_PE_fu_594_grp_fu_2949_p_ce : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_ap_start : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_ap_done : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_ap_idle : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_ap_ready : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_AWVALID : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_WVALID : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_WLAST : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_ARVALID : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_RREADY : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_BREADY : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_load_weight_fifo_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_load_weight_fifo_write : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_ap_start : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_ap_done : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_ap_idle : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_ap_ready : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_AWVALID : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_WVALID : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_WLAST : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_ARVALID : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_RREADY : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_BREADY : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_pe_out_fifo_read : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_bn_out_fifo_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_bn_out_fifo_write : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_grp_fu_2953_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_grp_fu_2953_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_grp_fu_2953_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_grp_fu_2953_p_ce : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_grp_fu_2949_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_grp_fu_2949_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_grp_fu_2949_p_ce : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_ap_start : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_ap_done : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_ap_idle : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_ap_ready : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_AWVALID : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_WVALID : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_WLAST : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_ARVALID : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_RREADY : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_BREADY : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_bn_out_fifo_read : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_skip_out_fifo_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_skip_out_fifo_write : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_grp_fu_2953_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_grp_fu_2953_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_grp_fu_2953_p_opcode : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_grp_fu_2953_p_ce : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_grp_fu_2957_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_grp_fu_2957_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_grp_fu_2957_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_grp_fu_2957_p_ce : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_ap_start : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_ap_done : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_ap_idle : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_ap_ready : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_AWVALID : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_WVALID : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_WLAST : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_ARVALID : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_RREADY : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_BREADY : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_skip_out_fifo_read : STD_LOGIC;
    signal grp_max_pool_fu_668_ap_start : STD_LOGIC;
    signal grp_max_pool_fu_668_ap_done : STD_LOGIC;
    signal grp_max_pool_fu_668_ap_idle : STD_LOGIC;
    signal grp_max_pool_fu_668_ap_ready : STD_LOGIC;
    signal grp_max_pool_fu_668_m_axi_gmem0_AWVALID : STD_LOGIC;
    signal grp_max_pool_fu_668_m_axi_gmem0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_max_pool_fu_668_m_axi_gmem0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_max_pool_fu_668_m_axi_gmem0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_max_pool_fu_668_m_axi_gmem0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_max_pool_fu_668_m_axi_gmem0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_max_pool_fu_668_m_axi_gmem0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_max_pool_fu_668_m_axi_gmem0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_max_pool_fu_668_m_axi_gmem0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_max_pool_fu_668_m_axi_gmem0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_max_pool_fu_668_m_axi_gmem0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_max_pool_fu_668_m_axi_gmem0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_max_pool_fu_668_m_axi_gmem0_WVALID : STD_LOGIC;
    signal grp_max_pool_fu_668_m_axi_gmem0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_max_pool_fu_668_m_axi_gmem0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_max_pool_fu_668_m_axi_gmem0_WLAST : STD_LOGIC;
    signal grp_max_pool_fu_668_m_axi_gmem0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_max_pool_fu_668_m_axi_gmem0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_max_pool_fu_668_m_axi_gmem0_ARVALID : STD_LOGIC;
    signal grp_max_pool_fu_668_m_axi_gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_max_pool_fu_668_m_axi_gmem0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_max_pool_fu_668_m_axi_gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_max_pool_fu_668_m_axi_gmem0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_max_pool_fu_668_m_axi_gmem0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_max_pool_fu_668_m_axi_gmem0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_max_pool_fu_668_m_axi_gmem0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_max_pool_fu_668_m_axi_gmem0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_max_pool_fu_668_m_axi_gmem0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_max_pool_fu_668_m_axi_gmem0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_max_pool_fu_668_m_axi_gmem0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_max_pool_fu_668_m_axi_gmem0_RREADY : STD_LOGIC;
    signal grp_max_pool_fu_668_m_axi_gmem0_BREADY : STD_LOGIC;
    signal grp_max_pool_fu_668_grp_fu_2957_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_max_pool_fu_668_grp_fu_2957_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_max_pool_fu_668_grp_fu_2957_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_max_pool_fu_668_grp_fu_2957_p_ce : STD_LOGIC;
    signal grp_avg_pool_fu_683_ap_start : STD_LOGIC;
    signal grp_avg_pool_fu_683_ap_done : STD_LOGIC;
    signal grp_avg_pool_fu_683_ap_idle : STD_LOGIC;
    signal grp_avg_pool_fu_683_ap_ready : STD_LOGIC;
    signal grp_avg_pool_fu_683_m_axi_gmem0_AWVALID : STD_LOGIC;
    signal grp_avg_pool_fu_683_m_axi_gmem0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_avg_pool_fu_683_m_axi_gmem0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_avg_pool_fu_683_m_axi_gmem0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_avg_pool_fu_683_m_axi_gmem0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_avg_pool_fu_683_m_axi_gmem0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_avg_pool_fu_683_m_axi_gmem0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_avg_pool_fu_683_m_axi_gmem0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_avg_pool_fu_683_m_axi_gmem0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_avg_pool_fu_683_m_axi_gmem0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_avg_pool_fu_683_m_axi_gmem0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_avg_pool_fu_683_m_axi_gmem0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_avg_pool_fu_683_m_axi_gmem0_WVALID : STD_LOGIC;
    signal grp_avg_pool_fu_683_m_axi_gmem0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_avg_pool_fu_683_m_axi_gmem0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_avg_pool_fu_683_m_axi_gmem0_WLAST : STD_LOGIC;
    signal grp_avg_pool_fu_683_m_axi_gmem0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_avg_pool_fu_683_m_axi_gmem0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_avg_pool_fu_683_m_axi_gmem0_ARVALID : STD_LOGIC;
    signal grp_avg_pool_fu_683_m_axi_gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_avg_pool_fu_683_m_axi_gmem0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_avg_pool_fu_683_m_axi_gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_avg_pool_fu_683_m_axi_gmem0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_avg_pool_fu_683_m_axi_gmem0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_avg_pool_fu_683_m_axi_gmem0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_avg_pool_fu_683_m_axi_gmem0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_avg_pool_fu_683_m_axi_gmem0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_avg_pool_fu_683_m_axi_gmem0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_avg_pool_fu_683_m_axi_gmem0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_avg_pool_fu_683_m_axi_gmem0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_avg_pool_fu_683_m_axi_gmem0_RREADY : STD_LOGIC;
    signal grp_avg_pool_fu_683_m_axi_gmem0_BREADY : STD_LOGIC;
    signal grp_avg_pool_fu_683_grp_fu_2953_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_avg_pool_fu_683_grp_fu_2953_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_avg_pool_fu_683_grp_fu_2953_p_opcode : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_avg_pool_fu_683_grp_fu_2953_p_ce : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_ap_start : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_ap_done : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_ap_idle : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_ap_ready : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_AWVALID : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_WVALID : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_WLAST : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_ARVALID : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_RREADY : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_BREADY : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_grp_fu_2953_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_grp_fu_2953_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_grp_fu_2953_p_opcode : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_grp_fu_2953_p_ce : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_grp_fu_2949_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_grp_fu_2949_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_grp_fu_2949_p_ce : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_ap_start : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_ap_done : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_ap_idle : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_ap_ready : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_AWVALID : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_WVALID : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_WLAST : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_ARVALID : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_RREADY : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_BREADY : STD_LOGIC;
    signal gmem0_AWVALID : STD_LOGIC;
    signal gmem0_AWREADY : STD_LOGIC;
    signal gmem0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem0_WVALID : STD_LOGIC;
    signal gmem0_WREADY : STD_LOGIC;
    signal gmem0_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem0_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem0_ARVALID : STD_LOGIC;
    signal gmem0_ARREADY : STD_LOGIC;
    signal gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem0_RVALID : STD_LOGIC;
    signal gmem0_RREADY : STD_LOGIC;
    signal gmem0_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem0_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem0_BVALID : STD_LOGIC;
    signal gmem0_BREADY : STD_LOGIC;
    signal indvar_flatten160_reg_430 : STD_LOGIC_VECTOR (165 downto 0);
    signal ap_block_state44_on_subcall_done : BOOLEAN;
    signal f_out_reg_441 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten112_reg_452 : STD_LOGIC_VECTOR (133 downto 0);
    signal indvar_flatten72_reg_464 : STD_LOGIC_VECTOR (101 downto 0);
    signal indvar_flatten40_reg_476 : STD_LOGIC_VECTOR (69 downto 0);
    signal f_in_reg_488 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_flatten20_reg_500 : STD_LOGIC_VECTOR (37 downto 0);
    signal indvar_flatten_reg_512 : STD_LOGIC_VECTOR (34 downto 0);
    signal i_reg_524 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_controller_fu_536_ap_start_reg : STD_LOGIC := '0';
    signal grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal grp_load_input_fu_575_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal load_input_fifo_full_n : STD_LOGIC;
    signal load_input_fifo_write : STD_LOGIC;
    signal grp_PE_fu_594_ap_start_reg : STD_LOGIC := '0';
    signal load_input_fifo_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal load_input_fifo_empty_n : STD_LOGIC;
    signal load_input_fifo_read : STD_LOGIC;
    signal load_weight_fifo_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal load_weight_fifo_empty_n : STD_LOGIC;
    signal load_weight_fifo_read : STD_LOGIC;
    signal pe_out_fifo_full_n : STD_LOGIC;
    signal pe_out_fifo_write : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal load_weight_fifo_full_n : STD_LOGIC;
    signal load_weight_fifo_write : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal pe_out_fifo_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal pe_out_fifo_empty_n : STD_LOGIC;
    signal pe_out_fifo_read : STD_LOGIC;
    signal bn_out_fifo_full_n : STD_LOGIC;
    signal bn_out_fifo_write : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (73 downto 0);
    signal ap_NS_fsm_state50 : STD_LOGIC;
    signal skip_out_fifo_full_n : STD_LOGIC;
    signal skip_out_fifo_write : STD_LOGIC;
    signal bn_out_fifo_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal bn_out_fifo_empty_n : STD_LOGIC;
    signal bn_out_fifo_read : STD_LOGIC;
    signal grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm_state53 : STD_LOGIC;
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal skip_out_fifo_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal skip_out_fifo_empty_n : STD_LOGIC;
    signal skip_out_fifo_read : STD_LOGIC;
    signal grp_max_pool_fu_668_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal grp_avg_pool_fu_683_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal grp_conv_kernel_Pipeline_fc_loop1_fu_694_ap_start_reg : STD_LOGIC := '0';
    signal grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal ap_CS_fsm_state69 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal sext_ln1376_fu_739_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast_cast_fu_759_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1409_fu_789_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1444_fu_798_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1409_1_fu_1096_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln141_fu_1594_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln1444_1_fu_1961_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state27 : BOOLEAN;
    signal ap_block_state61_io : BOOLEAN;
    signal ap_predicate_op494_writeresp_state74 : BOOLEAN;
    signal ap_block_state74 : BOOLEAN;
    signal bb_en_035_fu_208 : STD_LOGIC_VECTOR (0 downto 0);
    signal conv_en_036_fu_212 : STD_LOGIC_VECTOR (0 downto 0);
    signal bn_en_1_fu_216 : STD_LOGIC_VECTOR (0 downto 0);
    signal skip_en_1_fu_220 : STD_LOGIC_VECTOR (0 downto 0);
    signal relu_en_1_fu_224 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_pool_en_1_fu_228 : STD_LOGIC_VECTOR (0 downto 0);
    signal avg_pool_en_1_fu_232 : STD_LOGIC_VECTOR (0 downto 0);
    signal fc_en_1_fu_236 : STD_LOGIC_VECTOR (0 downto 0);
    signal layer_cnt_2_fu_240 : STD_LOGIC_VECTOR (31 downto 0);
    signal layer_cnt_3_fu_1971_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal nif_027_fu_244 : STD_LOGIC_VECTOR (31 downto 0);
    signal nof_028_fu_248 : STD_LOGIC_VECTOR (31 downto 0);
    signal noy_029_fu_252 : STD_LOGIC_VECTOR (31 downto 0);
    signal nox_030_fu_256 : STD_LOGIC_VECTOR (31 downto 0);
    signal nkx_031_fu_260 : STD_LOGIC_VECTOR (31 downto 0);
    signal nky_032_fu_264 : STD_LOGIC_VECTOR (31 downto 0);
    signal stride_1_fu_268 : STD_LOGIC_VECTOR (31 downto 0);
    signal pad_1_fu_272 : STD_LOGIC_VECTOR (31 downto 0);
    signal base_addr_in_043_fu_276 : STD_LOGIC_VECTOR (31 downto 0);
    signal base_addr_out_044_fu_280 : STD_LOGIC_VECTOR (31 downto 0);
    signal base_addr_add_1_fu_284 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_base_046_fu_288 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_size_1_fu_292 : STD_LOGIC_VECTOR (31 downto 0);
    signal bn_weight_base_048_fu_296 : STD_LOGIC_VECTOR (31 downto 0);
    signal bn_weight_size_1_fu_300 : STD_LOGIC_VECTOR (31 downto 0);
    signal in_size_1_fu_304 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_size_1_fu_308 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln4_fu_729_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_cast_fu_749_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal shl_ln_fu_1070_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal zext_ln1409_fu_1077_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln1409_fu_1081_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_shl1_fu_1113_p3 : STD_LOGIC_VECTOR (34 downto 0);
    signal cast10_fu_1110_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal p_shl_fu_1130_p3 : STD_LOGIC_VECTOR (37 downto 0);
    signal cast12_fu_1126_p1 : STD_LOGIC_VECTOR (37 downto 0);
    signal bound25_fu_1151_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bound25_fu_1151_p1 : STD_LOGIC_VECTOR (37 downto 0);
    signal grp_fu_719_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln125_fu_1161_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln125_fu_1161_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal mul_ln125_fu_1161_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal bound45_fu_1195_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal bound45_fu_1195_p1 : STD_LOGIC_VECTOR (69 downto 0);
    signal grp_fu_724_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln125_1_fu_1205_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln125_1_fu_1205_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal mul_ln125_1_fu_1205_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal bound77_fu_1227_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal bound77_fu_1227_p1 : STD_LOGIC_VECTOR (99 downto 0);
    signal bound117_fu_1244_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bound117_fu_1244_p1 : STD_LOGIC_VECTOR (129 downto 0);
    signal f_out_9_fu_1270_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln137_1_fu_1297_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln135_1_fu_1309_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_1_fu_1321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln129_1_fu_1333_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln125_3_fu_1302_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln125_4_fu_1314_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln125_5_fu_1326_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln127_2_fu_1353_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln127_3_fu_1360_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln129_3_fu_1380_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp3592_fu_1406_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln125_2_fu_1417_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln139_1_fu_1422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln125_fu_1401_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp4_mid192_fu_1437_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln125_2_fu_1417_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln125_2_fu_1427_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln127_fu_1442_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln127_1_fu_1449_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln129_fu_1459_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_in_3_fu_1480_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp4_mid1_fu_1496_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp4_mid1_fu_1496_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln129_1_fu_1467_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln129_2_fu_1474_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln131_1_fu_1508_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln135_fu_1521_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln137_fu_1527_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln137_1_fu_1532_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln137_3_fu_1538_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln131_fu_1501_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp5_fu_1558_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_69_fu_1562_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_1567_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_cast26_fu_1575_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_70_fu_1579_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln137_2_fu_1615_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln137_4_fu_1619_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln137_5_fu_1624_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln137_fu_1609_p2 : STD_LOGIC_VECTOR (34 downto 0);
    signal or_ln135_fu_1643_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln135_fu_1637_p2 : STD_LOGIC_VECTOR (37 downto 0);
    signal add_ln131_1_fu_1655_p2 : STD_LOGIC_VECTOR (69 downto 0);
    signal add_ln129_fu_1668_p2 : STD_LOGIC_VECTOR (101 downto 0);
    signal add_ln127_fu_1681_p2 : STD_LOGIC_VECTOR (133 downto 0);
    signal mul_ln310_fu_1698_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln310_fu_1698_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal mul_ln310_fu_1698_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal mul_ln310_1_fu_1718_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln310_1_fu_1718_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal mul_ln310_1_fu_1718_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal bound172_fu_1737_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal bound172_fu_1737_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal bound184_fu_1750_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal bound184_fu_1750_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal bound213_fu_1767_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bound213_fu_1767_p1 : STD_LOGIC_VECTOR (67 downto 0);
    signal zext_ln271_fu_1780_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln271_fu_1783_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal mul_ln271_fu_1793_p0 : STD_LOGIC_VECTOR (32 downto 0);
    signal mul_ln271_fu_1793_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal mul_ln271_fu_1793_p2 : STD_LOGIC_VECTOR (66 downto 0);
    signal mul_ln271_1_fu_1812_p0 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_ln271_1_fu_1812_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln271_2_fu_1825_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal mul_ln271_2_fu_1825_p1 : STD_LOGIC_VECTOR (37 downto 0);
    signal mul_ln271_3_fu_1837_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln271_3_fu_1837_p1 : STD_LOGIC_VECTOR (68 downto 0);
    signal add_ln507_1_fu_1860_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln6_fu_1865_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal zext_ln507_fu_1873_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln507_2_fu_1877_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add5_le_i_fu_1893_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_fu_1898_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_cast21_fu_1906_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_76_fu_1910_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln9_fu_1935_p3 : STD_LOGIC_VECTOR (33 downto 0);
    signal zext_ln1444_fu_1942_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln1444_fu_1946_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state60_on_subcall_done : BOOLEAN;
    signal grp_fu_2949_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2949_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2949_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2949_ce : STD_LOGIC;
    signal grp_fu_2953_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2953_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2953_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2953_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_2953_ce : STD_LOGIC;
    signal grp_fu_2957_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_2957_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2957_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2957_ce : STD_LOGIC;
    signal grp_fu_2957_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ST_fsm_state50_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal ap_ST_fsm_state52_blk : STD_LOGIC;
    signal ap_ST_fsm_state53_blk : STD_LOGIC;
    signal ap_ST_fsm_state54_blk : STD_LOGIC;
    signal ap_ST_fsm_state55_blk : STD_LOGIC;
    signal ap_ST_fsm_state56_blk : STD_LOGIC;
    signal ap_ST_fsm_state57_blk : STD_LOGIC;
    signal ap_ST_fsm_state58_blk : STD_LOGIC;
    signal ap_ST_fsm_state59_blk : STD_LOGIC;
    signal ap_ST_fsm_state60_blk : STD_LOGIC;
    signal ap_ST_fsm_state61_blk : STD_LOGIC;
    signal ap_ST_fsm_state62_blk : STD_LOGIC;
    signal ap_ST_fsm_state63_blk : STD_LOGIC;
    signal ap_ST_fsm_state64_blk : STD_LOGIC;
    signal ap_ST_fsm_state65_blk : STD_LOGIC;
    signal ap_ST_fsm_state66_blk : STD_LOGIC;
    signal ap_ST_fsm_state67_blk : STD_LOGIC;
    signal ap_ST_fsm_state68_blk : STD_LOGIC;
    signal ap_ST_fsm_state69_blk : STD_LOGIC;
    signal ap_ST_fsm_state70_blk : STD_LOGIC;
    signal ap_ST_fsm_state71_blk : STD_LOGIC;
    signal ap_ST_fsm_state72_blk : STD_LOGIC;
    signal ap_ST_fsm_state73_blk : STD_LOGIC;
    signal ap_ST_fsm_state74_blk : STD_LOGIC;
    signal bound117_fu_1244_p00 : STD_LOGIC_VECTOR (165 downto 0);
    signal bound117_fu_1244_p10 : STD_LOGIC_VECTOR (165 downto 0);
    signal bound172_fu_1737_p00 : STD_LOGIC_VECTOR (37 downto 0);
    signal bound184_fu_1750_p00 : STD_LOGIC_VECTOR (69 downto 0);
    signal bound184_fu_1750_p10 : STD_LOGIC_VECTOR (69 downto 0);
    signal bound213_fu_1767_p00 : STD_LOGIC_VECTOR (101 downto 0);
    signal bound213_fu_1767_p10 : STD_LOGIC_VECTOR (101 downto 0);
    signal bound25_fu_1151_p00 : STD_LOGIC_VECTOR (69 downto 0);
    signal bound25_fu_1151_p10 : STD_LOGIC_VECTOR (69 downto 0);
    signal bound45_fu_1195_p00 : STD_LOGIC_VECTOR (101 downto 0);
    signal bound45_fu_1195_p10 : STD_LOGIC_VECTOR (101 downto 0);
    signal bound77_fu_1227_p00 : STD_LOGIC_VECTOR (133 downto 0);
    signal bound77_fu_1227_p10 : STD_LOGIC_VECTOR (133 downto 0);
    signal mul_ln125_1_fu_1205_p00 : STD_LOGIC_VECTOR (64 downto 0);
    signal mul_ln125_fu_1161_p00 : STD_LOGIC_VECTOR (64 downto 0);
    signal mul_ln271_1_fu_1812_p00 : STD_LOGIC_VECTOR (38 downto 0);
    signal mul_ln271_2_fu_1825_p00 : STD_LOGIC_VECTOR (70 downto 0);
    signal mul_ln271_2_fu_1825_p10 : STD_LOGIC_VECTOR (70 downto 0);
    signal mul_ln271_3_fu_1837_p00 : STD_LOGIC_VECTOR (102 downto 0);
    signal mul_ln271_3_fu_1837_p10 : STD_LOGIC_VECTOR (102 downto 0);
    signal mul_ln271_fu_1793_p00 : STD_LOGIC_VECTOR (66 downto 0);
    signal mul_ln310_1_fu_1718_p00 : STD_LOGIC_VECTOR (64 downto 0);
    signal mul_ln310_fu_1698_p00 : STD_LOGIC_VECTOR (64 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component conv_kernel_controller IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        layer_cnt_read : IN STD_LOGIC_VECTOR (31 downto 0);
        nif_read : IN STD_LOGIC_VECTOR (31 downto 0);
        nof_read : IN STD_LOGIC_VECTOR (31 downto 0);
        noy_read : IN STD_LOGIC_VECTOR (31 downto 0);
        nox_read : IN STD_LOGIC_VECTOR (31 downto 0);
        nkx_read : IN STD_LOGIC_VECTOR (31 downto 0);
        nky_read : IN STD_LOGIC_VECTOR (31 downto 0);
        stride_read : IN STD_LOGIC_VECTOR (31 downto 0);
        pad_read : IN STD_LOGIC_VECTOR (31 downto 0);
        bb_en_read : IN STD_LOGIC;
        conv_en_read : IN STD_LOGIC;
        bn_en_read : IN STD_LOGIC;
        skip_en_read : IN STD_LOGIC;
        relu_en_read : IN STD_LOGIC;
        max_pool_en_read : IN STD_LOGIC;
        avg_pool_en_read : IN STD_LOGIC;
        fc_en_read : IN STD_LOGIC;
        base_addr_in_read : IN STD_LOGIC_VECTOR (31 downto 0);
        base_addr_out_read : IN STD_LOGIC_VECTOR (31 downto 0);
        base_addr_add_read : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_base_read : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_size_read : IN STD_LOGIC_VECTOR (31 downto 0);
        bn_weight_base_read : IN STD_LOGIC_VECTOR (31 downto 0);
        bn_weight_size_read : IN STD_LOGIC_VECTOR (31 downto 0);
        in_size_read : IN STD_LOGIC_VECTOR (31 downto 0);
        out_size_read : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component conv_kernel_conv_kernel_Pipeline_conv_kernel_loop2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem0_AWREADY : IN STD_LOGIC;
        m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WVALID : OUT STD_LOGIC;
        m_axi_gmem0_WREADY : IN STD_LOGIC;
        m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_WLAST : OUT STD_LOGIC;
        m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem0_ARREADY : IN STD_LOGIC;
        m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RVALID : IN STD_LOGIC;
        m_axi_gmem0_RREADY : OUT STD_LOGIC;
        m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_RLAST : IN STD_LOGIC;
        m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BVALID : IN STD_LOGIC;
        m_axi_gmem0_BREADY : OUT STD_LOGIC;
        m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln1409_1 : IN STD_LOGIC_VECTOR (61 downto 0);
        sext_ln1409 : IN STD_LOGIC_VECTOR (61 downto 0);
        in_size : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component conv_kernel_load_input IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem0_AWREADY : IN STD_LOGIC;
        m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WVALID : OUT STD_LOGIC;
        m_axi_gmem0_WREADY : IN STD_LOGIC;
        m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_WLAST : OUT STD_LOGIC;
        m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem0_ARREADY : IN STD_LOGIC;
        m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RVALID : IN STD_LOGIC;
        m_axi_gmem0_RREADY : OUT STD_LOGIC;
        m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_RLAST : IN STD_LOGIC;
        m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BVALID : IN STD_LOGIC;
        m_axi_gmem0_BREADY : OUT STD_LOGIC;
        m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        act_mem : IN STD_LOGIC_VECTOR (63 downto 0);
        load_input_fifo5_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        load_input_fifo5_full_n : IN STD_LOGIC;
        load_input_fifo5_write : OUT STD_LOGIC;
        base_addr : IN STD_LOGIC_VECTOR (31 downto 0);
        nky : IN STD_LOGIC_VECTOR (31 downto 0);
        nkx : IN STD_LOGIC_VECTOR (31 downto 0);
        nof : IN STD_LOGIC_VECTOR (31 downto 0);
        nif : IN STD_LOGIC_VECTOR (31 downto 0);
        noy : IN STD_LOGIC_VECTOR (31 downto 0);
        nox : IN STD_LOGIC_VECTOR (31 downto 0);
        stride : IN STD_LOGIC_VECTOR (31 downto 0);
        pad : IN STD_LOGIC_VECTOR (31 downto 0);
        bb_en : IN STD_LOGIC_VECTOR (0 downto 0);
        conv_en : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component conv_kernel_PE IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        load_input_fifo5_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        load_input_fifo5_empty_n : IN STD_LOGIC;
        load_input_fifo5_read : OUT STD_LOGIC;
        load_weight_fifo6_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        load_weight_fifo6_empty_n : IN STD_LOGIC;
        load_weight_fifo6_read : OUT STD_LOGIC;
        pe_out_fifo7_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        pe_out_fifo7_full_n : IN STD_LOGIC;
        pe_out_fifo7_write : OUT STD_LOGIC;
        nky : IN STD_LOGIC_VECTOR (31 downto 0);
        nkx : IN STD_LOGIC_VECTOR (31 downto 0);
        nof : IN STD_LOGIC_VECTOR (31 downto 0);
        nif : IN STD_LOGIC_VECTOR (31 downto 0);
        noy : IN STD_LOGIC_VECTOR (31 downto 0);
        nox : IN STD_LOGIC_VECTOR (31 downto 0);
        bb_en : IN STD_LOGIC_VECTOR (0 downto 0);
        conv_en : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_2949_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_2949_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_2949_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_2949_p_ce : OUT STD_LOGIC );
    end component;


    component conv_kernel_conv_kernel_Pipeline_load_weight_loop9 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem0_AWREADY : IN STD_LOGIC;
        m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WVALID : OUT STD_LOGIC;
        m_axi_gmem0_WREADY : IN STD_LOGIC;
        m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_WLAST : OUT STD_LOGIC;
        m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem0_ARREADY : IN STD_LOGIC;
        m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RVALID : IN STD_LOGIC;
        m_axi_gmem0_RREADY : OUT STD_LOGIC;
        m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_RLAST : IN STD_LOGIC;
        m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BVALID : IN STD_LOGIC;
        m_axi_gmem0_BREADY : OUT STD_LOGIC;
        m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        load_weight_fifo_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        load_weight_fifo_full_n : IN STD_LOGIC;
        load_weight_fifo_write : OUT STD_LOGIC;
        sext_ln141 : IN STD_LOGIC_VECTOR (61 downto 0);
        nkx : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component conv_kernel_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem0_AWREADY : IN STD_LOGIC;
        m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WVALID : OUT STD_LOGIC;
        m_axi_gmem0_WREADY : IN STD_LOGIC;
        m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_WLAST : OUT STD_LOGIC;
        m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem0_ARREADY : IN STD_LOGIC;
        m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RVALID : IN STD_LOGIC;
        m_axi_gmem0_RREADY : OUT STD_LOGIC;
        m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_RLAST : IN STD_LOGIC;
        m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BVALID : IN STD_LOGIC;
        m_axi_gmem0_BREADY : OUT STD_LOGIC;
        m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        bn_weight_base : IN STD_LOGIC_VECTOR (31 downto 0);
        bn_weight_mem : IN STD_LOGIC_VECTOR (63 downto 0);
        add14_i : IN STD_LOGIC_VECTOR (31 downto 0);
        nof : IN STD_LOGIC_VECTOR (31 downto 0);
        bound213 : IN STD_LOGIC_VECTOR (101 downto 0);
        bound184 : IN STD_LOGIC_VECTOR (69 downto 0);
        bound172 : IN STD_LOGIC_VECTOR (37 downto 0);
        icmp_ln314 : IN STD_LOGIC_VECTOR (0 downto 0);
        pe_out_fifo_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        pe_out_fifo_empty_n : IN STD_LOGIC;
        pe_out_fifo_read : OUT STD_LOGIC;
        bn_en : IN STD_LOGIC_VECTOR (0 downto 0);
        bn_out_fifo_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        bn_out_fifo_full_n : IN STD_LOGIC;
        bn_out_fifo_write : OUT STD_LOGIC;
        grp_fu_2953_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_2953_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_2953_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_2953_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_2953_p_ce : OUT STD_LOGIC;
        grp_fu_2949_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_2949_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_2949_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_2949_p_ce : OUT STD_LOGIC );
    end component;


    component conv_kernel_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem0_AWREADY : IN STD_LOGIC;
        m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WVALID : OUT STD_LOGIC;
        m_axi_gmem0_WREADY : IN STD_LOGIC;
        m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_WLAST : OUT STD_LOGIC;
        m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem0_ARREADY : IN STD_LOGIC;
        m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RVALID : IN STD_LOGIC;
        m_axi_gmem0_RREADY : OUT STD_LOGIC;
        m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_RLAST : IN STD_LOGIC;
        m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BVALID : IN STD_LOGIC;
        m_axi_gmem0_BREADY : OUT STD_LOGIC;
        m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        bn_out_fifo_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        bn_out_fifo_empty_n : IN STD_LOGIC;
        bn_out_fifo_read : OUT STD_LOGIC;
        skip_out_fifo_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        skip_out_fifo_full_n : IN STD_LOGIC;
        skip_out_fifo_write : OUT STD_LOGIC;
        noy : IN STD_LOGIC_VECTOR (31 downto 0);
        bound213 : IN STD_LOGIC_VECTOR (101 downto 0);
        relu_en : IN STD_LOGIC_VECTOR (0 downto 0);
        bound184 : IN STD_LOGIC_VECTOR (69 downto 0);
        base_addr_add : IN STD_LOGIC_VECTOR (31 downto 0);
        bound172 : IN STD_LOGIC_VECTOR (37 downto 0);
        icmp_ln314 : IN STD_LOGIC_VECTOR (0 downto 0);
        nox : IN STD_LOGIC_VECTOR (31 downto 0);
        skip_en : IN STD_LOGIC_VECTOR (0 downto 0);
        act_mem : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_2953_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_2953_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_2953_p_opcode : OUT STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_2953_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_2953_p_ce : OUT STD_LOGIC;
        grp_fu_2957_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_2957_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_2957_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_2957_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_2957_p_ce : OUT STD_LOGIC );
    end component;


    component conv_kernel_conv_kernel_Pipeline_sotre_output_loop6 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem0_AWREADY : IN STD_LOGIC;
        m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WVALID : OUT STD_LOGIC;
        m_axi_gmem0_WREADY : IN STD_LOGIC;
        m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_WLAST : OUT STD_LOGIC;
        m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem0_ARREADY : IN STD_LOGIC;
        m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RVALID : IN STD_LOGIC;
        m_axi_gmem0_RREADY : OUT STD_LOGIC;
        m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_RLAST : IN STD_LOGIC;
        m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BVALID : IN STD_LOGIC;
        m_axi_gmem0_BREADY : OUT STD_LOGIC;
        m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        skip_out_fifo_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        skip_out_fifo_empty_n : IN STD_LOGIC;
        skip_out_fifo_read : OUT STD_LOGIC;
        noy : IN STD_LOGIC_VECTOR (31 downto 0);
        nox : IN STD_LOGIC_VECTOR (31 downto 0);
        base_addr_out : IN STD_LOGIC_VECTOR (31 downto 0);
        mul_ln271_3 : IN STD_LOGIC_VECTOR (102 downto 0);
        mul_ln271_2 : IN STD_LOGIC_VECTOR (70 downto 0);
        mul_ln271_1 : IN STD_LOGIC_VECTOR (38 downto 0);
        icmp_ln275 : IN STD_LOGIC_VECTOR (0 downto 0);
        act_mem : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component conv_kernel_max_pool IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem0_AWREADY : IN STD_LOGIC;
        m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WVALID : OUT STD_LOGIC;
        m_axi_gmem0_WREADY : IN STD_LOGIC;
        m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_WLAST : OUT STD_LOGIC;
        m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem0_ARREADY : IN STD_LOGIC;
        m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RVALID : IN STD_LOGIC;
        m_axi_gmem0_RREADY : OUT STD_LOGIC;
        m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_RLAST : IN STD_LOGIC;
        m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BVALID : IN STD_LOGIC;
        m_axi_gmem0_BREADY : OUT STD_LOGIC;
        m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        act_mem : IN STD_LOGIC_VECTOR (63 downto 0);
        in_base_addr : IN STD_LOGIC_VECTOR (31 downto 0);
        out_base_addr : IN STD_LOGIC_VECTOR (31 downto 0);
        nif : IN STD_LOGIC_VECTOR (31 downto 0);
        noy : IN STD_LOGIC_VECTOR (31 downto 0);
        nox : IN STD_LOGIC_VECTOR (31 downto 0);
        stride : IN STD_LOGIC_VECTOR (31 downto 0);
        pad : IN STD_LOGIC_VECTOR (31 downto 0);
        max_pool_en : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_2957_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_2957_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_2957_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_2957_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_2957_p_ce : OUT STD_LOGIC );
    end component;


    component conv_kernel_avg_pool IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem0_AWREADY : IN STD_LOGIC;
        m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WVALID : OUT STD_LOGIC;
        m_axi_gmem0_WREADY : IN STD_LOGIC;
        m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_WLAST : OUT STD_LOGIC;
        m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem0_ARREADY : IN STD_LOGIC;
        m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RVALID : IN STD_LOGIC;
        m_axi_gmem0_RREADY : OUT STD_LOGIC;
        m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_RLAST : IN STD_LOGIC;
        m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BVALID : IN STD_LOGIC;
        m_axi_gmem0_BREADY : OUT STD_LOGIC;
        m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        act_mem : IN STD_LOGIC_VECTOR (63 downto 0);
        in_base_addr : IN STD_LOGIC_VECTOR (31 downto 0);
        out_base_addr : IN STD_LOGIC_VECTOR (31 downto 0);
        nif : IN STD_LOGIC_VECTOR (31 downto 0);
        avg_pool_en : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_2953_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_2953_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_2953_p_opcode : OUT STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_2953_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_2953_p_ce : OUT STD_LOGIC );
    end component;


    component conv_kernel_conv_kernel_Pipeline_fc_loop1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem0_AWREADY : IN STD_LOGIC;
        m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WVALID : OUT STD_LOGIC;
        m_axi_gmem0_WREADY : IN STD_LOGIC;
        m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_WLAST : OUT STD_LOGIC;
        m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem0_ARREADY : IN STD_LOGIC;
        m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RVALID : IN STD_LOGIC;
        m_axi_gmem0_RREADY : OUT STD_LOGIC;
        m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_RLAST : IN STD_LOGIC;
        m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BVALID : IN STD_LOGIC;
        m_axi_gmem0_BREADY : OUT STD_LOGIC;
        m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln514 : IN STD_LOGIC_VECTOR (61 downto 0);
        nof : IN STD_LOGIC_VECTOR (31 downto 0);
        trunc_ln507_cast : IN STD_LOGIC_VECTOR (61 downto 0);
        base_addr_out : IN STD_LOGIC_VECTOR (31 downto 0);
        act_mem : IN STD_LOGIC_VECTOR (63 downto 0);
        nif : IN STD_LOGIC_VECTOR (31 downto 0);
        cmp21_i83 : IN STD_LOGIC_VECTOR (0 downto 0);
        add_ln507 : IN STD_LOGIC_VECTOR (31 downto 0);
        bn_weight_base : IN STD_LOGIC_VECTOR (31 downto 0);
        bn_weight_mem : IN STD_LOGIC_VECTOR (63 downto 0);
        grp_fu_2953_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_2953_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_2953_p_opcode : OUT STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_2953_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_2953_p_ce : OUT STD_LOGIC;
        grp_fu_2949_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_2949_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_2949_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_2949_p_ce : OUT STD_LOGIC );
    end component;


    component conv_kernel_conv_kernel_Pipeline_conv_kernel_loop3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem0_AWREADY : IN STD_LOGIC;
        m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WVALID : OUT STD_LOGIC;
        m_axi_gmem0_WREADY : IN STD_LOGIC;
        m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_WLAST : OUT STD_LOGIC;
        m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem0_ARREADY : IN STD_LOGIC;
        m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RVALID : IN STD_LOGIC;
        m_axi_gmem0_RREADY : OUT STD_LOGIC;
        m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_RLAST : IN STD_LOGIC;
        m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BVALID : IN STD_LOGIC;
        m_axi_gmem0_BREADY : OUT STD_LOGIC;
        m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln1444 : IN STD_LOGIC_VECTOR (61 downto 0);
        sext_ln1444_1 : IN STD_LOGIC_VECTOR (61 downto 0);
        out_size : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component conv_kernel_mul_32ns_38ns_70_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (37 downto 0);
        dout : OUT STD_LOGIC_VECTOR (69 downto 0) );
    end component;


    component conv_kernel_mul_32ns_34ns_65_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (33 downto 0);
        dout : OUT STD_LOGIC_VECTOR (64 downto 0) );
    end component;


    component conv_kernel_mul_30ns_70ns_102_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (29 downto 0);
        din1 : IN STD_LOGIC_VECTOR (69 downto 0);
        dout : OUT STD_LOGIC_VECTOR (101 downto 0) );
    end component;


    component conv_kernel_mul_30ns_100ns_134_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (29 downto 0);
        din1 : IN STD_LOGIC_VECTOR (99 downto 0);
        dout : OUT STD_LOGIC_VECTOR (133 downto 0) );
    end component;


    component conv_kernel_mul_32ns_130ns_166_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (129 downto 0);
        dout : OUT STD_LOGIC_VECTOR (165 downto 0) );
    end component;


    component conv_kernel_mul_32s_32s_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component conv_kernel_mul_30ns_7ns_38_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (29 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (37 downto 0) );
    end component;


    component conv_kernel_mul_30ns_37ns_70_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (29 downto 0);
        din1 : IN STD_LOGIC_VECTOR (36 downto 0);
        dout : OUT STD_LOGIC_VECTOR (69 downto 0) );
    end component;


    component conv_kernel_mul_32ns_68ns_102_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (67 downto 0);
        dout : OUT STD_LOGIC_VECTOR (101 downto 0) );
    end component;


    component conv_kernel_mul_33ns_35ns_67_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (32 downto 0);
        din1 : IN STD_LOGIC_VECTOR (34 downto 0);
        dout : OUT STD_LOGIC_VECTOR (66 downto 0) );
    end component;


    component conv_kernel_mul_31ns_7ns_39_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (30 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        dout : OUT STD_LOGIC_VECTOR (38 downto 0) );
    end component;


    component conv_kernel_mul_30ns_38ns_71_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (29 downto 0);
        din1 : IN STD_LOGIC_VECTOR (37 downto 0);
        dout : OUT STD_LOGIC_VECTOR (70 downto 0) );
    end component;


    component conv_kernel_mul_32ns_69ns_103_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (68 downto 0);
        dout : OUT STD_LOGIC_VECTOR (102 downto 0) );
    end component;


    component conv_kernel_fmul_32ns_32ns_32_3_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component conv_kernel_faddfsub_32ns_32ns_32_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component conv_kernel_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component conv_kernel_fifo_w32_d9_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component conv_kernel_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        act_mem : OUT STD_LOGIC_VECTOR (63 downto 0);
        act_in : OUT STD_LOGIC_VECTOR (63 downto 0);
        act_out : OUT STD_LOGIC_VECTOR (63 downto 0);
        weight_mem : OUT STD_LOGIC_VECTOR (63 downto 0);
        bn_weight_mem : OUT STD_LOGIC_VECTOR (63 downto 0);
        start_layer : OUT STD_LOGIC_VECTOR (63 downto 0);
        end_layer : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component conv_kernel_gmem0_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;



begin
    grp_controller_fu_536 : component conv_kernel_controller
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_controller_fu_536_ap_start,
        ap_done => grp_controller_fu_536_ap_done,
        ap_idle => grp_controller_fu_536_ap_idle,
        ap_ready => grp_controller_fu_536_ap_ready,
        layer_cnt_read => layer_cnt_2_fu_240,
        nif_read => nif_027_fu_244,
        nof_read => nof_028_fu_248,
        noy_read => noy_029_fu_252,
        nox_read => nox_030_fu_256,
        nkx_read => nkx_031_fu_260,
        nky_read => nky_032_fu_264,
        stride_read => stride_1_fu_268,
        pad_read => pad_1_fu_272,
        bb_en_read => grp_controller_fu_536_bb_en_read,
        conv_en_read => grp_controller_fu_536_conv_en_read,
        bn_en_read => grp_controller_fu_536_bn_en_read,
        skip_en_read => grp_controller_fu_536_skip_en_read,
        relu_en_read => grp_controller_fu_536_relu_en_read,
        max_pool_en_read => grp_controller_fu_536_max_pool_en_read,
        avg_pool_en_read => grp_controller_fu_536_avg_pool_en_read,
        fc_en_read => grp_controller_fu_536_fc_en_read,
        base_addr_in_read => base_addr_in_043_fu_276,
        base_addr_out_read => base_addr_out_044_fu_280,
        base_addr_add_read => base_addr_add_1_fu_284,
        weight_base_read => weight_base_046_fu_288,
        weight_size_read => weight_size_1_fu_292,
        bn_weight_base_read => bn_weight_base_048_fu_296,
        bn_weight_size_read => bn_weight_size_1_fu_300,
        in_size_read => in_size_1_fu_304,
        out_size_read => out_size_1_fu_308,
        ap_return_0 => grp_controller_fu_536_ap_return_0,
        ap_return_1 => grp_controller_fu_536_ap_return_1,
        ap_return_2 => grp_controller_fu_536_ap_return_2,
        ap_return_3 => grp_controller_fu_536_ap_return_3,
        ap_return_4 => grp_controller_fu_536_ap_return_4,
        ap_return_5 => grp_controller_fu_536_ap_return_5,
        ap_return_6 => grp_controller_fu_536_ap_return_6,
        ap_return_7 => grp_controller_fu_536_ap_return_7,
        ap_return_8 => grp_controller_fu_536_ap_return_8,
        ap_return_9 => grp_controller_fu_536_ap_return_9,
        ap_return_10 => grp_controller_fu_536_ap_return_10,
        ap_return_11 => grp_controller_fu_536_ap_return_11,
        ap_return_12 => grp_controller_fu_536_ap_return_12,
        ap_return_13 => grp_controller_fu_536_ap_return_13,
        ap_return_14 => grp_controller_fu_536_ap_return_14,
        ap_return_15 => grp_controller_fu_536_ap_return_15,
        ap_return_16 => grp_controller_fu_536_ap_return_16,
        ap_return_17 => grp_controller_fu_536_ap_return_17,
        ap_return_18 => grp_controller_fu_536_ap_return_18,
        ap_return_19 => grp_controller_fu_536_ap_return_19,
        ap_return_20 => grp_controller_fu_536_ap_return_20,
        ap_return_21 => grp_controller_fu_536_ap_return_21,
        ap_return_22 => grp_controller_fu_536_ap_return_22,
        ap_return_23 => grp_controller_fu_536_ap_return_23,
        ap_return_24 => grp_controller_fu_536_ap_return_24);

    grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566 : component conv_kernel_conv_kernel_Pipeline_conv_kernel_loop2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_ap_start,
        ap_done => grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_ap_done,
        ap_idle => grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_ap_idle,
        ap_ready => grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_ap_ready,
        m_axi_gmem0_AWVALID => grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY => gmem0_AWREADY,
        m_axi_gmem0_AWADDR => grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID => grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN => grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE => grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST => grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK => grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE => grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT => grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS => grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION => grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER => grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID => grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY => gmem0_WREADY,
        m_axi_gmem0_WDATA => grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB => grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST => grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_WLAST,
        m_axi_gmem0_WID => grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_WID,
        m_axi_gmem0_WUSER => grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID => grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY => gmem0_ARREADY,
        m_axi_gmem0_ARADDR => grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID => grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN => grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE => grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST => grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK => grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE => grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT => grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS => grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION => grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER => grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID => gmem0_RVALID,
        m_axi_gmem0_RREADY => grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA => gmem0_RDATA,
        m_axi_gmem0_RLAST => ap_const_logic_0,
        m_axi_gmem0_RID => ap_const_lv1_0,
        m_axi_gmem0_RFIFONUM => gmem0_RFIFONUM,
        m_axi_gmem0_RUSER => ap_const_lv1_0,
        m_axi_gmem0_RRESP => ap_const_lv2_0,
        m_axi_gmem0_BVALID => gmem0_BVALID,
        m_axi_gmem0_BREADY => grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP => ap_const_lv2_0,
        m_axi_gmem0_BID => ap_const_lv1_0,
        m_axi_gmem0_BUSER => ap_const_lv1_0,
        sext_ln1409_1 => trunc_ln1409_1_reg_2598,
        sext_ln1409 => trunc_ln5_reg_2273,
        in_size => in_size_reg_2576);

    grp_load_input_fu_575 : component conv_kernel_load_input
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_load_input_fu_575_ap_start,
        ap_done => grp_load_input_fu_575_ap_done,
        ap_idle => grp_load_input_fu_575_ap_idle,
        ap_ready => grp_load_input_fu_575_ap_ready,
        m_axi_gmem0_AWVALID => grp_load_input_fu_575_m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY => ap_const_logic_0,
        m_axi_gmem0_AWADDR => grp_load_input_fu_575_m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID => grp_load_input_fu_575_m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN => grp_load_input_fu_575_m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE => grp_load_input_fu_575_m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST => grp_load_input_fu_575_m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK => grp_load_input_fu_575_m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE => grp_load_input_fu_575_m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT => grp_load_input_fu_575_m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS => grp_load_input_fu_575_m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION => grp_load_input_fu_575_m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER => grp_load_input_fu_575_m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID => grp_load_input_fu_575_m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY => ap_const_logic_0,
        m_axi_gmem0_WDATA => grp_load_input_fu_575_m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB => grp_load_input_fu_575_m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST => grp_load_input_fu_575_m_axi_gmem0_WLAST,
        m_axi_gmem0_WID => grp_load_input_fu_575_m_axi_gmem0_WID,
        m_axi_gmem0_WUSER => grp_load_input_fu_575_m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID => grp_load_input_fu_575_m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY => gmem0_ARREADY,
        m_axi_gmem0_ARADDR => grp_load_input_fu_575_m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID => grp_load_input_fu_575_m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN => grp_load_input_fu_575_m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE => grp_load_input_fu_575_m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST => grp_load_input_fu_575_m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK => grp_load_input_fu_575_m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE => grp_load_input_fu_575_m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT => grp_load_input_fu_575_m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS => grp_load_input_fu_575_m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION => grp_load_input_fu_575_m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER => grp_load_input_fu_575_m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID => gmem0_RVALID,
        m_axi_gmem0_RREADY => grp_load_input_fu_575_m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA => gmem0_RDATA,
        m_axi_gmem0_RLAST => ap_const_logic_0,
        m_axi_gmem0_RID => ap_const_lv1_0,
        m_axi_gmem0_RFIFONUM => gmem0_RFIFONUM,
        m_axi_gmem0_RUSER => ap_const_lv1_0,
        m_axi_gmem0_RRESP => ap_const_lv2_0,
        m_axi_gmem0_BVALID => ap_const_logic_0,
        m_axi_gmem0_BREADY => grp_load_input_fu_575_m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP => ap_const_lv2_0,
        m_axi_gmem0_BID => ap_const_lv1_0,
        m_axi_gmem0_BUSER => ap_const_lv1_0,
        act_mem => act_mem_read_reg_2218,
        load_input_fifo5_din => grp_load_input_fu_575_load_input_fifo5_din,
        load_input_fifo5_full_n => load_input_fifo_full_n,
        load_input_fifo5_write => grp_load_input_fu_575_load_input_fifo5_write,
        base_addr => base_addr_in_reg_2525,
        nky => nky_reg_2454,
        nkx => nkx_reg_2443,
        nof => nof_reg_2407,
        nif => nif_reg_2392,
        noy => noy_reg_2420,
        nox => nox_reg_2431,
        stride => stride_reg_2468,
        pad => pad_reg_2475,
        bb_en => bb_en_reg_2482,
        conv_en => conv_en_reg_2489);

    grp_PE_fu_594 : component conv_kernel_PE
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_PE_fu_594_ap_start,
        ap_done => grp_PE_fu_594_ap_done,
        ap_idle => grp_PE_fu_594_ap_idle,
        ap_ready => grp_PE_fu_594_ap_ready,
        load_input_fifo5_dout => load_input_fifo_dout,
        load_input_fifo5_empty_n => load_input_fifo_empty_n,
        load_input_fifo5_read => grp_PE_fu_594_load_input_fifo5_read,
        load_weight_fifo6_dout => load_weight_fifo_dout,
        load_weight_fifo6_empty_n => load_weight_fifo_empty_n,
        load_weight_fifo6_read => grp_PE_fu_594_load_weight_fifo6_read,
        pe_out_fifo7_din => grp_PE_fu_594_pe_out_fifo7_din,
        pe_out_fifo7_full_n => pe_out_fifo_full_n,
        pe_out_fifo7_write => grp_PE_fu_594_pe_out_fifo7_write,
        nky => nky_reg_2454,
        nkx => nkx_reg_2443,
        nof => nof_reg_2407,
        nif => nif_reg_2392,
        noy => noy_reg_2420,
        nox => nox_reg_2431,
        bb_en => bb_en_reg_2482,
        conv_en => conv_en_reg_2489,
        grp_fu_2949_p_din0 => grp_PE_fu_594_grp_fu_2949_p_din0,
        grp_fu_2949_p_din1 => grp_PE_fu_594_grp_fu_2949_p_din1,
        grp_fu_2949_p_dout0 => grp_fu_2949_p2,
        grp_fu_2949_p_ce => grp_PE_fu_594_grp_fu_2949_p_ce);

    grp_conv_kernel_Pipeline_load_weight_loop9_fu_609 : component conv_kernel_conv_kernel_Pipeline_load_weight_loop9
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_ap_start,
        ap_done => grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_ap_done,
        ap_idle => grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_ap_idle,
        ap_ready => grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_ap_ready,
        m_axi_gmem0_AWVALID => grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY => ap_const_logic_0,
        m_axi_gmem0_AWADDR => grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID => grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN => grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE => grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST => grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK => grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE => grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT => grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS => grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION => grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER => grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID => grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY => ap_const_logic_0,
        m_axi_gmem0_WDATA => grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB => grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST => grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_WLAST,
        m_axi_gmem0_WID => grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_WID,
        m_axi_gmem0_WUSER => grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID => grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY => gmem0_ARREADY,
        m_axi_gmem0_ARADDR => grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID => grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN => grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE => grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST => grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK => grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE => grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT => grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS => grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION => grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER => grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID => gmem0_RVALID,
        m_axi_gmem0_RREADY => grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA => gmem0_RDATA,
        m_axi_gmem0_RLAST => ap_const_logic_0,
        m_axi_gmem0_RID => ap_const_lv1_0,
        m_axi_gmem0_RFIFONUM => gmem0_RFIFONUM,
        m_axi_gmem0_RUSER => ap_const_lv1_0,
        m_axi_gmem0_RRESP => ap_const_lv2_0,
        m_axi_gmem0_BVALID => ap_const_logic_0,
        m_axi_gmem0_BREADY => grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP => ap_const_lv2_0,
        m_axi_gmem0_BID => ap_const_lv1_0,
        m_axi_gmem0_BUSER => ap_const_lv1_0,
        load_weight_fifo_din => grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_load_weight_fifo_din,
        load_weight_fifo_full_n => load_weight_fifo_full_n,
        load_weight_fifo_write => grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_load_weight_fifo_write,
        sext_ln141 => trunc_ln7_reg_2800,
        nkx => nkx_reg_2443);

    grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618 : component conv_kernel_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_ap_start,
        ap_done => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_ap_done,
        ap_idle => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_ap_idle,
        ap_ready => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_ap_ready,
        m_axi_gmem0_AWVALID => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY => ap_const_logic_0,
        m_axi_gmem0_AWADDR => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY => ap_const_logic_0,
        m_axi_gmem0_WDATA => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_WLAST,
        m_axi_gmem0_WID => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_WID,
        m_axi_gmem0_WUSER => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY => gmem0_ARREADY,
        m_axi_gmem0_ARADDR => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID => gmem0_RVALID,
        m_axi_gmem0_RREADY => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA => gmem0_RDATA,
        m_axi_gmem0_RLAST => ap_const_logic_0,
        m_axi_gmem0_RID => ap_const_lv1_0,
        m_axi_gmem0_RFIFONUM => gmem0_RFIFONUM,
        m_axi_gmem0_RUSER => ap_const_lv1_0,
        m_axi_gmem0_RRESP => ap_const_lv2_0,
        m_axi_gmem0_BVALID => ap_const_logic_0,
        m_axi_gmem0_BREADY => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP => ap_const_lv2_0,
        m_axi_gmem0_BID => ap_const_lv1_0,
        m_axi_gmem0_BUSER => ap_const_lv1_0,
        bn_weight_base => bn_weight_base_reg_2562,
        bn_weight_mem => bn_weight_mem_read_reg_2206,
        add14_i => add14_i_reg_2866,
        nof => nof_reg_2407,
        bound213 => bound213_reg_2871,
        bound184 => bound184_reg_2859,
        bound172 => bound172_reg_2852,
        icmp_ln314 => icmp_ln314_reg_2877,
        pe_out_fifo_dout => pe_out_fifo_dout,
        pe_out_fifo_empty_n => pe_out_fifo_empty_n,
        pe_out_fifo_read => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_pe_out_fifo_read,
        bn_en => bn_en_reg_2496,
        bn_out_fifo_din => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_bn_out_fifo_din,
        bn_out_fifo_full_n => bn_out_fifo_full_n,
        bn_out_fifo_write => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_bn_out_fifo_write,
        grp_fu_2953_p_din0 => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_grp_fu_2953_p_din0,
        grp_fu_2953_p_din1 => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_grp_fu_2953_p_din1,
        grp_fu_2953_p_opcode => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_grp_fu_2953_p_opcode,
        grp_fu_2953_p_dout0 => grp_fu_2953_p2,
        grp_fu_2953_p_ce => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_grp_fu_2953_p_ce,
        grp_fu_2949_p_din0 => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_grp_fu_2949_p_din0,
        grp_fu_2949_p_din1 => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_grp_fu_2949_p_din1,
        grp_fu_2949_p_dout0 => grp_fu_2949_p2,
        grp_fu_2949_p_ce => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_grp_fu_2949_p_ce);

    grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635 : component conv_kernel_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_ap_start,
        ap_done => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_ap_done,
        ap_idle => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_ap_idle,
        ap_ready => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_ap_ready,
        m_axi_gmem0_AWVALID => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY => ap_const_logic_0,
        m_axi_gmem0_AWADDR => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY => ap_const_logic_0,
        m_axi_gmem0_WDATA => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_WLAST,
        m_axi_gmem0_WID => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_WID,
        m_axi_gmem0_WUSER => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY => gmem0_ARREADY,
        m_axi_gmem0_ARADDR => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID => gmem0_RVALID,
        m_axi_gmem0_RREADY => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA => gmem0_RDATA,
        m_axi_gmem0_RLAST => ap_const_logic_0,
        m_axi_gmem0_RID => ap_const_lv1_0,
        m_axi_gmem0_RFIFONUM => gmem0_RFIFONUM,
        m_axi_gmem0_RUSER => ap_const_lv1_0,
        m_axi_gmem0_RRESP => ap_const_lv2_0,
        m_axi_gmem0_BVALID => ap_const_logic_0,
        m_axi_gmem0_BREADY => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP => ap_const_lv2_0,
        m_axi_gmem0_BID => ap_const_lv1_0,
        m_axi_gmem0_BUSER => ap_const_lv1_0,
        bn_out_fifo_dout => bn_out_fifo_dout,
        bn_out_fifo_empty_n => bn_out_fifo_empty_n,
        bn_out_fifo_read => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_bn_out_fifo_read,
        skip_out_fifo_din => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_skip_out_fifo_din,
        skip_out_fifo_full_n => skip_out_fifo_full_n,
        skip_out_fifo_write => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_skip_out_fifo_write,
        noy => noy_reg_2420,
        bound213 => bound213_reg_2871,
        relu_en => relu_en_reg_2506,
        bound184 => bound184_reg_2859,
        base_addr_add => base_addr_add_reg_2545,
        bound172 => bound172_reg_2852,
        icmp_ln314 => icmp_ln314_reg_2877,
        nox => nox_reg_2431,
        skip_en => skip_en_reg_2501,
        act_mem => act_mem_read_reg_2218,
        grp_fu_2953_p_din0 => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_grp_fu_2953_p_din0,
        grp_fu_2953_p_din1 => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_grp_fu_2953_p_din1,
        grp_fu_2953_p_opcode => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_grp_fu_2953_p_opcode,
        grp_fu_2953_p_dout0 => grp_fu_2953_p2,
        grp_fu_2953_p_ce => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_grp_fu_2953_p_ce,
        grp_fu_2957_p_din0 => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_grp_fu_2957_p_din0,
        grp_fu_2957_p_din1 => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_grp_fu_2957_p_din1,
        grp_fu_2957_p_opcode => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_grp_fu_2957_p_opcode,
        grp_fu_2957_p_dout0 => grp_fu_2957_p2,
        grp_fu_2957_p_ce => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_grp_fu_2957_p_ce);

    grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653 : component conv_kernel_conv_kernel_Pipeline_sotre_output_loop6
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_ap_start,
        ap_done => grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_ap_done,
        ap_idle => grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_ap_idle,
        ap_ready => grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_ap_ready,
        m_axi_gmem0_AWVALID => grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY => gmem0_AWREADY,
        m_axi_gmem0_AWADDR => grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID => grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN => grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE => grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST => grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK => grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE => grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT => grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS => grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION => grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER => grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID => grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY => gmem0_WREADY,
        m_axi_gmem0_WDATA => grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB => grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST => grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_WLAST,
        m_axi_gmem0_WID => grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_WID,
        m_axi_gmem0_WUSER => grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID => grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY => ap_const_logic_0,
        m_axi_gmem0_ARADDR => grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID => grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN => grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE => grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST => grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK => grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE => grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT => grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS => grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION => grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER => grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID => ap_const_logic_0,
        m_axi_gmem0_RREADY => grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA => ap_const_lv32_0,
        m_axi_gmem0_RLAST => ap_const_logic_0,
        m_axi_gmem0_RID => ap_const_lv1_0,
        m_axi_gmem0_RFIFONUM => ap_const_lv9_0,
        m_axi_gmem0_RUSER => ap_const_lv1_0,
        m_axi_gmem0_RRESP => ap_const_lv2_0,
        m_axi_gmem0_BVALID => gmem0_BVALID,
        m_axi_gmem0_BREADY => grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP => ap_const_lv2_0,
        m_axi_gmem0_BID => ap_const_lv1_0,
        m_axi_gmem0_BUSER => ap_const_lv1_0,
        skip_out_fifo_dout => skip_out_fifo_dout,
        skip_out_fifo_empty_n => skip_out_fifo_empty_n,
        skip_out_fifo_read => grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_skip_out_fifo_read,
        noy => noy_reg_2420,
        nox => nox_reg_2431,
        base_addr_out => base_addr_out_reg_2535,
        mul_ln271_3 => mul_ln271_3_reg_2900,
        mul_ln271_2 => mul_ln271_2_reg_2894,
        mul_ln271_1 => mul_ln271_1_reg_2888,
        icmp_ln275 => icmp_ln275_reg_2905,
        act_mem => act_mem_read_reg_2218);

    grp_max_pool_fu_668 : component conv_kernel_max_pool
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_max_pool_fu_668_ap_start,
        ap_done => grp_max_pool_fu_668_ap_done,
        ap_idle => grp_max_pool_fu_668_ap_idle,
        ap_ready => grp_max_pool_fu_668_ap_ready,
        m_axi_gmem0_AWVALID => grp_max_pool_fu_668_m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY => gmem0_AWREADY,
        m_axi_gmem0_AWADDR => grp_max_pool_fu_668_m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID => grp_max_pool_fu_668_m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN => grp_max_pool_fu_668_m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE => grp_max_pool_fu_668_m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST => grp_max_pool_fu_668_m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK => grp_max_pool_fu_668_m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE => grp_max_pool_fu_668_m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT => grp_max_pool_fu_668_m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS => grp_max_pool_fu_668_m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION => grp_max_pool_fu_668_m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER => grp_max_pool_fu_668_m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID => grp_max_pool_fu_668_m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY => gmem0_WREADY,
        m_axi_gmem0_WDATA => grp_max_pool_fu_668_m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB => grp_max_pool_fu_668_m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST => grp_max_pool_fu_668_m_axi_gmem0_WLAST,
        m_axi_gmem0_WID => grp_max_pool_fu_668_m_axi_gmem0_WID,
        m_axi_gmem0_WUSER => grp_max_pool_fu_668_m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID => grp_max_pool_fu_668_m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY => gmem0_ARREADY,
        m_axi_gmem0_ARADDR => grp_max_pool_fu_668_m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID => grp_max_pool_fu_668_m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN => grp_max_pool_fu_668_m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE => grp_max_pool_fu_668_m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST => grp_max_pool_fu_668_m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK => grp_max_pool_fu_668_m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE => grp_max_pool_fu_668_m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT => grp_max_pool_fu_668_m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS => grp_max_pool_fu_668_m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION => grp_max_pool_fu_668_m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER => grp_max_pool_fu_668_m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID => gmem0_RVALID,
        m_axi_gmem0_RREADY => grp_max_pool_fu_668_m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA => gmem0_RDATA,
        m_axi_gmem0_RLAST => ap_const_logic_0,
        m_axi_gmem0_RID => ap_const_lv1_0,
        m_axi_gmem0_RFIFONUM => gmem0_RFIFONUM,
        m_axi_gmem0_RUSER => ap_const_lv1_0,
        m_axi_gmem0_RRESP => ap_const_lv2_0,
        m_axi_gmem0_BVALID => gmem0_BVALID,
        m_axi_gmem0_BREADY => grp_max_pool_fu_668_m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP => ap_const_lv2_0,
        m_axi_gmem0_BID => ap_const_lv1_0,
        m_axi_gmem0_BUSER => ap_const_lv1_0,
        act_mem => act_mem_read_reg_2218,
        in_base_addr => base_addr_in_reg_2525,
        out_base_addr => base_addr_out_reg_2535,
        nif => nif_reg_2392,
        noy => noy_reg_2420,
        nox => nox_reg_2431,
        stride => stride_reg_2468,
        pad => pad_reg_2475,
        max_pool_en => max_pool_en_reg_2511,
        grp_fu_2957_p_din0 => grp_max_pool_fu_668_grp_fu_2957_p_din0,
        grp_fu_2957_p_din1 => grp_max_pool_fu_668_grp_fu_2957_p_din1,
        grp_fu_2957_p_opcode => grp_max_pool_fu_668_grp_fu_2957_p_opcode,
        grp_fu_2957_p_dout0 => grp_fu_2957_p2,
        grp_fu_2957_p_ce => grp_max_pool_fu_668_grp_fu_2957_p_ce);

    grp_avg_pool_fu_683 : component conv_kernel_avg_pool
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_avg_pool_fu_683_ap_start,
        ap_done => grp_avg_pool_fu_683_ap_done,
        ap_idle => grp_avg_pool_fu_683_ap_idle,
        ap_ready => grp_avg_pool_fu_683_ap_ready,
        m_axi_gmem0_AWVALID => grp_avg_pool_fu_683_m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY => gmem0_AWREADY,
        m_axi_gmem0_AWADDR => grp_avg_pool_fu_683_m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID => grp_avg_pool_fu_683_m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN => grp_avg_pool_fu_683_m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE => grp_avg_pool_fu_683_m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST => grp_avg_pool_fu_683_m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK => grp_avg_pool_fu_683_m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE => grp_avg_pool_fu_683_m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT => grp_avg_pool_fu_683_m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS => grp_avg_pool_fu_683_m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION => grp_avg_pool_fu_683_m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER => grp_avg_pool_fu_683_m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID => grp_avg_pool_fu_683_m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY => gmem0_WREADY,
        m_axi_gmem0_WDATA => grp_avg_pool_fu_683_m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB => grp_avg_pool_fu_683_m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST => grp_avg_pool_fu_683_m_axi_gmem0_WLAST,
        m_axi_gmem0_WID => grp_avg_pool_fu_683_m_axi_gmem0_WID,
        m_axi_gmem0_WUSER => grp_avg_pool_fu_683_m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID => grp_avg_pool_fu_683_m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY => gmem0_ARREADY,
        m_axi_gmem0_ARADDR => grp_avg_pool_fu_683_m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID => grp_avg_pool_fu_683_m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN => grp_avg_pool_fu_683_m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE => grp_avg_pool_fu_683_m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST => grp_avg_pool_fu_683_m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK => grp_avg_pool_fu_683_m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE => grp_avg_pool_fu_683_m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT => grp_avg_pool_fu_683_m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS => grp_avg_pool_fu_683_m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION => grp_avg_pool_fu_683_m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER => grp_avg_pool_fu_683_m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID => gmem0_RVALID,
        m_axi_gmem0_RREADY => grp_avg_pool_fu_683_m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA => gmem0_RDATA,
        m_axi_gmem0_RLAST => ap_const_logic_0,
        m_axi_gmem0_RID => ap_const_lv1_0,
        m_axi_gmem0_RFIFONUM => gmem0_RFIFONUM,
        m_axi_gmem0_RUSER => ap_const_lv1_0,
        m_axi_gmem0_RRESP => ap_const_lv2_0,
        m_axi_gmem0_BVALID => gmem0_BVALID,
        m_axi_gmem0_BREADY => grp_avg_pool_fu_683_m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP => ap_const_lv2_0,
        m_axi_gmem0_BID => ap_const_lv1_0,
        m_axi_gmem0_BUSER => ap_const_lv1_0,
        act_mem => act_mem_read_reg_2218,
        in_base_addr => base_addr_in_reg_2525,
        out_base_addr => base_addr_out_reg_2535,
        nif => nif_reg_2392,
        avg_pool_en => avg_pool_en_reg_2516,
        grp_fu_2953_p_din0 => grp_avg_pool_fu_683_grp_fu_2953_p_din0,
        grp_fu_2953_p_din1 => grp_avg_pool_fu_683_grp_fu_2953_p_din1,
        grp_fu_2953_p_opcode => grp_avg_pool_fu_683_grp_fu_2953_p_opcode,
        grp_fu_2953_p_dout0 => grp_fu_2953_p2,
        grp_fu_2953_p_ce => grp_avg_pool_fu_683_grp_fu_2953_p_ce);

    grp_conv_kernel_Pipeline_fc_loop1_fu_694 : component conv_kernel_conv_kernel_Pipeline_fc_loop1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_conv_kernel_Pipeline_fc_loop1_fu_694_ap_start,
        ap_done => grp_conv_kernel_Pipeline_fc_loop1_fu_694_ap_done,
        ap_idle => grp_conv_kernel_Pipeline_fc_loop1_fu_694_ap_idle,
        ap_ready => grp_conv_kernel_Pipeline_fc_loop1_fu_694_ap_ready,
        m_axi_gmem0_AWVALID => grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY => gmem0_AWREADY,
        m_axi_gmem0_AWADDR => grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID => grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN => grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE => grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST => grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK => grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE => grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT => grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS => grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION => grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER => grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID => grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY => gmem0_WREADY,
        m_axi_gmem0_WDATA => grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB => grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST => grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_WLAST,
        m_axi_gmem0_WID => grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_WID,
        m_axi_gmem0_WUSER => grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID => grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY => gmem0_ARREADY,
        m_axi_gmem0_ARADDR => grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID => grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN => grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE => grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST => grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK => grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE => grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT => grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS => grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION => grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER => grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID => gmem0_RVALID,
        m_axi_gmem0_RREADY => grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA => gmem0_RDATA,
        m_axi_gmem0_RLAST => ap_const_logic_0,
        m_axi_gmem0_RID => ap_const_lv1_0,
        m_axi_gmem0_RFIFONUM => gmem0_RFIFONUM,
        m_axi_gmem0_RUSER => ap_const_lv1_0,
        m_axi_gmem0_RRESP => ap_const_lv2_0,
        m_axi_gmem0_BVALID => gmem0_BVALID,
        m_axi_gmem0_BREADY => grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP => ap_const_lv2_0,
        m_axi_gmem0_BID => ap_const_lv1_0,
        m_axi_gmem0_BUSER => ap_const_lv1_0,
        sext_ln514 => trunc_ln1_reg_2925,
        nof => nof_reg_2407,
        trunc_ln507_cast => trunc_ln_reg_2920,
        base_addr_out => base_addr_out_reg_2535,
        act_mem => act_mem_read_reg_2218,
        nif => nif_reg_2392,
        cmp21_i83 => cmp21_i83_reg_2910,
        add_ln507 => add_ln507_reg_2915,
        bn_weight_base => bn_weight_base_reg_2562,
        bn_weight_mem => bn_weight_mem_read_reg_2206,
        grp_fu_2953_p_din0 => grp_conv_kernel_Pipeline_fc_loop1_fu_694_grp_fu_2953_p_din0,
        grp_fu_2953_p_din1 => grp_conv_kernel_Pipeline_fc_loop1_fu_694_grp_fu_2953_p_din1,
        grp_fu_2953_p_opcode => grp_conv_kernel_Pipeline_fc_loop1_fu_694_grp_fu_2953_p_opcode,
        grp_fu_2953_p_dout0 => grp_fu_2953_p2,
        grp_fu_2953_p_ce => grp_conv_kernel_Pipeline_fc_loop1_fu_694_grp_fu_2953_p_ce,
        grp_fu_2949_p_din0 => grp_conv_kernel_Pipeline_fc_loop1_fu_694_grp_fu_2949_p_din0,
        grp_fu_2949_p_din1 => grp_conv_kernel_Pipeline_fc_loop1_fu_694_grp_fu_2949_p_din1,
        grp_fu_2949_p_dout0 => grp_fu_2949_p2,
        grp_fu_2949_p_ce => grp_conv_kernel_Pipeline_fc_loop1_fu_694_grp_fu_2949_p_ce);

    grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710 : component conv_kernel_conv_kernel_Pipeline_conv_kernel_loop3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_ap_start,
        ap_done => grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_ap_done,
        ap_idle => grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_ap_idle,
        ap_ready => grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_ap_ready,
        m_axi_gmem0_AWVALID => grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY => gmem0_AWREADY,
        m_axi_gmem0_AWADDR => grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID => grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN => grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE => grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST => grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK => grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE => grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT => grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS => grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION => grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER => grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID => grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY => gmem0_WREADY,
        m_axi_gmem0_WDATA => grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB => grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST => grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_WLAST,
        m_axi_gmem0_WID => grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_WID,
        m_axi_gmem0_WUSER => grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID => grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY => gmem0_ARREADY,
        m_axi_gmem0_ARADDR => grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID => grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN => grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE => grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST => grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK => grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE => grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT => grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS => grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION => grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER => grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID => gmem0_RVALID,
        m_axi_gmem0_RREADY => grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA => gmem0_RDATA,
        m_axi_gmem0_RLAST => ap_const_logic_0,
        m_axi_gmem0_RID => ap_const_lv1_0,
        m_axi_gmem0_RFIFONUM => gmem0_RFIFONUM,
        m_axi_gmem0_RUSER => ap_const_lv1_0,
        m_axi_gmem0_RRESP => ap_const_lv2_0,
        m_axi_gmem0_BVALID => gmem0_BVALID,
        m_axi_gmem0_BREADY => grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP => ap_const_lv2_0,
        m_axi_gmem0_BID => ap_const_lv1_0,
        m_axi_gmem0_BUSER => ap_const_lv1_0,
        sext_ln1444 => trunc_ln6_reg_2279,
        sext_ln1444_1 => trunc_ln1444_1_reg_2938,
        out_size => out_size_reg_2585);

    control_s_axi_U : component conv_kernel_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        act_mem => act_mem,
        act_in => act_in,
        act_out => act_out,
        weight_mem => weight_mem,
        bn_weight_mem => bn_weight_mem,
        start_layer => start_layer,
        end_layer => end_layer,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    gmem0_m_axi_U : component conv_kernel_gmem0_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        USER_RFIFONUM_WIDTH => 9,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM0_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM0_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM0_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM0_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM0_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM0_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM0_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM0_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM0_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM0_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM0_CACHE_VALUE,
        USER_DW => 32,
        USER_AW => 64)
    port map (
        AWVALID => m_axi_gmem0_AWVALID,
        AWREADY => m_axi_gmem0_AWREADY,
        AWADDR => m_axi_gmem0_AWADDR,
        AWID => m_axi_gmem0_AWID,
        AWLEN => m_axi_gmem0_AWLEN,
        AWSIZE => m_axi_gmem0_AWSIZE,
        AWBURST => m_axi_gmem0_AWBURST,
        AWLOCK => m_axi_gmem0_AWLOCK,
        AWCACHE => m_axi_gmem0_AWCACHE,
        AWPROT => m_axi_gmem0_AWPROT,
        AWQOS => m_axi_gmem0_AWQOS,
        AWREGION => m_axi_gmem0_AWREGION,
        AWUSER => m_axi_gmem0_AWUSER,
        WVALID => m_axi_gmem0_WVALID,
        WREADY => m_axi_gmem0_WREADY,
        WDATA => m_axi_gmem0_WDATA,
        WSTRB => m_axi_gmem0_WSTRB,
        WLAST => m_axi_gmem0_WLAST,
        WID => m_axi_gmem0_WID,
        WUSER => m_axi_gmem0_WUSER,
        ARVALID => m_axi_gmem0_ARVALID,
        ARREADY => m_axi_gmem0_ARREADY,
        ARADDR => m_axi_gmem0_ARADDR,
        ARID => m_axi_gmem0_ARID,
        ARLEN => m_axi_gmem0_ARLEN,
        ARSIZE => m_axi_gmem0_ARSIZE,
        ARBURST => m_axi_gmem0_ARBURST,
        ARLOCK => m_axi_gmem0_ARLOCK,
        ARCACHE => m_axi_gmem0_ARCACHE,
        ARPROT => m_axi_gmem0_ARPROT,
        ARQOS => m_axi_gmem0_ARQOS,
        ARREGION => m_axi_gmem0_ARREGION,
        ARUSER => m_axi_gmem0_ARUSER,
        RVALID => m_axi_gmem0_RVALID,
        RREADY => m_axi_gmem0_RREADY,
        RDATA => m_axi_gmem0_RDATA,
        RLAST => m_axi_gmem0_RLAST,
        RID => m_axi_gmem0_RID,
        RUSER => m_axi_gmem0_RUSER,
        RRESP => m_axi_gmem0_RRESP,
        BVALID => m_axi_gmem0_BVALID,
        BREADY => m_axi_gmem0_BREADY,
        BRESP => m_axi_gmem0_BRESP,
        BID => m_axi_gmem0_BID,
        BUSER => m_axi_gmem0_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem0_ARVALID,
        I_ARREADY => gmem0_ARREADY,
        I_ARADDR => gmem0_ARADDR,
        I_ARLEN => gmem0_ARLEN,
        I_RVALID => gmem0_RVALID,
        I_RREADY => gmem0_RREADY,
        I_RDATA => gmem0_RDATA,
        I_RFIFONUM => gmem0_RFIFONUM,
        I_AWVALID => gmem0_AWVALID,
        I_AWREADY => gmem0_AWREADY,
        I_AWADDR => gmem0_AWADDR,
        I_AWLEN => gmem0_AWLEN,
        I_WVALID => gmem0_WVALID,
        I_WREADY => gmem0_WREADY,
        I_WDATA => gmem0_WDATA,
        I_WSTRB => gmem0_WSTRB,
        I_BVALID => gmem0_BVALID,
        I_BREADY => gmem0_BREADY);

    mul_32ns_38ns_70_1_1_U423 : component conv_kernel_mul_32ns_38ns_70_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 38,
        dout_WIDTH => 70)
    port map (
        din0 => bound25_fu_1151_p0,
        din1 => bound25_fu_1151_p1,
        dout => bound25_fu_1151_p2);

    mul_32ns_34ns_65_1_1_U424 : component conv_kernel_mul_32ns_34ns_65_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 34,
        dout_WIDTH => 65)
    port map (
        din0 => mul_ln125_fu_1161_p0,
        din1 => mul_ln125_fu_1161_p1,
        dout => mul_ln125_fu_1161_p2);

    mul_30ns_70ns_102_1_1_U425 : component conv_kernel_mul_30ns_70ns_102_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 30,
        din1_WIDTH => 70,
        dout_WIDTH => 102)
    port map (
        din0 => bound45_fu_1195_p0,
        din1 => bound45_fu_1195_p1,
        dout => bound45_fu_1195_p2);

    mul_32ns_34ns_65_1_1_U426 : component conv_kernel_mul_32ns_34ns_65_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 34,
        dout_WIDTH => 65)
    port map (
        din0 => mul_ln125_1_fu_1205_p0,
        din1 => mul_ln125_1_fu_1205_p1,
        dout => mul_ln125_1_fu_1205_p2);

    mul_30ns_100ns_134_1_1_U427 : component conv_kernel_mul_30ns_100ns_134_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 30,
        din1_WIDTH => 100,
        dout_WIDTH => 134)
    port map (
        din0 => bound77_fu_1227_p0,
        din1 => bound77_fu_1227_p1,
        dout => bound77_fu_1227_p2);

    mul_32ns_130ns_166_1_1_U428 : component conv_kernel_mul_32ns_130ns_166_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 130,
        dout_WIDTH => 166)
    port map (
        din0 => bound117_fu_1244_p0,
        din1 => bound117_fu_1244_p1,
        dout => bound117_fu_1244_p2);

    mul_32s_32s_32_1_1_U429 : component conv_kernel_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => f_out_reg_441,
        din1 => nif_reg_2392,
        dout => mul_ln127_fu_1265_p2);

    mul_32s_32s_32_1_1_U430 : component conv_kernel_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => f_out_9_fu_1270_p2,
        din1 => nif_reg_2392,
        dout => mul_ln127_1_fu_1292_p2);

    mul_32s_32s_32_1_1_U431 : component conv_kernel_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => mul_ln125_2_fu_1417_p0,
        din1 => nky_reg_2454,
        dout => mul_ln125_2_fu_1417_p2);

    mul_32s_32s_32_1_1_U432 : component conv_kernel_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => select_ln125_fu_1401_p3,
        din1 => nky_reg_2454,
        dout => tmp4_mid192_fu_1437_p2);

    mul_32s_32s_32_1_1_U433 : component conv_kernel_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => tmp4_mid1_fu_1496_p0,
        din1 => nky_reg_2454,
        dout => tmp4_mid1_fu_1496_p2);

    mul_32s_32s_32_1_1_U434 : component conv_kernel_mul_32s_32s_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        din0 => tmp2_reg_2795,
        din1 => nkx_reg_2443,
        dout => tmp5_fu_1558_p2);

    mul_32ns_34ns_65_1_1_U435 : component conv_kernel_mul_32ns_34ns_65_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 34,
        dout_WIDTH => 65)
    port map (
        din0 => mul_ln310_fu_1698_p0,
        din1 => mul_ln310_fu_1698_p1,
        dout => mul_ln310_fu_1698_p2);

    mul_32ns_34ns_65_1_1_U436 : component conv_kernel_mul_32ns_34ns_65_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 34,
        dout_WIDTH => 65)
    port map (
        din0 => mul_ln310_1_fu_1718_p0,
        din1 => mul_ln310_1_fu_1718_p1,
        dout => mul_ln310_1_fu_1718_p2);

    mul_30ns_7ns_38_1_1_U437 : component conv_kernel_mul_30ns_7ns_38_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 30,
        din1_WIDTH => 7,
        dout_WIDTH => 38)
    port map (
        din0 => bound172_fu_1737_p0,
        din1 => bound172_fu_1737_p1,
        dout => bound172_fu_1737_p2);

    mul_30ns_37ns_70_1_1_U438 : component conv_kernel_mul_30ns_37ns_70_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 30,
        din1_WIDTH => 37,
        dout_WIDTH => 70)
    port map (
        din0 => bound184_fu_1750_p0,
        din1 => bound184_fu_1750_p1,
        dout => bound184_fu_1750_p2);

    mul_32ns_68ns_102_1_1_U439 : component conv_kernel_mul_32ns_68ns_102_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 68,
        dout_WIDTH => 102)
    port map (
        din0 => bound213_fu_1767_p0,
        din1 => bound213_fu_1767_p1,
        dout => bound213_fu_1767_p2);

    mul_33ns_35ns_67_1_1_U440 : component conv_kernel_mul_33ns_35ns_67_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 33,
        din1_WIDTH => 35,
        dout_WIDTH => 67)
    port map (
        din0 => mul_ln271_fu_1793_p0,
        din1 => mul_ln271_fu_1793_p1,
        dout => mul_ln271_fu_1793_p2);

    mul_31ns_7ns_39_1_1_U441 : component conv_kernel_mul_31ns_7ns_39_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 31,
        din1_WIDTH => 7,
        dout_WIDTH => 39)
    port map (
        din0 => mul_ln271_1_fu_1812_p0,
        din1 => mul_ln271_1_fu_1812_p1,
        dout => mul_ln271_1_fu_1812_p2);

    mul_30ns_38ns_71_1_1_U442 : component conv_kernel_mul_30ns_38ns_71_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 30,
        din1_WIDTH => 38,
        dout_WIDTH => 71)
    port map (
        din0 => mul_ln271_2_fu_1825_p0,
        din1 => mul_ln271_2_fu_1825_p1,
        dout => mul_ln271_2_fu_1825_p2);

    mul_32ns_69ns_103_1_1_U443 : component conv_kernel_mul_32ns_69ns_103_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 69,
        dout_WIDTH => 103)
    port map (
        din0 => mul_ln271_3_fu_1837_p0,
        din1 => mul_ln271_3_fu_1837_p1,
        dout => mul_ln271_3_fu_1837_p2);

    fmul_32ns_32ns_32_3_max_dsp_1_U444 : component conv_kernel_fmul_32ns_32ns_32_3_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_2949_p0,
        din1 => grp_fu_2949_p1,
        ce => grp_fu_2949_ce,
        dout => grp_fu_2949_p2);

    faddfsub_32ns_32ns_32_4_full_dsp_1_U445 : component conv_kernel_faddfsub_32ns_32ns_32_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_2953_p0,
        din1 => grp_fu_2953_p1,
        opcode => grp_fu_2953_opcode,
        ce => grp_fu_2953_ce,
        dout => grp_fu_2953_p2);

    fcmp_32ns_32ns_1_2_no_dsp_1_U446 : component conv_kernel_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_2957_p0,
        din1 => grp_fu_2957_p1,
        ce => grp_fu_2957_ce,
        opcode => grp_fu_2957_opcode,
        dout => grp_fu_2957_p2);

    load_input_fifo_fifo_U : component conv_kernel_fifo_w32_d9_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_load_input_fu_575_load_input_fifo5_din,
        if_full_n => load_input_fifo_full_n,
        if_write => load_input_fifo_write,
        if_dout => load_input_fifo_dout,
        if_empty_n => load_input_fifo_empty_n,
        if_read => load_input_fifo_read);

    load_weight_fifo_fifo_U : component conv_kernel_fifo_w32_d9_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_load_weight_fifo_din,
        if_full_n => load_weight_fifo_full_n,
        if_write => load_weight_fifo_write,
        if_dout => load_weight_fifo_dout,
        if_empty_n => load_weight_fifo_empty_n,
        if_read => load_weight_fifo_read);

    pe_out_fifo_fifo_U : component conv_kernel_fifo_w32_d9_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_PE_fu_594_pe_out_fifo7_din,
        if_full_n => pe_out_fifo_full_n,
        if_write => pe_out_fifo_write,
        if_dout => pe_out_fifo_dout,
        if_empty_n => pe_out_fifo_empty_n,
        if_read => pe_out_fifo_read);

    bn_out_fifo_fifo_U : component conv_kernel_fifo_w32_d9_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_bn_out_fifo_din,
        if_full_n => bn_out_fifo_full_n,
        if_write => bn_out_fifo_write,
        if_dout => bn_out_fifo_dout,
        if_empty_n => bn_out_fifo_empty_n,
        if_read => bn_out_fifo_read);

    skip_out_fifo_fifo_U : component conv_kernel_fifo_w32_d9_S
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_skip_out_fifo_din,
        if_full_n => skip_out_fifo_full_n,
        if_write => skip_out_fifo_write,
        if_dout => skip_out_fifo_dout,
        if_empty_n => skip_out_fifo_empty_n,
        if_read => skip_out_fifo_read);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_PE_fu_594_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_PE_fu_594_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state33) and ((icmp_ln125_fu_1276_p2 = ap_const_lv1_1) or (ap_const_lv1_0 = and_ln121_reg_2609)))) then 
                    grp_PE_fu_594_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_PE_fu_594_ap_ready = ap_const_logic_1)) then 
                    grp_PE_fu_594_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_avg_pool_fu_683_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_avg_pool_fu_683_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
                    grp_avg_pool_fu_683_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_avg_pool_fu_683_ap_ready = ap_const_logic_1)) then 
                    grp_avg_pool_fu_683_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_controller_fu_536_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_controller_fu_536_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln1376_fu_815_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                    grp_controller_fu_536_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_controller_fu_536_ap_ready = ap_const_logic_1)) then 
                    grp_controller_fu_536_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
                    grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_ap_ready = ap_const_logic_1)) then 
                    grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
                    grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_ap_ready = ap_const_logic_1)) then 
                    grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
                    grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_ap_ready = ap_const_logic_1)) then 
                    grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv_kernel_Pipeline_fc_loop1_fu_694_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_conv_kernel_Pipeline_fc_loop1_fu_694_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
                    grp_conv_kernel_Pipeline_fc_loop1_fu_694_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv_kernel_Pipeline_fc_loop1_fu_694_ap_ready = ap_const_logic_1)) then 
                    grp_conv_kernel_Pipeline_fc_loop1_fu_694_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
                    grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_ap_ready = ap_const_logic_1)) then 
                    grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_NS_fsm_state50) and (ap_const_logic_1 = ap_CS_fsm_state49))) then 
                    grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_ap_ready = ap_const_logic_1)) then 
                    grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state52) and (ap_const_logic_1 = ap_NS_fsm_state53))) then 
                    grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_ap_ready = ap_const_logic_1)) then 
                    grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_load_input_fu_575_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_load_input_fu_575_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
                    grp_load_input_fu_575_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_load_input_fu_575_ap_ready = ap_const_logic_1)) then 
                    grp_load_input_fu_575_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_max_pool_fu_668_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_max_pool_fu_668_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
                    grp_max_pool_fu_668_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_max_pool_fu_668_ap_ready = ap_const_logic_1)) then 
                    grp_max_pool_fu_668_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    f_in_reg_488_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_const_boolean_0 = ap_block_state44_on_subcall_done))) then 
                f_in_reg_488 <= select_ln131_3_reg_2785;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
                f_in_reg_488 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    f_out_reg_441_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_const_boolean_0 = ap_block_state44_on_subcall_done))) then 
                f_out_reg_441 <= select_ln125_7_reg_2735;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
                f_out_reg_441 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    i_reg_524_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_const_boolean_0 = ap_block_state44_on_subcall_done))) then 
                i_reg_524 <= add_ln139_fu_1604_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
                i_reg_524 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    indvar_flatten112_reg_452_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_const_boolean_0 = ap_block_state44_on_subcall_done))) then 
                indvar_flatten112_reg_452 <= select_ln127_5_fu_1687_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
                indvar_flatten112_reg_452 <= ap_const_lv134_lc_1;
            end if; 
        end if;
    end process;

    indvar_flatten160_reg_430_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_const_boolean_0 = ap_block_state44_on_subcall_done))) then 
                indvar_flatten160_reg_430 <= add_ln125_3_reg_2706;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
                indvar_flatten160_reg_430 <= ap_const_lv166_lc_1;
            end if; 
        end if;
    end process;

    indvar_flatten20_reg_500_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_const_boolean_0 = ap_block_state44_on_subcall_done))) then 
                indvar_flatten20_reg_500 <= select_ln135_1_fu_1647_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
                indvar_flatten20_reg_500 <= ap_const_lv38_0;
            end if; 
        end if;
    end process;

    indvar_flatten40_reg_476_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_const_boolean_0 = ap_block_state44_on_subcall_done))) then 
                indvar_flatten40_reg_476 <= select_ln131_4_fu_1661_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
                indvar_flatten40_reg_476 <= ap_const_lv70_0;
            end if; 
        end if;
    end process;

    indvar_flatten72_reg_464_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_const_boolean_0 = ap_block_state44_on_subcall_done))) then 
                indvar_flatten72_reg_464 <= select_ln129_5_fu_1674_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
                indvar_flatten72_reg_464 <= ap_const_lv102_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_512_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_const_boolean_0 = ap_block_state44_on_subcall_done))) then 
                indvar_flatten_reg_512 <= select_ln137_1_fu_1629_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
                indvar_flatten_reg_512 <= ap_const_lv35_0;
            end if; 
        end if;
    end process;

    layer_cnt_2_fu_240_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (gmem0_RVALID = ap_const_logic_1))) then 
                layer_cnt_2_fu_240 <= layer_cnt_reg_2285;
            elsif ((not(((ap_predicate_op494_writeresp_state74 = ap_const_boolean_1) and (gmem0_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state74))) then 
                layer_cnt_2_fu_240 <= layer_cnt_3_fu_1971_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                act_mem_read_reg_2218 <= act_mem;
                bn_weight_mem_read_reg_2206 <= bn_weight_mem;
                gmem0_addr_12_reg_2261 <= sext_ln1376_fu_739_p1;
                gmem0_addr_13_reg_2267 <= p_cast_cast_fu_759_p1;
                trunc_ln5_reg_2273 <= act_in(63 downto 2);
                trunc_ln6_reg_2279 <= act_out(63 downto 2);
                weight_mem_read_reg_2213 <= weight_mem;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state47)) then
                add14_i_reg_2866 <= add14_i_fu_1756_p2;
                bound213_reg_2871 <= bound213_fu_1767_p2;
                icmp_ln314_reg_2877 <= icmp_ln314_fu_1774_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state33) and (ap_const_lv1_1 = and_ln121_reg_2609))) then
                add_ln125_3_reg_2706 <= add_ln125_3_fu_1281_p2;
                mul_ln127_reg_2697 <= mul_ln127_fu_1265_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state59)) then
                add_ln507_reg_2915 <= add_ln507_fu_1854_p2;
                cmp21_i83_reg_2910 <= cmp21_i83_fu_1848_p2;
                trunc_ln1_reg_2925 <= empty_76_fu_1910_p2(63 downto 2);
                trunc_ln_reg_2920 <= add_ln507_2_fu_1877_p2(63 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then
                and_ln121_reg_2609 <= and_ln121_fu_1106_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_controller_fu_536_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                avg_pool_en_1_fu_232 <= grp_controller_fu_536_ap_return_14;
                bb_en_035_fu_208 <= grp_controller_fu_536_ap_return_8;
                bn_en_1_fu_216 <= grp_controller_fu_536_ap_return_10;
                conv_en_036_fu_212 <= grp_controller_fu_536_ap_return_9;
                fc_en_1_fu_236 <= grp_controller_fu_536_ap_return_15;
                max_pool_en_1_fu_228 <= grp_controller_fu_536_ap_return_13;
                relu_en_1_fu_224 <= grp_controller_fu_536_ap_return_12;
                skip_en_1_fu_220 <= grp_controller_fu_536_ap_return_11;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                avg_pool_en_reg_2516 <= grp_controller_fu_536_ap_return_14;
                base_addr_add_reg_2545 <= grp_controller_fu_536_ap_return_18;
                base_addr_in_reg_2525 <= grp_controller_fu_536_ap_return_16;
                base_addr_out_reg_2535 <= grp_controller_fu_536_ap_return_17;
                bb_en_reg_2482 <= grp_controller_fu_536_ap_return_8;
                bn_en_reg_2496 <= grp_controller_fu_536_ap_return_10;
                bn_weight_base_reg_2562 <= grp_controller_fu_536_ap_return_21;
                bn_weight_size_reg_2571 <= grp_controller_fu_536_ap_return_22;
                conv_en_reg_2489 <= grp_controller_fu_536_ap_return_9;
                fc_en_reg_2521 <= grp_controller_fu_536_ap_return_15;
                in_size_reg_2576 <= grp_controller_fu_536_ap_return_23;
                max_pool_en_reg_2511 <= grp_controller_fu_536_ap_return_13;
                nif_reg_2392 <= grp_controller_fu_536_ap_return_0;
                nkx_reg_2443 <= grp_controller_fu_536_ap_return_4;
                nky_reg_2454 <= grp_controller_fu_536_ap_return_5;
                nof_reg_2407 <= grp_controller_fu_536_ap_return_1;
                nox_reg_2431 <= grp_controller_fu_536_ap_return_3;
                noy_reg_2420 <= grp_controller_fu_536_ap_return_2;
                out_size_reg_2585 <= grp_controller_fu_536_ap_return_24;
                pad_reg_2475 <= grp_controller_fu_536_ap_return_7;
                relu_en_reg_2506 <= grp_controller_fu_536_ap_return_12;
                skip_en_reg_2501 <= grp_controller_fu_536_ap_return_11;
                stride_reg_2468 <= grp_controller_fu_536_ap_return_6;
                weight_base_reg_2551 <= grp_controller_fu_536_ap_return_19;
                weight_size_reg_2557 <= grp_controller_fu_536_ap_return_20;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_predicate_op494_writeresp_state74 = ap_const_boolean_1) and (gmem0_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state74))) then
                base_addr_add_1_fu_284 <= base_addr_add_reg_2545;
                base_addr_in_043_fu_276 <= base_addr_in_reg_2525;
                base_addr_out_044_fu_280 <= base_addr_out_reg_2535;
                bn_weight_base_048_fu_296 <= bn_weight_base_reg_2562;
                bn_weight_size_1_fu_300 <= bn_weight_size_reg_2571;
                in_size_1_fu_304 <= in_size_reg_2576;
                nif_027_fu_244 <= nif_reg_2392;
                nkx_031_fu_260 <= nkx_reg_2443;
                nky_032_fu_264 <= nky_reg_2454;
                nof_028_fu_248 <= nof_reg_2407;
                nox_030_fu_256 <= nox_reg_2431;
                noy_029_fu_252 <= noy_reg_2420;
                out_size_1_fu_308 <= out_size_reg_2585;
                pad_1_fu_272 <= pad_reg_2475;
                stride_1_fu_268 <= stride_reg_2468;
                weight_base_046_fu_288 <= weight_base_reg_2551;
                weight_size_1_fu_292 <= weight_size_reg_2557;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state32)) then
                bound117_reg_2672 <= bound117_fu_1244_p2;
                cmp331_i_reg_2668 <= cmp331_i_fu_1233_p2;
                icmp_ln129_reg_2692 <= icmp_ln129_fu_1260_p2;
                icmp_ln131_reg_2686 <= icmp_ln131_fu_1255_p2;
                icmp_ln139_reg_2677 <= icmp_ln139_fu_1250_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state29) and (ap_const_lv1_1 = and_ln121_fu_1106_p2))) then
                bound13_reg_2618 <= bound13_fu_1138_p2;
                bound25_reg_2623 <= bound25_fu_1151_p2;
                bound_reg_2613 <= bound_fu_1120_p2;
                icmp_ln135_reg_2643 <= icmp_ln135_fu_1183_p2;
                icmp_ln137_reg_2635 <= icmp_ln137_fu_1177_p2;
                tmp_reg_2630 <= mul_ln125_fu_1161_p2(64 downto 35);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state46)) then
                bound172_reg_2852 <= bound172_fu_1737_p2;
                bound184_reg_2859 <= bound184_fu_1750_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then
                bound45_reg_2650 <= bound45_fu_1195_p2;
                tmp_3_reg_2657 <= mul_ln125_1_fu_1205_p2(64 downto 35);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state31)) then
                bound77_reg_2662 <= bound77_fu_1227_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                gmem0_addr_13_read_reg_2291 <= gmem0_RDATA;
                gmem0_addr_14_reg_2297 <= sext_ln1409_fu_789_p1;
                gmem0_addr_15_reg_2302 <= sext_ln1444_fu_798_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln125_fu_1276_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state33) and (ap_const_lv1_1 = and_ln121_reg_2609))) then
                icmp_ln127_reg_2711 <= icmp_ln127_fu_1287_p2;
                mul_ln127_1_reg_2722 <= mul_ln127_1_fu_1292_p2;
                or_ln129_reg_2747 <= or_ln129_fu_1374_p2;
                select_ln125_6_reg_2728 <= select_ln125_6_fu_1338_p3;
                select_ln125_7_reg_2735 <= select_ln125_7_fu_1345_p3;
                select_ln127_4_reg_2740 <= select_ln127_4_fu_1367_p3;
                select_ln129_4_reg_2753 <= select_ln129_4_fu_1387_p3;
                select_ln131_2_reg_2762 <= select_ln131_2_fu_1394_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1376_fu_815_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                icmp_ln1406_reg_2388 <= icmp_ln1406_fu_920_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                icmp_ln1409_reg_2594 <= icmp_ln1409_fu_1065_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state60)) then
                icmp_ln1442_reg_2930 <= icmp_ln1442_fu_1926_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1442_fu_1926_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state60))) then
                icmp_ln1444_reg_2934 <= icmp_ln1444_fu_1930_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state52)) then
                icmp_ln275_reg_2905 <= icmp_ln275_fu_1843_p2;
                mul_ln271_3_reg_2900 <= mul_ln271_3_fu_1837_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                layer_cnt_reg_2285 <= gmem0_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state51)) then
                mul_ln271_1_reg_2888 <= mul_ln271_1_fu_1812_p2;
                mul_ln271_2_reg_2894 <= mul_ln271_2_fu_1825_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then
                or_ln127_reg_2769 <= or_ln127_fu_1433_p2;
                or_ln129_1_reg_2775 <= or_ln129_1_fu_1455_p2;
                or_ln131_reg_2780 <= or_ln131_fu_1486_p2;
                select_ln131_3_reg_2785 <= select_ln131_3_fu_1514_p3;
                select_ln137_reg_2790 <= select_ln137_fu_1544_p3;
                tmp2_reg_2795 <= tmp2_fu_1552_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((bb_en_reg_2482 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state45))) then
                tmp_4_reg_2841 <= mul_ln310_fu_1698_p2(64 downto 35);
                tmp_5_reg_2846 <= mul_ln310_1_fu_1718_p2(64 downto 35);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state50)) then
                tmp_6_reg_2883 <= mul_ln271_fu_1793_p2(66 downto 36);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                trunc_ln1409_1_reg_2598 <= add_ln1409_fu_1081_p2(63 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1444_fu_1930_p2 = ap_const_lv1_0) and (icmp_ln1442_fu_1926_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state60))) then
                trunc_ln1444_1_reg_2938 <= add_ln1444_fu_1946_p2(63 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((cmp331_i_reg_2668 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then
                trunc_ln7_reg_2800 <= empty_70_fu_1579_p2(63 downto 2);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state9, ap_CS_fsm_state3, ap_CS_fsm_state10, ap_CS_fsm_state14, ap_CS_fsm_state61, ap_CS_fsm_state74, ap_CS_fsm_state20, ap_CS_fsm_state27, icmp_ln1409_reg_2594, ap_CS_fsm_state36, icmp_ln1406_reg_2388, ap_CS_fsm_state11, icmp_ln1376_fu_815_p2, ap_CS_fsm_state12, bb_en_reg_2482, fc_en_reg_2521, icmp_ln1409_fu_1065_p2, ap_CS_fsm_state13, and_ln121_fu_1106_p2, and_ln121_reg_2609, ap_CS_fsm_state29, cmp331_i_reg_2668, ap_CS_fsm_state33, icmp_ln125_fu_1276_p2, ap_CS_fsm_state35, ap_CS_fsm_state44, ap_CS_fsm_state45, ap_CS_fsm_state51, icmp_ln1442_fu_1926_p2, ap_CS_fsm_state60, icmp_ln1444_fu_1930_p2, grp_controller_fu_536_ap_done, grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_ap_done, grp_load_input_fu_575_ap_done, grp_PE_fu_594_ap_done, grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_ap_done, grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_ap_done, grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_ap_done, grp_max_pool_fu_668_ap_done, grp_avg_pool_fu_683_ap_done, grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_ap_done, gmem0_AWREADY, gmem0_ARREADY, gmem0_RVALID, gmem0_BVALID, ap_block_state44_on_subcall_done, ap_CS_fsm_state22, ap_CS_fsm_state48, ap_CS_fsm_state54, ap_CS_fsm_state56, ap_CS_fsm_state58, ap_CS_fsm_state69, ap_block_state61_io, ap_predicate_op494_writeresp_state74, ap_block_state60_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (gmem0_ARREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (gmem0_ARREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (gmem0_RVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (gmem0_RVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if (((icmp_ln1376_fu_815_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state12 => 
                if (((grp_controller_fu_536_ap_done = ap_const_logic_1) and (icmp_ln1406_reg_2388 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                elsif (((grp_controller_fu_536_ap_done = ap_const_logic_1) and (icmp_ln1406_reg_2388 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                if (((icmp_ln1409_fu_1065_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state14 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state14) and (gmem0_ARREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state20) and (gmem0_AWREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                if (((grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                if ((not(((icmp_ln1409_reg_2594 = ap_const_lv1_0) and (gmem0_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                if (((grp_load_input_fu_575_ap_done = ap_const_logic_1) and (ap_const_lv1_0 = and_ln121_fu_1106_p2) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                elsif (((grp_load_input_fu_575_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state29) and (ap_const_lv1_1 = and_ln121_fu_1106_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state33) and ((icmp_ln125_fu_1276_p2 = ap_const_lv1_1) or (ap_const_lv1_0 = and_ln121_reg_2609)))) then
                    ap_NS_fsm <= ap_ST_fsm_state45;
                else
                    ap_NS_fsm <= ap_ST_fsm_state34;
                end if;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                if (((cmp331_i_reg_2668 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then
                    ap_NS_fsm <= ap_ST_fsm_state44;
                else
                    ap_NS_fsm <= ap_ST_fsm_state36;
                end if;
            when ap_ST_fsm_state36 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state36) and (gmem0_ARREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state37;
                else
                    ap_NS_fsm <= ap_ST_fsm_state36;
                end if;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_const_boolean_0 = ap_block_state44_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state44;
                end if;
            when ap_ST_fsm_state45 => 
                if (((grp_PE_fu_594_ap_done = ap_const_logic_1) and (bb_en_reg_2482 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state45))) then
                    ap_NS_fsm <= ap_ST_fsm_state55;
                elsif (((grp_PE_fu_594_ap_done = ap_const_logic_1) and (bb_en_reg_2482 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state45))) then
                    ap_NS_fsm <= ap_ST_fsm_state46;
                else
                    ap_NS_fsm <= ap_ST_fsm_state45;
                end if;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                if (((grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state48))) then
                    ap_NS_fsm <= ap_ST_fsm_state49;
                else
                    ap_NS_fsm <= ap_ST_fsm_state48;
                end if;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                if (((grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state51))) then
                    ap_NS_fsm <= ap_ST_fsm_state52;
                else
                    ap_NS_fsm <= ap_ST_fsm_state51;
                end if;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                if (((grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state54))) then
                    ap_NS_fsm <= ap_ST_fsm_state55;
                else
                    ap_NS_fsm <= ap_ST_fsm_state54;
                end if;
            when ap_ST_fsm_state55 => 
                ap_NS_fsm <= ap_ST_fsm_state56;
            when ap_ST_fsm_state56 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state56) and (grp_max_pool_fu_668_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state57;
                else
                    ap_NS_fsm <= ap_ST_fsm_state56;
                end if;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                if (((fc_en_reg_2521 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state58) and (grp_avg_pool_fu_683_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state60;
                elsif (((fc_en_reg_2521 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state58) and (grp_avg_pool_fu_683_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state59;
                else
                    ap_NS_fsm <= ap_ST_fsm_state58;
                end if;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                if (((icmp_ln1444_fu_1930_p2 = ap_const_lv1_0) and (icmp_ln1442_fu_1926_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state60) and (ap_const_boolean_0 = ap_block_state60_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state61;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state60) and (ap_const_boolean_0 = ap_block_state60_on_subcall_done) and ((icmp_ln1444_fu_1930_p2 = ap_const_lv1_1) or (icmp_ln1442_fu_1926_p2 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state74;
                else
                    ap_NS_fsm <= ap_ST_fsm_state60;
                end if;
            when ap_ST_fsm_state61 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state61) and (ap_const_boolean_0 = ap_block_state61_io))) then
                    ap_NS_fsm <= ap_ST_fsm_state62;
                else
                    ap_NS_fsm <= ap_ST_fsm_state61;
                end if;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state69) and (grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state70;
                else
                    ap_NS_fsm <= ap_ST_fsm_state69;
                end if;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                if ((not(((ap_predicate_op494_writeresp_state74 = ap_const_boolean_1) and (gmem0_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state74))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state74;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add14_i_fu_1756_p2 <= std_logic_vector(unsigned(bn_weight_base_reg_2562) + unsigned(nof_reg_2407));
    add5_le_i_fu_1893_p2 <= std_logic_vector(unsigned(add_ln507_fu_1854_p2) + unsigned(base_addr_in_reg_2525));
    add_ln125_3_fu_1281_p2 <= std_logic_vector(unsigned(indvar_flatten160_reg_430) + unsigned(ap_const_lv166_lc_2));
    add_ln127_fu_1681_p2 <= std_logic_vector(unsigned(indvar_flatten112_reg_452) + unsigned(ap_const_lv134_lc_2));
    add_ln129_fu_1668_p2 <= std_logic_vector(unsigned(indvar_flatten72_reg_464) + unsigned(ap_const_lv102_1));
    add_ln131_1_fu_1655_p2 <= std_logic_vector(unsigned(indvar_flatten40_reg_476) + unsigned(ap_const_lv70_1));
    add_ln135_fu_1637_p2 <= std_logic_vector(unsigned(indvar_flatten20_reg_500) + unsigned(ap_const_lv38_1));
    add_ln137_fu_1609_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_512) + unsigned(ap_const_lv35_1));
    add_ln139_fu_1604_p2 <= std_logic_vector(unsigned(select_ln137_reg_2790) + unsigned(ap_const_lv32_1));
    add_ln1409_fu_1081_p2 <= std_logic_vector(unsigned(zext_ln1409_fu_1077_p1) + unsigned(act_mem_read_reg_2218));
    add_ln1444_fu_1946_p2 <= std_logic_vector(unsigned(zext_ln1444_fu_1942_p1) + unsigned(act_mem_read_reg_2218));
    add_ln271_fu_1783_p2 <= std_logic_vector(unsigned(zext_ln271_fu_1780_p1) + unsigned(ap_const_lv33_6));
    add_ln507_1_fu_1860_p2 <= std_logic_vector(unsigned(bn_weight_base_reg_2562) + unsigned(ap_const_lv32_50));
    add_ln507_2_fu_1877_p2 <= std_logic_vector(unsigned(zext_ln507_fu_1873_p1) + unsigned(bn_weight_mem_read_reg_2206));
    add_ln507_fu_1854_p2 <= std_logic_vector(unsigned(nif_reg_2392) + unsigned(ap_const_lv32_FFFFFFFF));
    and_ln121_fu_1106_p2 <= (conv_en_reg_2489 and bb_en_reg_2482);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state58 <= ap_CS_fsm(57);
    ap_CS_fsm_state59 <= ap_CS_fsm(58);
    ap_CS_fsm_state60 <= ap_CS_fsm(59);
    ap_CS_fsm_state61 <= ap_CS_fsm(60);
    ap_CS_fsm_state68 <= ap_CS_fsm(67);
    ap_CS_fsm_state69 <= ap_CS_fsm(68);
    ap_CS_fsm_state74 <= ap_CS_fsm(73);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_NS_fsm_state50 <= ap_NS_fsm(49);
    ap_NS_fsm_state53 <= ap_NS_fsm(52);

    ap_ST_fsm_state10_blk_assign_proc : process(gmem0_RVALID)
    begin
        if ((gmem0_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state11_blk <= ap_const_logic_0;

    ap_ST_fsm_state12_blk_assign_proc : process(grp_controller_fu_536_ap_done)
    begin
        if ((grp_controller_fu_536_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state13_blk <= ap_const_logic_0;

    ap_ST_fsm_state14_blk_assign_proc : process(gmem0_ARREADY)
    begin
        if ((gmem0_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state14_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state14_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state20_blk_assign_proc : process(gmem0_AWREADY)
    begin
        if ((gmem0_AWREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state20_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state20_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state21_blk <= ap_const_logic_0;

    ap_ST_fsm_state22_blk_assign_proc : process(grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_ap_done)
    begin
        if ((grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state22_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state22_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;

    ap_ST_fsm_state27_blk_assign_proc : process(icmp_ln1409_reg_2594, gmem0_BVALID)
    begin
        if (((icmp_ln1409_reg_2594 = ap_const_lv1_0) and (gmem0_BVALID = ap_const_logic_0))) then 
            ap_ST_fsm_state27_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state27_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state28_blk <= ap_const_logic_0;

    ap_ST_fsm_state29_blk_assign_proc : process(grp_load_input_fu_575_ap_done)
    begin
        if ((grp_load_input_fu_575_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state29_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state29_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(gmem0_ARREADY)
    begin
        if ((gmem0_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;

    ap_ST_fsm_state36_blk_assign_proc : process(gmem0_ARREADY)
    begin
        if ((gmem0_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state36_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state36_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;
    ap_ST_fsm_state39_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(gmem0_ARREADY)
    begin
        if ((gmem0_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state40_blk <= ap_const_logic_0;
    ap_ST_fsm_state41_blk <= ap_const_logic_0;
    ap_ST_fsm_state42_blk <= ap_const_logic_0;
    ap_ST_fsm_state43_blk <= ap_const_logic_0;

    ap_ST_fsm_state44_blk_assign_proc : process(ap_block_state44_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state44_on_subcall_done)) then 
            ap_ST_fsm_state44_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state44_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state45_blk_assign_proc : process(grp_PE_fu_594_ap_done)
    begin
        if ((grp_PE_fu_594_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state45_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state45_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state46_blk <= ap_const_logic_0;
    ap_ST_fsm_state47_blk <= ap_const_logic_0;

    ap_ST_fsm_state48_blk_assign_proc : process(grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_ap_done)
    begin
        if ((grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state48_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state48_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state49_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state50_blk <= ap_const_logic_0;

    ap_ST_fsm_state51_blk_assign_proc : process(grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_ap_done)
    begin
        if ((grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state51_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state51_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state52_blk <= ap_const_logic_0;
    ap_ST_fsm_state53_blk <= ap_const_logic_0;

    ap_ST_fsm_state54_blk_assign_proc : process(grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_ap_done)
    begin
        if ((grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state54_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state54_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state55_blk <= ap_const_logic_0;

    ap_ST_fsm_state56_blk_assign_proc : process(grp_max_pool_fu_668_ap_done)
    begin
        if ((grp_max_pool_fu_668_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state56_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state56_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state57_blk <= ap_const_logic_0;

    ap_ST_fsm_state58_blk_assign_proc : process(grp_avg_pool_fu_683_ap_done)
    begin
        if ((grp_avg_pool_fu_683_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state58_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state58_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state59_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state60_blk_assign_proc : process(ap_block_state60_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state60_on_subcall_done)) then 
            ap_ST_fsm_state60_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state60_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state61_blk_assign_proc : process(ap_block_state61_io)
    begin
        if ((ap_const_boolean_1 = ap_block_state61_io)) then 
            ap_ST_fsm_state61_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state61_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state62_blk <= ap_const_logic_0;
    ap_ST_fsm_state63_blk <= ap_const_logic_0;
    ap_ST_fsm_state64_blk <= ap_const_logic_0;
    ap_ST_fsm_state65_blk <= ap_const_logic_0;
    ap_ST_fsm_state66_blk <= ap_const_logic_0;
    ap_ST_fsm_state67_blk <= ap_const_logic_0;
    ap_ST_fsm_state68_blk <= ap_const_logic_0;

    ap_ST_fsm_state69_blk_assign_proc : process(grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_ap_done)
    begin
        if ((grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state69_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state69_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state70_blk <= ap_const_logic_0;
    ap_ST_fsm_state71_blk <= ap_const_logic_0;
    ap_ST_fsm_state72_blk <= ap_const_logic_0;
    ap_ST_fsm_state73_blk <= ap_const_logic_0;

    ap_ST_fsm_state74_blk_assign_proc : process(gmem0_BVALID, ap_predicate_op494_writeresp_state74)
    begin
        if (((ap_predicate_op494_writeresp_state74 = ap_const_boolean_1) and (gmem0_BVALID = ap_const_logic_0))) then 
            ap_ST_fsm_state74_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state74_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state9_blk_assign_proc : process(gmem0_RVALID)
    begin
        if ((gmem0_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state27_assign_proc : process(icmp_ln1409_reg_2594, gmem0_BVALID)
    begin
                ap_block_state27 <= ((icmp_ln1409_reg_2594 = ap_const_lv1_0) and (gmem0_BVALID = ap_const_logic_0));
    end process;


    ap_block_state44_on_subcall_done_assign_proc : process(cmp331_i_reg_2668, grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_ap_done)
    begin
                ap_block_state44_on_subcall_done <= ((grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_ap_done = ap_const_logic_0) and (cmp331_i_reg_2668 = ap_const_lv1_0));
    end process;


    ap_block_state60_on_subcall_done_assign_proc : process(fc_en_reg_2521, grp_conv_kernel_Pipeline_fc_loop1_fu_694_ap_done)
    begin
                ap_block_state60_on_subcall_done <= ((fc_en_reg_2521 = ap_const_lv1_1) and (grp_conv_kernel_Pipeline_fc_loop1_fu_694_ap_done = ap_const_logic_0));
    end process;


    ap_block_state61_io_assign_proc : process(gmem0_AWREADY, gmem0_ARREADY)
    begin
                ap_block_state61_io <= ((gmem0_ARREADY = ap_const_logic_0) or (gmem0_AWREADY = ap_const_logic_0));
    end process;


    ap_block_state74_assign_proc : process(gmem0_BVALID, ap_predicate_op494_writeresp_state74)
    begin
                ap_block_state74 <= ((ap_predicate_op494_writeresp_state74 = ap_const_boolean_1) and (gmem0_BVALID = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state11, icmp_ln1376_fu_815_p2)
    begin
        if (((icmp_ln1376_fu_815_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op494_writeresp_state74_assign_proc : process(icmp_ln1442_reg_2930, icmp_ln1444_reg_2934)
    begin
                ap_predicate_op494_writeresp_state74 <= ((icmp_ln1444_reg_2934 = ap_const_lv1_0) and (icmp_ln1442_reg_2930 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state11, icmp_ln1376_fu_815_p2)
    begin
        if (((icmp_ln1376_fu_815_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    bn_out_fifo_read_assign_proc : process(ap_CS_fsm_state51, grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_bn_out_fifo_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            bn_out_fifo_read <= grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_bn_out_fifo_read;
        else 
            bn_out_fifo_read <= ap_const_logic_0;
        end if; 
    end process;


    bn_out_fifo_write_assign_proc : process(grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_bn_out_fifo_write, ap_CS_fsm_state48)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            bn_out_fifo_write <= grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_bn_out_fifo_write;
        else 
            bn_out_fifo_write <= ap_const_logic_0;
        end if; 
    end process;

    bound117_fu_1244_p0 <= bound117_fu_1244_p00(32 - 1 downto 0);
    bound117_fu_1244_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(nof_reg_2407),166));
    bound117_fu_1244_p1 <= bound117_fu_1244_p10(130 - 1 downto 0);
    bound117_fu_1244_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bound77_reg_2662),166));
    bound13_fu_1138_p2 <= std_logic_vector(unsigned(p_shl_fu_1130_p3) - unsigned(cast12_fu_1126_p1));
    bound172_fu_1737_p0 <= bound172_fu_1737_p00(30 - 1 downto 0);
    bound172_fu_1737_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_reg_2841),38));
    bound172_fu_1737_p1 <= ap_const_lv38_31(7 - 1 downto 0);
    bound184_fu_1750_p0 <= bound184_fu_1750_p00(30 - 1 downto 0);
    bound184_fu_1750_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_reg_2846),70));
    bound184_fu_1750_p1 <= bound184_fu_1750_p10(37 - 1 downto 0);
    bound184_fu_1750_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bound172_fu_1737_p2),70));
    bound213_fu_1767_p0 <= bound213_fu_1767_p00(32 - 1 downto 0);
    bound213_fu_1767_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(nof_reg_2407),102));
    bound213_fu_1767_p1 <= bound213_fu_1767_p10(68 - 1 downto 0);
    bound213_fu_1767_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bound184_reg_2859),102));
    bound25_fu_1151_p0 <= bound25_fu_1151_p00(32 - 1 downto 0);
    bound25_fu_1151_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(nif_reg_2392),70));
    bound25_fu_1151_p1 <= bound25_fu_1151_p10(38 - 1 downto 0);
    bound25_fu_1151_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bound13_fu_1138_p2),70));
    bound45_fu_1195_p0 <= bound45_fu_1195_p00(30 - 1 downto 0);
    bound45_fu_1195_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_reg_2630),102));
    bound45_fu_1195_p1 <= bound45_fu_1195_p10(70 - 1 downto 0);
    bound45_fu_1195_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bound25_reg_2623),102));
    bound77_fu_1227_p0 <= bound77_fu_1227_p00(30 - 1 downto 0);
    bound77_fu_1227_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_reg_2657),134));
    bound77_fu_1227_p1 <= bound77_fu_1227_p10(100 - 1 downto 0);
    bound77_fu_1227_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bound45_reg_2650),134));
    bound_fu_1120_p2 <= std_logic_vector(unsigned(p_shl1_fu_1113_p3) - unsigned(cast10_fu_1110_p1));
    cast10_fu_1110_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(nky_reg_2454),35));
    cast12_fu_1126_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bound_fu_1120_p2),38));
    cmp21_i83_fu_1848_p2 <= "1" when (nif_reg_2392 = ap_const_lv32_0) else "0";
    cmp331_i_fu_1233_p2 <= "1" when (nkx_reg_2443 = ap_const_lv32_0) else "0";
    empty_69_fu_1562_p2 <= std_logic_vector(unsigned(tmp5_fu_1558_p2) + unsigned(weight_base_reg_2551));
    empty_70_fu_1579_p2 <= std_logic_vector(unsigned(p_cast26_fu_1575_p1) + unsigned(weight_mem_read_reg_2213));
    empty_76_fu_1910_p2 <= std_logic_vector(unsigned(p_cast21_fu_1906_p1) + unsigned(act_mem_read_reg_2218));
    f_in_3_fu_1480_p2 <= std_logic_vector(unsigned(select_ln129_fu_1459_p3) + unsigned(ap_const_lv32_1));
    f_out_9_fu_1270_p2 <= std_logic_vector(signed(f_out_reg_441) + signed(ap_const_lv32_1));

    gmem0_ARADDR_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state14, ap_CS_fsm_state61, ap_CS_fsm_state36, gmem0_addr_12_reg_2261, gmem0_addr_13_reg_2267, gmem0_addr_14_reg_2297, fc_en_reg_2521, ap_CS_fsm_state29, cmp331_i_reg_2668, ap_CS_fsm_state44, ap_CS_fsm_state47, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state59, ap_CS_fsm_state60, grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_ARADDR, grp_load_input_fu_575_m_axi_gmem0_ARADDR, grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_ARADDR, grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_ARADDR, grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_ARADDR, grp_max_pool_fu_668_m_axi_gmem0_ARADDR, grp_avg_pool_fu_683_m_axi_gmem0_ARADDR, grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_ARADDR, grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_ARADDR, gmem0_ARREADY, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state28, ap_CS_fsm_state43, ap_CS_fsm_state48, ap_CS_fsm_state55, ap_CS_fsm_state56, ap_CS_fsm_state57, ap_CS_fsm_state58, ap_CS_fsm_state68, ap_CS_fsm_state69, sext_ln141_fu_1594_p1, sext_ln1444_1_fu_1961_p1, ap_block_state61_io)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state61) and (ap_const_boolean_0 = ap_block_state61_io))) then 
            gmem0_ARADDR <= sext_ln1444_1_fu_1961_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state36) and (gmem0_ARREADY = ap_const_logic_1))) then 
            gmem0_ARADDR <= sext_ln141_fu_1594_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) and (gmem0_ARREADY = ap_const_logic_1))) then 
            gmem0_ARADDR <= gmem0_addr_14_reg_2297;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (gmem0_ARREADY = ap_const_logic_1))) then 
            gmem0_ARADDR <= gmem0_addr_13_reg_2267;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (gmem0_ARREADY = ap_const_logic_1))) then 
            gmem0_ARADDR <= gmem0_addr_12_reg_2261;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state68))) then 
            gmem0_ARADDR <= grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state59) or ((fc_en_reg_2521 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state60)))) then 
            gmem0_ARADDR <= grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            gmem0_ARADDR <= grp_avg_pool_fu_683_m_axi_gmem0_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state55))) then 
            gmem0_ARADDR <= grp_max_pool_fu_668_m_axi_gmem0_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            gmem0_ARADDR <= grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            gmem0_ARADDR <= grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state43) or ((cmp331_i_reg_2668 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state44)))) then 
            gmem0_ARADDR <= grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            gmem0_ARADDR <= grp_load_input_fu_575_m_axi_gmem0_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            gmem0_ARADDR <= grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_ARADDR;
        else 
            gmem0_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem0_ARLEN_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state14, ap_CS_fsm_state61, ap_CS_fsm_state36, nkx_reg_2443, fc_en_reg_2521, in_size_reg_2576, out_size_reg_2585, ap_CS_fsm_state29, cmp331_i_reg_2668, ap_CS_fsm_state44, ap_CS_fsm_state47, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state59, ap_CS_fsm_state60, grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_ARLEN, grp_load_input_fu_575_m_axi_gmem0_ARLEN, grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_ARLEN, grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_ARLEN, grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_ARLEN, grp_max_pool_fu_668_m_axi_gmem0_ARLEN, grp_avg_pool_fu_683_m_axi_gmem0_ARLEN, grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_ARLEN, grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_ARLEN, gmem0_ARREADY, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state28, ap_CS_fsm_state43, ap_CS_fsm_state48, ap_CS_fsm_state55, ap_CS_fsm_state56, ap_CS_fsm_state57, ap_CS_fsm_state58, ap_CS_fsm_state68, ap_CS_fsm_state69, ap_block_state61_io)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state61) and (ap_const_boolean_0 = ap_block_state61_io))) then 
            gmem0_ARLEN <= out_size_reg_2585;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state36) and (gmem0_ARREADY = ap_const_logic_1))) then 
            gmem0_ARLEN <= nkx_reg_2443;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) and (gmem0_ARREADY = ap_const_logic_1))) then 
            gmem0_ARLEN <= in_size_reg_2576;
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state3) and (gmem0_ARREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (gmem0_ARREADY = ap_const_logic_1)))) then 
            gmem0_ARLEN <= ap_const_lv32_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state68))) then 
            gmem0_ARLEN <= grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state59) or ((fc_en_reg_2521 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state60)))) then 
            gmem0_ARLEN <= grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            gmem0_ARLEN <= grp_avg_pool_fu_683_m_axi_gmem0_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state55))) then 
            gmem0_ARLEN <= grp_max_pool_fu_668_m_axi_gmem0_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            gmem0_ARLEN <= grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            gmem0_ARLEN <= grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state43) or ((cmp331_i_reg_2668 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state44)))) then 
            gmem0_ARLEN <= grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            gmem0_ARLEN <= grp_load_input_fu_575_m_axi_gmem0_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            gmem0_ARLEN <= grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_ARLEN;
        else 
            gmem0_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem0_ARVALID_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state14, ap_CS_fsm_state61, ap_CS_fsm_state36, fc_en_reg_2521, ap_CS_fsm_state29, cmp331_i_reg_2668, ap_CS_fsm_state44, ap_CS_fsm_state47, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state59, ap_CS_fsm_state60, grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_ARVALID, grp_load_input_fu_575_m_axi_gmem0_ARVALID, grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_ARVALID, grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_ARVALID, grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_ARVALID, grp_max_pool_fu_668_m_axi_gmem0_ARVALID, grp_avg_pool_fu_683_m_axi_gmem0_ARVALID, grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_ARVALID, grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_ARVALID, gmem0_ARREADY, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state28, ap_CS_fsm_state43, ap_CS_fsm_state48, ap_CS_fsm_state55, ap_CS_fsm_state56, ap_CS_fsm_state57, ap_CS_fsm_state58, ap_CS_fsm_state68, ap_CS_fsm_state69, ap_block_state61_io)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state36) and (gmem0_ARREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state61) and (ap_const_boolean_0 = ap_block_state61_io)) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (gmem0_ARREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (gmem0_ARREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (gmem0_ARREADY = ap_const_logic_1)))) then 
            gmem0_ARVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state68))) then 
            gmem0_ARVALID <= grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state59) or ((fc_en_reg_2521 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state60)))) then 
            gmem0_ARVALID <= grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            gmem0_ARVALID <= grp_avg_pool_fu_683_m_axi_gmem0_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state55))) then 
            gmem0_ARVALID <= grp_max_pool_fu_668_m_axi_gmem0_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            gmem0_ARVALID <= grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            gmem0_ARVALID <= grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state43) or ((cmp331_i_reg_2668 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state44)))) then 
            gmem0_ARVALID <= grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            gmem0_ARVALID <= grp_load_input_fu_575_m_axi_gmem0_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            gmem0_ARVALID <= grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_ARVALID;
        else 
            gmem0_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_AWADDR_assign_proc : process(ap_CS_fsm_state61, ap_CS_fsm_state20, gmem0_addr_15_reg_2302, fc_en_reg_2521, ap_CS_fsm_state59, ap_CS_fsm_state60, grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_AWADDR, grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_AWADDR, grp_max_pool_fu_668_m_axi_gmem0_AWADDR, grp_avg_pool_fu_683_m_axi_gmem0_AWADDR, grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_AWADDR, grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_AWADDR, gmem0_AWREADY, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state55, ap_CS_fsm_state56, ap_CS_fsm_state57, ap_CS_fsm_state58, ap_CS_fsm_state68, ap_CS_fsm_state69, sext_ln1409_1_fu_1096_p1, ap_block_state61_io)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state61) and (ap_const_boolean_0 = ap_block_state61_io))) then 
            gmem0_AWADDR <= gmem0_addr_15_reg_2302;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) and (gmem0_AWREADY = ap_const_logic_1))) then 
            gmem0_AWADDR <= sext_ln1409_1_fu_1096_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state68))) then 
            gmem0_AWADDR <= grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_AWADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state59) or ((fc_en_reg_2521 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state60)))) then 
            gmem0_AWADDR <= grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_AWADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            gmem0_AWADDR <= grp_avg_pool_fu_683_m_axi_gmem0_AWADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state55))) then 
            gmem0_AWADDR <= grp_max_pool_fu_668_m_axi_gmem0_AWADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state53))) then 
            gmem0_AWADDR <= grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_AWADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            gmem0_AWADDR <= grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_AWADDR;
        else 
            gmem0_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem0_AWLEN_assign_proc : process(ap_CS_fsm_state61, ap_CS_fsm_state20, fc_en_reg_2521, in_size_reg_2576, out_size_reg_2585, ap_CS_fsm_state59, ap_CS_fsm_state60, grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_AWLEN, grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_AWLEN, grp_max_pool_fu_668_m_axi_gmem0_AWLEN, grp_avg_pool_fu_683_m_axi_gmem0_AWLEN, grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_AWLEN, grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_AWLEN, gmem0_AWREADY, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state55, ap_CS_fsm_state56, ap_CS_fsm_state57, ap_CS_fsm_state58, ap_CS_fsm_state68, ap_CS_fsm_state69, ap_block_state61_io)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state61) and (ap_const_boolean_0 = ap_block_state61_io))) then 
            gmem0_AWLEN <= out_size_reg_2585;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) and (gmem0_AWREADY = ap_const_logic_1))) then 
            gmem0_AWLEN <= in_size_reg_2576;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state68))) then 
            gmem0_AWLEN <= grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_AWLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state59) or ((fc_en_reg_2521 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state60)))) then 
            gmem0_AWLEN <= grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_AWLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            gmem0_AWLEN <= grp_avg_pool_fu_683_m_axi_gmem0_AWLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state55))) then 
            gmem0_AWLEN <= grp_max_pool_fu_668_m_axi_gmem0_AWLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state53))) then 
            gmem0_AWLEN <= grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_AWLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            gmem0_AWLEN <= grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_AWLEN;
        else 
            gmem0_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem0_AWVALID_assign_proc : process(ap_CS_fsm_state61, ap_CS_fsm_state20, fc_en_reg_2521, ap_CS_fsm_state59, ap_CS_fsm_state60, grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_AWVALID, grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_AWVALID, grp_max_pool_fu_668_m_axi_gmem0_AWVALID, grp_avg_pool_fu_683_m_axi_gmem0_AWVALID, grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_AWVALID, grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_AWVALID, gmem0_AWREADY, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state55, ap_CS_fsm_state56, ap_CS_fsm_state57, ap_CS_fsm_state58, ap_CS_fsm_state68, ap_CS_fsm_state69, ap_block_state61_io)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state20) and (gmem0_AWREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state61) and (ap_const_boolean_0 = ap_block_state61_io)))) then 
            gmem0_AWVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state68))) then 
            gmem0_AWVALID <= grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_AWVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state59) or ((fc_en_reg_2521 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state60)))) then 
            gmem0_AWVALID <= grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_AWVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            gmem0_AWVALID <= grp_avg_pool_fu_683_m_axi_gmem0_AWVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state55))) then 
            gmem0_AWVALID <= grp_max_pool_fu_668_m_axi_gmem0_AWVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state53))) then 
            gmem0_AWVALID <= grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_AWVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            gmem0_AWVALID <= grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_AWVALID;
        else 
            gmem0_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_BREADY_assign_proc : process(ap_CS_fsm_state74, ap_CS_fsm_state27, icmp_ln1409_reg_2594, fc_en_reg_2521, ap_CS_fsm_state59, ap_CS_fsm_state60, grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_BREADY, grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_BREADY, grp_max_pool_fu_668_m_axi_gmem0_BREADY, grp_avg_pool_fu_683_m_axi_gmem0_BREADY, grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_BREADY, grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_BREADY, gmem0_BVALID, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state55, ap_CS_fsm_state56, ap_CS_fsm_state57, ap_CS_fsm_state58, ap_CS_fsm_state68, ap_CS_fsm_state69, ap_predicate_op494_writeresp_state74)
    begin
        if (((not(((ap_predicate_op494_writeresp_state74 = ap_const_boolean_1) and (gmem0_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state74) and (ap_predicate_op494_writeresp_state74 = ap_const_boolean_1)) or (not(((icmp_ln1409_reg_2594 = ap_const_lv1_0) and (gmem0_BVALID = ap_const_logic_0))) and (icmp_ln1409_reg_2594 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state27)))) then 
            gmem0_BREADY <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state68))) then 
            gmem0_BREADY <= grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_BREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state59) or ((fc_en_reg_2521 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state60)))) then 
            gmem0_BREADY <= grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_BREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            gmem0_BREADY <= grp_avg_pool_fu_683_m_axi_gmem0_BREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state55))) then 
            gmem0_BREADY <= grp_max_pool_fu_668_m_axi_gmem0_BREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state53))) then 
            gmem0_BREADY <= grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_BREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            gmem0_BREADY <= grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_BREADY;
        else 
            gmem0_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_RREADY_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state10, fc_en_reg_2521, ap_CS_fsm_state29, cmp331_i_reg_2668, ap_CS_fsm_state44, ap_CS_fsm_state47, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state59, ap_CS_fsm_state60, grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_RREADY, grp_load_input_fu_575_m_axi_gmem0_RREADY, grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_RREADY, grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_RREADY, grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_RREADY, grp_max_pool_fu_668_m_axi_gmem0_RREADY, grp_avg_pool_fu_683_m_axi_gmem0_RREADY, grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_RREADY, grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_RREADY, gmem0_RVALID, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state28, ap_CS_fsm_state43, ap_CS_fsm_state48, ap_CS_fsm_state55, ap_CS_fsm_state56, ap_CS_fsm_state57, ap_CS_fsm_state58, ap_CS_fsm_state68, ap_CS_fsm_state69)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state10) and (gmem0_RVALID = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (gmem0_RVALID = ap_const_logic_1)))) then 
            gmem0_RREADY <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state68))) then 
            gmem0_RREADY <= grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state59) or ((fc_en_reg_2521 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state60)))) then 
            gmem0_RREADY <= grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            gmem0_RREADY <= grp_avg_pool_fu_683_m_axi_gmem0_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state55))) then 
            gmem0_RREADY <= grp_max_pool_fu_668_m_axi_gmem0_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            gmem0_RREADY <= grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_m_axi_gmem0_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            gmem0_RREADY <= grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_m_axi_gmem0_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state43) or ((cmp331_i_reg_2668 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state44)))) then 
            gmem0_RREADY <= grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_m_axi_gmem0_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            gmem0_RREADY <= grp_load_input_fu_575_m_axi_gmem0_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            gmem0_RREADY <= grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_RREADY;
        else 
            gmem0_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_WDATA_assign_proc : process(fc_en_reg_2521, ap_CS_fsm_state59, ap_CS_fsm_state60, grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_WDATA, grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_WDATA, grp_max_pool_fu_668_m_axi_gmem0_WDATA, grp_avg_pool_fu_683_m_axi_gmem0_WDATA, grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_WDATA, grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_WDATA, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state55, ap_CS_fsm_state56, ap_CS_fsm_state57, ap_CS_fsm_state58, ap_CS_fsm_state68, ap_CS_fsm_state69)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state68))) then 
            gmem0_WDATA <= grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_WDATA;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state59) or ((fc_en_reg_2521 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state60)))) then 
            gmem0_WDATA <= grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_WDATA;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            gmem0_WDATA <= grp_avg_pool_fu_683_m_axi_gmem0_WDATA;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state55))) then 
            gmem0_WDATA <= grp_max_pool_fu_668_m_axi_gmem0_WDATA;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state53))) then 
            gmem0_WDATA <= grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_WDATA;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            gmem0_WDATA <= grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_WDATA;
        else 
            gmem0_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem0_WSTRB_assign_proc : process(fc_en_reg_2521, ap_CS_fsm_state59, ap_CS_fsm_state60, grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_WSTRB, grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_WSTRB, grp_max_pool_fu_668_m_axi_gmem0_WSTRB, grp_avg_pool_fu_683_m_axi_gmem0_WSTRB, grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_WSTRB, grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_WSTRB, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state55, ap_CS_fsm_state56, ap_CS_fsm_state57, ap_CS_fsm_state58, ap_CS_fsm_state68, ap_CS_fsm_state69)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state68))) then 
            gmem0_WSTRB <= grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_WSTRB;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state59) or ((fc_en_reg_2521 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state60)))) then 
            gmem0_WSTRB <= grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_WSTRB;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            gmem0_WSTRB <= grp_avg_pool_fu_683_m_axi_gmem0_WSTRB;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state55))) then 
            gmem0_WSTRB <= grp_max_pool_fu_668_m_axi_gmem0_WSTRB;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state53))) then 
            gmem0_WSTRB <= grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_WSTRB;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            gmem0_WSTRB <= grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_WSTRB;
        else 
            gmem0_WSTRB <= "XXXX";
        end if; 
    end process;


    gmem0_WVALID_assign_proc : process(fc_en_reg_2521, ap_CS_fsm_state59, ap_CS_fsm_state60, grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_WVALID, grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_WVALID, grp_max_pool_fu_668_m_axi_gmem0_WVALID, grp_avg_pool_fu_683_m_axi_gmem0_WVALID, grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_WVALID, grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_WVALID, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state55, ap_CS_fsm_state56, ap_CS_fsm_state57, ap_CS_fsm_state58, ap_CS_fsm_state68, ap_CS_fsm_state69)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state68))) then 
            gmem0_WVALID <= grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_m_axi_gmem0_WVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state59) or ((fc_en_reg_2521 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state60)))) then 
            gmem0_WVALID <= grp_conv_kernel_Pipeline_fc_loop1_fu_694_m_axi_gmem0_WVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state57))) then 
            gmem0_WVALID <= grp_avg_pool_fu_683_m_axi_gmem0_WVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state55))) then 
            gmem0_WVALID <= grp_max_pool_fu_668_m_axi_gmem0_WVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state53))) then 
            gmem0_WVALID <= grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_m_axi_gmem0_WVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            gmem0_WVALID <= grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_m_axi_gmem0_WVALID;
        else 
            gmem0_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_blk_n_AR_assign_proc : process(m_axi_gmem0_ARREADY, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state14, ap_CS_fsm_state61, ap_CS_fsm_state36)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem0_blk_n_AR <= m_axi_gmem0_ARREADY;
        else 
            gmem0_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem0_blk_n_AW_assign_proc : process(m_axi_gmem0_AWREADY, ap_CS_fsm_state61, ap_CS_fsm_state20)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state61))) then 
            gmem0_blk_n_AW <= m_axi_gmem0_AWREADY;
        else 
            gmem0_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem0_blk_n_B_assign_proc : process(m_axi_gmem0_BVALID, ap_CS_fsm_state74, icmp_ln1442_reg_2930, icmp_ln1444_reg_2934, ap_CS_fsm_state27, icmp_ln1409_reg_2594)
    begin
        if ((((icmp_ln1409_reg_2594 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state27)) or ((ap_const_logic_1 = ap_CS_fsm_state74) and (icmp_ln1444_reg_2934 = ap_const_lv1_0) and (icmp_ln1442_reg_2930 = ap_const_lv1_1)))) then 
            gmem0_blk_n_B <= m_axi_gmem0_BVALID;
        else 
            gmem0_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    gmem0_blk_n_R_assign_proc : process(m_axi_gmem0_RVALID, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            gmem0_blk_n_R <= m_axi_gmem0_RVALID;
        else 
            gmem0_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    grp_PE_fu_594_ap_start <= grp_PE_fu_594_ap_start_reg;
    grp_avg_pool_fu_683_ap_start <= grp_avg_pool_fu_683_ap_start_reg;
    grp_controller_fu_536_ap_start <= grp_controller_fu_536_ap_start_reg;
    grp_controller_fu_536_avg_pool_en_read <= avg_pool_en_1_fu_232(0);
    grp_controller_fu_536_bb_en_read <= bb_en_035_fu_208(0);
    grp_controller_fu_536_bn_en_read <= bn_en_1_fu_216(0);
    grp_controller_fu_536_conv_en_read <= conv_en_036_fu_212(0);
    grp_controller_fu_536_fc_en_read <= fc_en_1_fu_236(0);
    grp_controller_fu_536_max_pool_en_read <= max_pool_en_1_fu_228(0);
    grp_controller_fu_536_relu_en_read <= relu_en_1_fu_224(0);
    grp_controller_fu_536_skip_en_read <= skip_en_1_fu_220(0);
    grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_ap_start <= grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_ap_start_reg;
    grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_ap_start <= grp_conv_kernel_Pipeline_conv_kernel_loop2_fu_566_ap_start_reg;
    grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_ap_start <= grp_conv_kernel_Pipeline_conv_kernel_loop3_fu_710_ap_start_reg;
    grp_conv_kernel_Pipeline_fc_loop1_fu_694_ap_start <= grp_conv_kernel_Pipeline_fc_loop1_fu_694_ap_start_reg;
    grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_ap_start <= grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_ap_start_reg;
    grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_ap_start <= grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_ap_start_reg;
    grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_ap_start <= grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_ap_start_reg;

    grp_fu_2949_ce_assign_proc : process(ap_CS_fsm_state45, ap_CS_fsm_state60, grp_PE_fu_594_grp_fu_2949_p_ce, grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_grp_fu_2949_p_ce, grp_conv_kernel_Pipeline_fc_loop1_fu_694_grp_fu_2949_p_ce, ap_CS_fsm_state48)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            grp_fu_2949_ce <= grp_conv_kernel_Pipeline_fc_loop1_fu_694_grp_fu_2949_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            grp_fu_2949_ce <= grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_grp_fu_2949_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_fu_2949_ce <= grp_PE_fu_594_grp_fu_2949_p_ce;
        else 
            grp_fu_2949_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_2949_p0_assign_proc : process(ap_CS_fsm_state45, ap_CS_fsm_state60, grp_PE_fu_594_grp_fu_2949_p_din0, grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_grp_fu_2949_p_din0, grp_conv_kernel_Pipeline_fc_loop1_fu_694_grp_fu_2949_p_din0, ap_CS_fsm_state48)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            grp_fu_2949_p0 <= grp_conv_kernel_Pipeline_fc_loop1_fu_694_grp_fu_2949_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            grp_fu_2949_p0 <= grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_grp_fu_2949_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_fu_2949_p0 <= grp_PE_fu_594_grp_fu_2949_p_din0;
        else 
            grp_fu_2949_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2949_p1_assign_proc : process(ap_CS_fsm_state45, ap_CS_fsm_state60, grp_PE_fu_594_grp_fu_2949_p_din1, grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_grp_fu_2949_p_din1, grp_conv_kernel_Pipeline_fc_loop1_fu_694_grp_fu_2949_p_din1, ap_CS_fsm_state48)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            grp_fu_2949_p1 <= grp_conv_kernel_Pipeline_fc_loop1_fu_694_grp_fu_2949_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            grp_fu_2949_p1 <= grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_grp_fu_2949_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            grp_fu_2949_p1 <= grp_PE_fu_594_grp_fu_2949_p_din1;
        else 
            grp_fu_2949_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2953_ce_assign_proc : process(ap_CS_fsm_state51, ap_CS_fsm_state60, grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_grp_fu_2953_p_ce, grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_grp_fu_2953_p_ce, grp_avg_pool_fu_683_grp_fu_2953_p_ce, grp_conv_kernel_Pipeline_fc_loop1_fu_694_grp_fu_2953_p_ce, ap_CS_fsm_state48, ap_CS_fsm_state58)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            grp_fu_2953_ce <= grp_conv_kernel_Pipeline_fc_loop1_fu_694_grp_fu_2953_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            grp_fu_2953_ce <= grp_avg_pool_fu_683_grp_fu_2953_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            grp_fu_2953_ce <= grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_grp_fu_2953_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            grp_fu_2953_ce <= grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_grp_fu_2953_p_ce;
        else 
            grp_fu_2953_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_2953_opcode_assign_proc : process(ap_CS_fsm_state51, ap_CS_fsm_state60, grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_grp_fu_2953_p_opcode, grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_grp_fu_2953_p_opcode, grp_avg_pool_fu_683_grp_fu_2953_p_opcode, grp_conv_kernel_Pipeline_fc_loop1_fu_694_grp_fu_2953_p_opcode, ap_CS_fsm_state48, ap_CS_fsm_state58)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            grp_fu_2953_opcode <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_conv_kernel_Pipeline_fc_loop1_fu_694_grp_fu_2953_p_opcode),2));
        elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            grp_fu_2953_opcode <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_avg_pool_fu_683_grp_fu_2953_p_opcode),2));
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            grp_fu_2953_opcode <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_grp_fu_2953_p_opcode),2));
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            grp_fu_2953_opcode <= grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_grp_fu_2953_p_opcode;
        else 
            grp_fu_2953_opcode <= "XX";
        end if; 
    end process;


    grp_fu_2953_p0_assign_proc : process(ap_CS_fsm_state51, ap_CS_fsm_state60, grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_grp_fu_2953_p_din0, grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_grp_fu_2953_p_din0, grp_avg_pool_fu_683_grp_fu_2953_p_din0, grp_conv_kernel_Pipeline_fc_loop1_fu_694_grp_fu_2953_p_din0, ap_CS_fsm_state48, ap_CS_fsm_state58)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            grp_fu_2953_p0 <= grp_conv_kernel_Pipeline_fc_loop1_fu_694_grp_fu_2953_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            grp_fu_2953_p0 <= grp_avg_pool_fu_683_grp_fu_2953_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            grp_fu_2953_p0 <= grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_grp_fu_2953_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            grp_fu_2953_p0 <= grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_grp_fu_2953_p_din0;
        else 
            grp_fu_2953_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2953_p1_assign_proc : process(ap_CS_fsm_state51, ap_CS_fsm_state60, grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_grp_fu_2953_p_din1, grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_grp_fu_2953_p_din1, grp_avg_pool_fu_683_grp_fu_2953_p_din1, grp_conv_kernel_Pipeline_fc_loop1_fu_694_grp_fu_2953_p_din1, ap_CS_fsm_state48, ap_CS_fsm_state58)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            grp_fu_2953_p1 <= grp_conv_kernel_Pipeline_fc_loop1_fu_694_grp_fu_2953_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            grp_fu_2953_p1 <= grp_avg_pool_fu_683_grp_fu_2953_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            grp_fu_2953_p1 <= grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_grp_fu_2953_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            grp_fu_2953_p1 <= grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_grp_fu_2953_p_din1;
        else 
            grp_fu_2953_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2957_ce_assign_proc : process(ap_CS_fsm_state51, grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_grp_fu_2957_p_ce, grp_max_pool_fu_668_grp_fu_2957_p_ce, ap_CS_fsm_state56)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            grp_fu_2957_ce <= grp_max_pool_fu_668_grp_fu_2957_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            grp_fu_2957_ce <= grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_grp_fu_2957_p_ce;
        else 
            grp_fu_2957_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_2957_opcode_assign_proc : process(ap_CS_fsm_state51, grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_grp_fu_2957_p_opcode, grp_max_pool_fu_668_grp_fu_2957_p_opcode, ap_CS_fsm_state56)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            grp_fu_2957_opcode <= grp_max_pool_fu_668_grp_fu_2957_p_opcode;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            grp_fu_2957_opcode <= grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_grp_fu_2957_p_opcode;
        else 
            grp_fu_2957_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_2957_p0_assign_proc : process(ap_CS_fsm_state51, grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_grp_fu_2957_p_din0, grp_max_pool_fu_668_grp_fu_2957_p_din0, ap_CS_fsm_state56)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            grp_fu_2957_p0 <= grp_max_pool_fu_668_grp_fu_2957_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            grp_fu_2957_p0 <= grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_grp_fu_2957_p_din0;
        else 
            grp_fu_2957_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2957_p1_assign_proc : process(ap_CS_fsm_state51, grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_grp_fu_2957_p_din1, grp_max_pool_fu_668_grp_fu_2957_p_din1, ap_CS_fsm_state56)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            grp_fu_2957_p1 <= grp_max_pool_fu_668_grp_fu_2957_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            grp_fu_2957_p1 <= grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_grp_fu_2957_p_din1;
        else 
            grp_fu_2957_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_719_p2 <= std_logic_vector(unsigned(nox_reg_2431) + unsigned(ap_const_lv32_6));
    grp_fu_724_p2 <= std_logic_vector(unsigned(noy_reg_2420) + unsigned(ap_const_lv32_6));
    grp_load_input_fu_575_ap_start <= grp_load_input_fu_575_ap_start_reg;
    grp_max_pool_fu_668_ap_start <= grp_max_pool_fu_668_ap_start_reg;
    icmp_ln125_fu_1276_p2 <= "1" when (indvar_flatten160_reg_430 = bound117_reg_2672) else "0";
    icmp_ln127_fu_1287_p2 <= "1" when (indvar_flatten112_reg_452 = bound77_reg_2662) else "0";
    icmp_ln129_1_fu_1333_p2 <= "1" when (indvar_flatten72_reg_464 = bound45_reg_2650) else "0";
    icmp_ln129_fu_1260_p2 <= "1" when (bound45_reg_2650 = ap_const_lv102_0) else "0";
    icmp_ln131_1_fu_1321_p2 <= "1" when (indvar_flatten40_reg_476 = bound25_reg_2623) else "0";
    icmp_ln131_fu_1255_p2 <= "1" when (bound25_reg_2623 = ap_const_lv70_0) else "0";
    icmp_ln135_1_fu_1309_p2 <= "1" when (indvar_flatten20_reg_500 = bound13_reg_2618) else "0";
    icmp_ln135_fu_1183_p2 <= "1" when (p_shl_fu_1130_p3 = cast12_fu_1126_p1) else "0";
    icmp_ln1376_fu_815_p2 <= "1" when (unsigned(layer_cnt_2_fu_240) > unsigned(gmem0_addr_13_read_reg_2291)) else "0";
    icmp_ln137_1_fu_1297_p2 <= "1" when (indvar_flatten_reg_512 = bound_reg_2613) else "0";
    icmp_ln137_fu_1177_p2 <= "1" when (p_shl1_fu_1113_p3 = cast10_fu_1110_p1) else "0";
    icmp_ln139_1_fu_1422_p2 <= "1" when (i_reg_524 = nky_reg_2454) else "0";
    icmp_ln139_fu_1250_p2 <= "1" when (nky_reg_2454 = ap_const_lv32_0) else "0";
    icmp_ln1406_fu_920_p2 <= "1" when (layer_cnt_2_fu_240 = layer_cnt_reg_2285) else "0";
    icmp_ln1409_fu_1065_p2 <= "1" when (in_size_reg_2576 = ap_const_lv32_0) else "0";
    icmp_ln1442_fu_1926_p2 <= "1" when (layer_cnt_2_fu_240 = gmem0_addr_13_read_reg_2291) else "0";
    icmp_ln1444_fu_1930_p2 <= "1" when (out_size_reg_2585 = ap_const_lv32_0) else "0";
    icmp_ln275_fu_1843_p2 <= "1" when (mul_ln271_1_reg_2888 = ap_const_lv39_0) else "0";
    icmp_ln314_fu_1774_p2 <= "1" when (bound172_reg_2852 = ap_const_lv38_0) else "0";
    layer_cnt_3_fu_1971_p2 <= std_logic_vector(unsigned(layer_cnt_2_fu_240) + unsigned(ap_const_lv32_1));

    load_input_fifo_read_assign_proc : process(ap_CS_fsm_state45, grp_PE_fu_594_load_input_fifo5_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            load_input_fifo_read <= grp_PE_fu_594_load_input_fifo5_read;
        else 
            load_input_fifo_read <= ap_const_logic_0;
        end if; 
    end process;


    load_input_fifo_write_assign_proc : process(ap_CS_fsm_state29, grp_load_input_fu_575_load_input_fifo5_write)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            load_input_fifo_write <= grp_load_input_fu_575_load_input_fifo5_write;
        else 
            load_input_fifo_write <= ap_const_logic_0;
        end if; 
    end process;


    load_weight_fifo_read_assign_proc : process(ap_CS_fsm_state45, grp_PE_fu_594_load_weight_fifo6_read)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            load_weight_fifo_read <= grp_PE_fu_594_load_weight_fifo6_read;
        else 
            load_weight_fifo_read <= ap_const_logic_0;
        end if; 
    end process;


    load_weight_fifo_write_assign_proc : process(cmp331_i_reg_2668, ap_CS_fsm_state44, grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_load_weight_fifo_write)
    begin
        if (((cmp331_i_reg_2668 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state44))) then 
            load_weight_fifo_write <= grp_conv_kernel_Pipeline_load_weight_loop9_fu_609_load_weight_fifo_write;
        else 
            load_weight_fifo_write <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln125_1_fu_1205_p0 <= mul_ln125_1_fu_1205_p00(32 - 1 downto 0);
    mul_ln125_1_fu_1205_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_724_p2),65));
    mul_ln125_1_fu_1205_p1 <= ap_const_lv65_124924925(34 - 1 downto 0);
    mul_ln125_2_fu_1417_p0 <= 
        mul_ln127_1_reg_2722 when (icmp_ln127_reg_2711(0) = '1') else 
        tmp3592_fu_1406_p2;
    mul_ln125_fu_1161_p0 <= mul_ln125_fu_1161_p00(32 - 1 downto 0);
    mul_ln125_fu_1161_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_719_p2),65));
    mul_ln125_fu_1161_p1 <= ap_const_lv65_124924925(34 - 1 downto 0);
    mul_ln271_1_fu_1812_p0 <= mul_ln271_1_fu_1812_p00(31 - 1 downto 0);
    mul_ln271_1_fu_1812_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_reg_2883),39));
    mul_ln271_1_fu_1812_p1 <= ap_const_lv39_31(7 - 1 downto 0);
    mul_ln271_2_fu_1825_p0 <= mul_ln271_2_fu_1825_p00(30 - 1 downto 0);
    mul_ln271_2_fu_1825_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_reg_2846),71));
    mul_ln271_2_fu_1825_p1 <= mul_ln271_2_fu_1825_p10(38 - 1 downto 0);
    mul_ln271_2_fu_1825_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln271_1_fu_1812_p2),71));
    mul_ln271_3_fu_1837_p0 <= mul_ln271_3_fu_1837_p00(32 - 1 downto 0);
    mul_ln271_3_fu_1837_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(nof_reg_2407),103));
    mul_ln271_3_fu_1837_p1 <= mul_ln271_3_fu_1837_p10(69 - 1 downto 0);
    mul_ln271_3_fu_1837_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln271_2_reg_2894),103));
    mul_ln271_fu_1793_p0 <= mul_ln271_fu_1793_p00(33 - 1 downto 0);
    mul_ln271_fu_1793_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln271_fu_1783_p2),67));
    mul_ln271_fu_1793_p1 <= ap_const_lv67_24924924A(35 - 1 downto 0);
    mul_ln310_1_fu_1718_p0 <= mul_ln310_1_fu_1718_p00(32 - 1 downto 0);
    mul_ln310_1_fu_1718_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_724_p2),65));
    mul_ln310_1_fu_1718_p1 <= ap_const_lv65_124924925(34 - 1 downto 0);
    mul_ln310_fu_1698_p0 <= mul_ln310_fu_1698_p00(32 - 1 downto 0);
    mul_ln310_fu_1698_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_719_p2),65));
    mul_ln310_fu_1698_p1 <= ap_const_lv65_124924925(34 - 1 downto 0);
    or_ln127_fu_1433_p2 <= (select_ln125_6_reg_2728 or icmp_ln127_reg_2711);
    or_ln129_1_fu_1455_p2 <= (or_ln129_reg_2747 or icmp_ln127_reg_2711);
    or_ln129_fu_1374_p2 <= (select_ln127_4_fu_1367_p3 or select_ln125_6_fu_1338_p3);
    or_ln131_fu_1486_p2 <= (select_ln129_4_reg_2753 or select_ln127_4_reg_2740);
    or_ln135_fu_1643_p2 <= (or_ln131_reg_2780 or or_ln127_reg_2769);
    or_ln137_1_fu_1532_p2 <= (or_ln137_fu_1527_p2 or or_ln131_fu_1486_p2);
    or_ln137_2_fu_1615_p2 <= (select_ln131_2_reg_2762 or select_ln129_4_reg_2753);
    or_ln137_3_fu_1538_p2 <= (or_ln137_1_fu_1532_p2 or or_ln127_fu_1433_p2);
    or_ln137_4_fu_1619_p2 <= (or_ln137_2_fu_1615_p2 or or_ln129_reg_2747);
    or_ln137_5_fu_1624_p2 <= (or_ln137_4_fu_1619_p2 or icmp_ln127_reg_2711);
    or_ln137_fu_1527_p2 <= (select_ln135_fu_1521_p3 or select_ln131_2_reg_2762);
    p_cast21_fu_1906_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_20_fu_1898_p3),64));
    p_cast26_fu_1575_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_1567_p3),64));
        p_cast_cast_fu_759_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast_fu_749_p4),64));

    p_cast_fu_749_p4 <= end_layer(63 downto 2);
    p_shl1_fu_1113_p3 <= (nky_reg_2454 & ap_const_lv3_0);
    p_shl_fu_1130_p3 <= (bound_fu_1120_p2 & ap_const_lv3_0);

    pe_out_fifo_read_assign_proc : process(grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_pe_out_fifo_read, ap_CS_fsm_state48)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            pe_out_fifo_read <= grp_conv_kernel_Pipeline_batch_norm_loop1_batch_norm_loop3_batch_norm_loop5_batch_no_fu_618_pe_out_fifo_read;
        else 
            pe_out_fifo_read <= ap_const_logic_0;
        end if; 
    end process;


    pe_out_fifo_write_assign_proc : process(ap_CS_fsm_state45, grp_PE_fu_594_pe_out_fifo7_write)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            pe_out_fifo_write <= grp_PE_fu_594_pe_out_fifo7_write;
        else 
            pe_out_fifo_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln125_2_fu_1427_p3 <= 
        icmp_ln139_reg_2677 when (icmp_ln127_reg_2711(0) = '1') else 
        icmp_ln139_1_fu_1422_p2;
    select_ln125_3_fu_1302_p3 <= 
        icmp_ln137_reg_2635 when (icmp_ln127_fu_1287_p2(0) = '1') else 
        icmp_ln137_1_fu_1297_p2;
    select_ln125_4_fu_1314_p3 <= 
        icmp_ln135_reg_2643 when (icmp_ln127_fu_1287_p2(0) = '1') else 
        icmp_ln135_1_fu_1309_p2;
    select_ln125_5_fu_1326_p3 <= 
        icmp_ln131_reg_2686 when (icmp_ln127_fu_1287_p2(0) = '1') else 
        icmp_ln131_1_fu_1321_p2;
    select_ln125_6_fu_1338_p3 <= 
        icmp_ln129_reg_2692 when (icmp_ln127_fu_1287_p2(0) = '1') else 
        icmp_ln129_1_fu_1333_p2;
    select_ln125_7_fu_1345_p3 <= 
        f_out_9_fu_1270_p2 when (icmp_ln127_fu_1287_p2(0) = '1') else 
        f_out_reg_441;
    select_ln125_fu_1401_p3 <= 
        mul_ln127_1_reg_2722 when (icmp_ln127_reg_2711(0) = '1') else 
        mul_ln127_reg_2697;
    select_ln127_1_fu_1449_p3 <= 
        icmp_ln139_reg_2677 when (select_ln125_6_reg_2728(0) = '1') else 
        select_ln125_2_fu_1427_p3;
    select_ln127_2_fu_1353_p3 <= 
        icmp_ln137_reg_2635 when (select_ln125_6_fu_1338_p3(0) = '1') else 
        select_ln125_3_fu_1302_p3;
    select_ln127_3_fu_1360_p3 <= 
        icmp_ln135_reg_2643 when (select_ln125_6_fu_1338_p3(0) = '1') else 
        select_ln125_4_fu_1314_p3;
    select_ln127_4_fu_1367_p3 <= 
        icmp_ln131_reg_2686 when (select_ln125_6_fu_1338_p3(0) = '1') else 
        select_ln125_5_fu_1326_p3;
    select_ln127_5_fu_1687_p3 <= 
        ap_const_lv134_lc_2 when (icmp_ln127_reg_2711(0) = '1') else 
        add_ln127_fu_1681_p2;
    select_ln127_fu_1442_p3 <= 
        tmp4_mid192_fu_1437_p2 when (select_ln125_6_reg_2728(0) = '1') else 
        mul_ln125_2_fu_1417_p2;
    select_ln129_1_fu_1467_p3 <= 
        tmp4_mid192_fu_1437_p2 when (select_ln127_4_reg_2740(0) = '1') else 
        select_ln127_fu_1442_p3;
    select_ln129_2_fu_1474_p3 <= 
        icmp_ln139_reg_2677 when (select_ln127_4_reg_2740(0) = '1') else 
        select_ln127_1_fu_1449_p3;
    select_ln129_3_fu_1380_p3 <= 
        icmp_ln137_reg_2635 when (select_ln127_4_fu_1367_p3(0) = '1') else 
        select_ln127_2_fu_1353_p3;
    select_ln129_4_fu_1387_p3 <= 
        icmp_ln135_reg_2643 when (select_ln127_4_fu_1367_p3(0) = '1') else 
        select_ln127_3_fu_1360_p3;
    select_ln129_5_fu_1674_p3 <= 
        ap_const_lv102_1 when (or_ln127_reg_2769(0) = '1') else 
        add_ln129_fu_1668_p2;
    select_ln129_fu_1459_p3 <= 
        ap_const_lv32_0 when (or_ln129_1_fu_1455_p2(0) = '1') else 
        f_in_reg_488;
    select_ln131_1_fu_1508_p3 <= 
        icmp_ln139_reg_2677 when (select_ln129_4_reg_2753(0) = '1') else 
        select_ln129_2_fu_1474_p3;
    select_ln131_2_fu_1394_p3 <= 
        icmp_ln137_reg_2635 when (select_ln129_4_fu_1387_p3(0) = '1') else 
        select_ln129_3_fu_1380_p3;
    select_ln131_3_fu_1514_p3 <= 
        f_in_3_fu_1480_p2 when (select_ln129_4_reg_2753(0) = '1') else 
        select_ln129_fu_1459_p3;
    select_ln131_4_fu_1661_p3 <= 
        ap_const_lv70_1 when (or_ln129_1_reg_2775(0) = '1') else 
        add_ln131_1_fu_1655_p2;
    select_ln131_fu_1501_p3 <= 
        tmp4_mid1_fu_1496_p2 when (select_ln129_4_reg_2753(0) = '1') else 
        select_ln129_1_fu_1467_p3;
    select_ln135_1_fu_1647_p3 <= 
        ap_const_lv38_1 when (or_ln135_fu_1643_p2(0) = '1') else 
        add_ln135_fu_1637_p2;
    select_ln135_fu_1521_p3 <= 
        icmp_ln139_reg_2677 when (select_ln131_2_reg_2762(0) = '1') else 
        select_ln131_1_fu_1508_p3;
    select_ln137_1_fu_1629_p3 <= 
        ap_const_lv35_1 when (or_ln137_5_fu_1624_p2(0) = '1') else 
        add_ln137_fu_1609_p2;
    select_ln137_fu_1544_p3 <= 
        ap_const_lv32_0 when (or_ln137_3_fu_1538_p2(0) = '1') else 
        i_reg_524;
        sext_ln1376_fu_739_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln4_fu_729_p4),64));

        sext_ln1409_1_fu_1096_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1409_1_reg_2598),64));

        sext_ln1409_fu_789_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln5_reg_2273),64));

        sext_ln141_fu_1594_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln7_reg_2800),64));

        sext_ln1444_1_fu_1961_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1444_1_reg_2938),64));

        sext_ln1444_fu_798_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln6_reg_2279),64));

    shl_ln6_fu_1865_p3 <= (add_ln507_1_fu_1860_p2 & ap_const_lv2_0);
    shl_ln9_fu_1935_p3 <= (base_addr_out_reg_2535 & ap_const_lv2_0);
    shl_ln_fu_1070_p3 <= (base_addr_in_reg_2525 & ap_const_lv2_0);

    skip_out_fifo_read_assign_proc : process(grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_skip_out_fifo_read, ap_CS_fsm_state54)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            skip_out_fifo_read <= grp_conv_kernel_Pipeline_sotre_output_loop6_fu_653_skip_out_fifo_read;
        else 
            skip_out_fifo_read <= ap_const_logic_0;
        end if; 
    end process;


    skip_out_fifo_write_assign_proc : process(ap_CS_fsm_state51, grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_skip_out_fifo_write)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            skip_out_fifo_write <= grp_conv_kernel_Pipeline_skip_conn_loop1_skip_conn_loop3_skip_conn_loop5_skip_conn_l_fu_635_skip_out_fifo_write;
        else 
            skip_out_fifo_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp2_fu_1552_p2 <= std_logic_vector(unsigned(select_ln137_fu_1544_p3) + unsigned(select_ln131_fu_1501_p3));
    tmp3592_fu_1406_p2 <= std_logic_vector(unsigned(f_in_reg_488) + unsigned(mul_ln127_reg_2697));
    tmp4_mid1_fu_1496_p0 <= std_logic_vector(unsigned(f_in_3_fu_1480_p2) + unsigned(select_ln125_fu_1401_p3));
    tmp_20_fu_1898_p3 <= (add5_le_i_fu_1893_p2 & ap_const_lv2_0);
    tmp_7_fu_1567_p3 <= (empty_69_fu_1562_p2 & ap_const_lv2_0);
    trunc_ln4_fu_729_p4 <= start_layer(63 downto 2);
    zext_ln1409_fu_1077_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_1070_p3),64));
    zext_ln1444_fu_1942_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln9_fu_1935_p3),64));
    zext_ln271_fu_1780_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(nox_reg_2431),33));
    zext_ln507_fu_1873_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln6_fu_1865_p3),64));
end behav;
