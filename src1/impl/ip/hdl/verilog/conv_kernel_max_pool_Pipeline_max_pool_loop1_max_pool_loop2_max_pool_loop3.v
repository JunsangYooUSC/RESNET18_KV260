// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_kernel_max_pool_Pipeline_max_pool_loop1_max_pool_loop2_max_pool_loop3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST,
        m_axi_gmem0_WID,
        m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST,
        m_axi_gmem0_RID,
        m_axi_gmem0_RFIFONUM,
        m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP,
        m_axi_gmem0_BID,
        m_axi_gmem0_BUSER,
        noy,
        stride,
        pad,
        add26,
        mul_ln410_1,
        out_base_addr,
        act_mem,
        add36,
        mul_ln410,
        brmerge_mid132,
        brmerge46_mid144,
        brmerge49_mid156,
        nox,
        icmp_ln422_1,
        mul35,
        sub_ln435,
        grp_fu_371_p_din0,
        grp_fu_371_p_din1,
        grp_fu_371_p_opcode,
        grp_fu_371_p_dout0,
        grp_fu_371_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 9'd1;
parameter    ap_ST_fsm_pp0_stage1 = 9'd2;
parameter    ap_ST_fsm_pp0_stage2 = 9'd4;
parameter    ap_ST_fsm_pp0_stage3 = 9'd8;
parameter    ap_ST_fsm_pp0_stage4 = 9'd16;
parameter    ap_ST_fsm_pp0_stage5 = 9'd32;
parameter    ap_ST_fsm_pp0_stage6 = 9'd64;
parameter    ap_ST_fsm_pp0_stage7 = 9'd128;
parameter    ap_ST_fsm_pp0_stage8 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem0_AWVALID;
input   m_axi_gmem0_AWREADY;
output  [63:0] m_axi_gmem0_AWADDR;
output  [0:0] m_axi_gmem0_AWID;
output  [31:0] m_axi_gmem0_AWLEN;
output  [2:0] m_axi_gmem0_AWSIZE;
output  [1:0] m_axi_gmem0_AWBURST;
output  [1:0] m_axi_gmem0_AWLOCK;
output  [3:0] m_axi_gmem0_AWCACHE;
output  [2:0] m_axi_gmem0_AWPROT;
output  [3:0] m_axi_gmem0_AWQOS;
output  [3:0] m_axi_gmem0_AWREGION;
output  [0:0] m_axi_gmem0_AWUSER;
output   m_axi_gmem0_WVALID;
input   m_axi_gmem0_WREADY;
output  [31:0] m_axi_gmem0_WDATA;
output  [3:0] m_axi_gmem0_WSTRB;
output   m_axi_gmem0_WLAST;
output  [0:0] m_axi_gmem0_WID;
output  [0:0] m_axi_gmem0_WUSER;
output   m_axi_gmem0_ARVALID;
input   m_axi_gmem0_ARREADY;
output  [63:0] m_axi_gmem0_ARADDR;
output  [0:0] m_axi_gmem0_ARID;
output  [31:0] m_axi_gmem0_ARLEN;
output  [2:0] m_axi_gmem0_ARSIZE;
output  [1:0] m_axi_gmem0_ARBURST;
output  [1:0] m_axi_gmem0_ARLOCK;
output  [3:0] m_axi_gmem0_ARCACHE;
output  [2:0] m_axi_gmem0_ARPROT;
output  [3:0] m_axi_gmem0_ARQOS;
output  [3:0] m_axi_gmem0_ARREGION;
output  [0:0] m_axi_gmem0_ARUSER;
input   m_axi_gmem0_RVALID;
output   m_axi_gmem0_RREADY;
input  [31:0] m_axi_gmem0_RDATA;
input   m_axi_gmem0_RLAST;
input  [0:0] m_axi_gmem0_RID;
input  [8:0] m_axi_gmem0_RFIFONUM;
input  [0:0] m_axi_gmem0_RUSER;
input  [1:0] m_axi_gmem0_RRESP;
input   m_axi_gmem0_BVALID;
output   m_axi_gmem0_BREADY;
input  [1:0] m_axi_gmem0_BRESP;
input  [0:0] m_axi_gmem0_BID;
input  [0:0] m_axi_gmem0_BUSER;
input  [31:0] noy;
input  [31:0] stride;
input  [31:0] pad;
input  [31:0] add26;
input  [95:0] mul_ln410_1;
input  [31:0] out_base_addr;
input  [63:0] act_mem;
input  [31:0] add36;
input  [63:0] mul_ln410;
input  [0:0] brmerge_mid132;
input  [0:0] brmerge46_mid144;
input  [0:0] brmerge49_mid156;
input  [31:0] nox;
input  [0:0] icmp_ln422_1;
input  [31:0] mul35;
input  [31:0] sub_ln435;
output  [31:0] grp_fu_371_p_din0;
output  [31:0] grp_fu_371_p_din1;
output  [4:0] grp_fu_371_p_opcode;
input  [0:0] grp_fu_371_p_dout0;
output   grp_fu_371_p_ce;

reg ap_idle;
reg m_axi_gmem0_AWVALID;
reg m_axi_gmem0_WVALID;
reg m_axi_gmem0_ARVALID;
reg[63:0] m_axi_gmem0_ARADDR;
reg m_axi_gmem0_RREADY;
reg m_axi_gmem0_BREADY;

(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state9_pp0_stage8_iter0;
reg   [0:0] icmp_ln418_reg_2501;
reg   [0:0] or_ln431_6_reg_2624;
reg    ap_predicate_op272_readreq_state9;
reg    ap_block_state9_io;
reg   [0:0] icmp_ln418_reg_2501_pp0_iter1_reg;
reg   [0:0] or_ln431_8_reg_2686;
reg   [0:0] or_ln431_8_reg_2686_pp0_iter1_reg;
reg    ap_predicate_op375_read_state18;
reg    ap_block_state18_pp0_stage8_iter1;
wire    ap_block_state27_pp0_stage8_iter2;
reg    ap_block_pp0_stage8_subdone;
reg    ap_condition_exit_pp0_iter0_stage8;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem0_blk_n_AW;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
reg    gmem0_blk_n_W;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
reg    gmem0_blk_n_B;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg    gmem0_blk_n_AR;
reg   [0:0] or_ln431_1_reg_2614;
reg    gmem0_blk_n_R;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
reg   [0:0] or_ln431_3_reg_2652;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
reg   [0:0] or_ln431_5_reg_2676;
wire    ap_block_pp0_stage8;
reg   [0:0] or_ln431_6_reg_2624_pp0_iter1_reg;
wire    ap_block_pp0_stage0;
reg   [0:0] or_ln431_7_reg_2662;
reg   [0:0] or_ln431_7_reg_2662_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
reg   [0:0] or_ln431_9_reg_2628;
reg   [0:0] or_ln431_9_reg_2628_pp0_iter1_reg;
reg   [0:0] or_ln431_10_reg_2666;
reg   [0:0] or_ln431_10_reg_2666_pp0_iter1_reg;
reg   [0:0] or_ln431_11_reg_2690;
reg   [0:0] icmp_ln418_reg_2501_pp0_iter2_reg;
reg   [0:0] or_ln431_11_reg_2690_pp0_iter1_reg;
reg   [31:0] max_reg_356;
reg   [31:0] max_1_reg_368;
reg   [31:0] max_3_reg_380;
reg   [31:0] max_5_reg_392;
reg   [31:0] max_7_reg_404;
reg   [31:0] max_9_reg_416;
reg   [31:0] max_11_reg_428;
reg   [31:0] max_13_reg_440;
reg   [31:0] in_val_18_reg_452;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state10_pp0_stage0_iter1;
reg    ap_predicate_op277_readreq_state10;
reg    ap_block_state10_io;
reg    ap_predicate_op399_read_state19;
reg    ap_block_state19_pp0_stage0_iter2;
wire    ap_block_state28_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
wire  signed [31:0] mul39_fu_508_p2;
reg  signed [31:0] mul39_reg_2494;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state11_pp0_stage1_iter1;
reg    ap_predicate_op283_readreq_state11;
reg    ap_block_state11_io;
reg    ap_predicate_op422_read_state20;
reg    ap_block_state20_pp0_stage1_iter2;
reg    ap_block_state29_pp0_stage1_iter3;
reg    ap_block_pp0_stage1_11001;
wire   [0:0] icmp_ln418_fu_519_p2;
wire   [0:0] icmp_ln420_fu_533_p2;
reg   [0:0] icmp_ln420_reg_2505;
wire  signed [31:0] mul39_mid1_fu_538_p2;
reg  signed [31:0] mul39_mid1_reg_2521;
wire   [31:0] mul40_fu_586_p2;
reg   [31:0] mul40_reg_2528;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state12_pp0_stage2_iter1;
reg    ap_predicate_op290_readreq_state12;
reg    ap_block_state12_io;
reg    ap_predicate_op444_read_state21;
reg    ap_block_state21_pp0_stage2_iter2;
reg    ap_block_pp0_stage2_11001;
wire   [31:0] mul20_fu_590_p2;
reg   [31:0] mul20_reg_2533;
wire   [31:0] mul781_fu_595_p2;
reg   [31:0] mul781_reg_2542;
wire   [31:0] select_ln418_fu_600_p3;
reg   [31:0] select_ln418_reg_2547;
wire  signed [31:0] select_ln420_fu_803_p3;
reg  signed [31:0] select_ln420_reg_2553;
wire    ap_block_state4_pp0_stage3_iter0;
reg    ap_predicate_op291_read_state13;
reg    ap_block_state13_pp0_stage3_iter1;
reg    ap_predicate_op299_readreq_state13;
reg    ap_block_state13_io;
wire    ap_block_state22_pp0_stage3_iter2;
reg    ap_block_pp0_stage3_11001;
wire  signed [31:0] select_ln420_1_fu_822_p3;
reg  signed [31:0] select_ln420_1_reg_2559;
wire   [0:0] select_ln420_2_fu_858_p3;
reg   [0:0] select_ln420_2_reg_2564;
wire   [0:0] select_ln420_3_fu_900_p3;
reg   [0:0] select_ln420_3_reg_2571;
wire   [0:0] select_ln420_4_fu_942_p3;
reg   [0:0] select_ln420_4_reg_2578;
wire  signed [31:0] select_ln420_5_fu_950_p3;
reg  signed [31:0] select_ln420_5_reg_2585;
wire  signed [31:0] select_ln420_6_fu_958_p3;
reg  signed [31:0] select_ln420_6_reg_2590;
wire  signed [31:0] select_ln420_7_fu_966_p3;
reg  signed [31:0] select_ln420_7_reg_2595;
wire   [31:0] add_ln420_3_fu_1001_p2;
reg   [31:0] add_ln420_3_reg_2600;
wire    ap_block_state5_pp0_stage4_iter0;
reg    ap_predicate_op301_read_state14;
reg    ap_block_state14_pp0_stage4_iter1;
reg    ap_predicate_op309_readreq_state14;
reg    ap_block_state14_io;
wire    ap_block_state23_pp0_stage4_iter2;
reg    ap_block_pp0_stage4_11001;
wire   [31:0] mul29_fu_1006_p2;
reg   [31:0] mul29_reg_2606;
wire   [0:0] or_ln431_1_fu_1032_p2;
reg   [63:0] gmem0_addr_reg_2618;
wire   [0:0] or_ln431_6_fu_1080_p2;
wire   [0:0] or_ln431_9_fu_1085_p2;
wire   [31:0] add_ln420_1_fu_1094_p2;
reg   [31:0] add_ln420_1_reg_2632;
wire    ap_block_state6_pp0_stage5_iter0;
reg    ap_predicate_op172_readreq_state6;
reg    ap_block_state6_io;
reg    ap_predicate_op313_read_state15;
reg    ap_block_state15_pp0_stage5_iter1;
wire    ap_block_state24_pp0_stage5_iter2;
reg    ap_block_pp0_stage5_11001;
wire   [31:0] add_ln420_2_fu_1103_p2;
reg   [31:0] add_ln420_2_reg_2639;
wire   [31:0] add_ln431_fu_1108_p2;
reg   [31:0] add_ln431_reg_2646;
wire   [0:0] or_ln431_3_fu_1135_p2;
reg   [63:0] gmem0_addr_1_reg_2656;
wire   [0:0] or_ln431_7_fu_1182_p2;
wire   [0:0] or_ln431_10_fu_1187_p2;
wire   [31:0] add_ln431_1_fu_1196_p2;
reg   [31:0] add_ln431_1_reg_2670;
wire    ap_block_state7_pp0_stage6_iter0;
reg    ap_predicate_op197_readreq_state7;
reg    ap_block_state7_io;
reg    ap_predicate_op324_read_state16;
reg    ap_block_state16_pp0_stage6_iter1;
wire    ap_block_state25_pp0_stage6_iter2;
reg    ap_block_pp0_stage6_11001;
wire   [0:0] or_ln431_5_fu_1223_p2;
reg   [63:0] gmem0_addr_2_reg_2680;
wire   [0:0] or_ln431_8_fu_1270_p2;
wire   [0:0] or_ln431_11_fu_1275_p2;
reg   [63:0] gmem0_addr_9_reg_2694;
reg   [63:0] gmem0_addr_9_reg_2694_pp0_iter1_reg;
reg   [63:0] gmem0_addr_3_reg_2700;
wire    ap_block_state8_pp0_stage7_iter0;
reg    ap_predicate_op226_readreq_state8;
reg    ap_block_state8_io;
reg    ap_predicate_op350_read_state17;
reg    ap_block_state17_pp0_stage7_iter1;
wire    ap_block_state26_pp0_stage7_iter2;
reg    ap_block_pp0_stage7_11001;
reg   [63:0] gmem0_addr_4_reg_2706;
reg   [63:0] gmem0_addr_5_reg_2712;
reg   [63:0] gmem0_addr_6_reg_2718;
reg   [63:0] gmem0_addr_7_reg_2724;
reg   [63:0] gmem0_addr_8_reg_2730;
wire   [31:0] in_val_fu_1573_p1;
reg   [31:0] in_val_reg_2736;
wire   [31:0] in_val_2_fu_1577_p1;
reg   [31:0] in_val_2_reg_2741;
wire   [31:0] in_val_4_fu_1581_p1;
reg   [31:0] in_val_4_reg_2746;
wire   [31:0] in_val_6_fu_1585_p1;
reg   [31:0] in_val_6_reg_2751;
wire   [31:0] max_2_fu_1673_p3;
reg   [31:0] max_2_reg_2756;
wire   [31:0] in_val_8_fu_1682_p1;
reg   [31:0] in_val_8_reg_2763;
wire   [31:0] max_4_fu_1769_p3;
reg   [31:0] max_4_reg_2768;
wire   [31:0] in_val_10_fu_1777_p1;
reg   [31:0] in_val_10_reg_2775;
reg    ap_block_pp0_stage8_11001;
wire   [31:0] max_6_fu_1864_p3;
reg   [31:0] max_6_reg_2780;
wire   [31:0] in_val_12_fu_1872_p1;
reg   [31:0] in_val_12_reg_2787;
wire   [31:0] max_8_fu_1959_p3;
reg   [31:0] max_8_reg_2792;
wire   [31:0] in_val_14_fu_1967_p1;
reg   [31:0] in_val_14_reg_2799;
wire   [31:0] max_10_fu_2054_p3;
reg   [31:0] max_10_reg_2804;
wire   [31:0] in_val_16_fu_2062_p1;
reg   [31:0] in_val_16_reg_2811;
wire   [31:0] max_12_fu_2149_p3;
reg   [31:0] max_12_reg_2816;
wire   [31:0] max_14_fu_2240_p3;
reg   [31:0] max_14_reg_2823;
wire   [31:0] max_16_fu_2331_p3;
reg   [31:0] max_16_reg_2830;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage1_subdone;
wire   [31:0] ap_phi_reg_pp0_iter0_max_reg_356;
reg   [31:0] ap_phi_reg_pp0_iter1_max_reg_356;
reg   [31:0] ap_phi_mux_max_1_phi_fu_372_p4;
wire   [31:0] ap_phi_reg_pp0_iter1_max_1_reg_368;
reg   [31:0] ap_phi_mux_max_3_phi_fu_384_p4;
wire   [31:0] ap_phi_reg_pp0_iter1_max_3_reg_380;
reg   [31:0] ap_phi_mux_max_5_phi_fu_396_p4;
wire   [31:0] ap_phi_reg_pp0_iter1_max_5_reg_392;
reg   [31:0] ap_phi_mux_max_7_phi_fu_408_p4;
wire   [31:0] ap_phi_reg_pp0_iter1_max_7_reg_404;
reg   [31:0] ap_phi_mux_max_9_phi_fu_420_p4;
wire   [31:0] ap_phi_reg_pp0_iter2_max_9_reg_416;
reg   [31:0] ap_phi_mux_max_11_phi_fu_432_p4;
wire   [31:0] ap_phi_reg_pp0_iter2_max_11_reg_428;
reg   [31:0] ap_phi_mux_max_13_phi_fu_444_p4;
wire   [31:0] ap_phi_reg_pp0_iter2_max_13_reg_440;
reg   [31:0] ap_phi_mux_in_val_18_phi_fu_456_p4;
wire   [31:0] ap_phi_reg_pp0_iter2_in_val_18_reg_452;
wire  signed [63:0] sext_ln436_fu_1070_p1;
wire  signed [63:0] sext_ln436_1_fu_1172_p1;
wire  signed [63:0] sext_ln436_2_fu_1260_p1;
wire  signed [63:0] sext_ln449_fu_1317_p1;
wire  signed [63:0] sext_ln436_3_fu_1358_p1;
wire  signed [63:0] sext_ln436_4_fu_1399_p1;
wire  signed [63:0] sext_ln436_5_fu_1440_p1;
wire  signed [63:0] sext_ln436_6_fu_1481_p1;
wire  signed [63:0] sext_ln436_7_fu_1522_p1;
wire  signed [63:0] sext_ln436_8_fu_1563_p1;
reg    ap_block_pp0_stage5_01001;
reg   [31:0] x_fu_116;
wire   [31:0] add_ln422_fu_981_p2;
wire    ap_loop_init;
reg  signed [31:0] y_fu_120;
wire   [31:0] select_ln420_8_fu_974_p3;
reg   [63:0] indvar_flatten_fu_124;
wire   [63:0] select_ln420_9_fu_560_p3;
reg  signed [31:0] f_fu_128;
wire   [31:0] select_ln418_11_fu_543_p3;
reg   [95:0] indvar_flatten66_fu_132;
wire   [95:0] add_ln418_fu_524_p2;
reg   [31:0] grp_fu_464_p0;
reg   [31:0] grp_fu_464_p1;
wire  signed [31:0] f_3_fu_513_p0;
wire  signed [31:0] f_3_fu_513_p2;
wire  signed [31:0] select_ln418_11_fu_543_p2;
wire   [63:0] add_ln420_4_fu_554_p2;
wire  signed [31:0] mul781_fu_595_p0;
wire  signed [31:0] select_ln418_fu_600_p2;
wire   [0:0] ult_fu_615_p2;
wire   [31:0] sub45_fu_607_p2;
wire   [0:0] cmp22_fu_611_p2;
wire   [0:0] rev34_fu_619_p2;
wire   [31:0] add21_1_fu_636_p2;
wire   [0:0] ult35_fu_646_p2;
wire   [0:0] cmp22_1_fu_641_p2;
wire   [0:0] rev36_fu_651_p2;
wire   [31:0] add21_2_fu_669_p2;
wire   [0:0] ult37_fu_679_p2;
wire   [0:0] cmp22_2_fu_674_p2;
wire   [0:0] rev38_fu_684_p2;
wire   [31:0] mul40_mid1_fu_710_p2;
wire   [31:0] sub45_mid1_fu_714_p2;
wire   [0:0] brmerge_fu_630_p2;
wire   [0:0] brmerge46_fu_663_p2;
wire   [0:0] brmerge49_fu_696_p2;
wire   [31:0] mul417_mid152_fu_749_p2;
wire   [31:0] mul417_fu_690_p2;
wire   [31:0] mul415_mid140_fu_737_p2;
wire   [31:0] mul415_fu_657_p2;
wire   [31:0] mul413_fu_625_p2;
wire  signed [31:0] icmp_ln422_fu_782_p1;
wire   [0:0] icmp_ln422_fu_782_p2;
wire   [0:0] select_ln418_10_fu_787_p3;
wire   [0:0] or_ln420_fu_798_p2;
wire  signed [31:0] y_3_fu_793_p2;
wire   [31:0] select_ln418_1_fu_705_p3;
wire   [31:0] mul781_mid1_fu_816_p2;
wire   [31:0] select_ln418_3_fu_726_p3;
wire   [31:0] mul20_mid1_fu_811_p2;
wire   [0:0] ult43_fu_835_p2;
wire   [31:0] select_ln418_2_fu_719_p3;
wire   [0:0] cmp22_mid1_fu_830_p2;
wire   [0:0] rev44_fu_840_p2;
wire   [0:0] brmerge_mid1_fu_852_p2;
wire   [0:0] select_ln418_4_fu_731_p3;
wire   [31:0] add21_1_mid1_fu_866_p2;
wire   [0:0] ult45_fu_877_p2;
wire   [0:0] cmp22_1_mid1_fu_872_p2;
wire   [0:0] rev46_fu_882_p2;
wire   [0:0] brmerge46_mid1_fu_894_p2;
wire   [0:0] select_ln418_5_fu_743_p3;
wire   [31:0] add21_2_mid1_fu_908_p2;
wire   [0:0] ult47_fu_919_p2;
wire   [0:0] cmp22_2_mid1_fu_914_p2;
wire   [0:0] rev48_fu_924_p2;
wire   [0:0] brmerge49_mid1_fu_936_p2;
wire   [0:0] select_ln418_6_fu_755_p3;
wire   [31:0] mul417_mid1_fu_930_p2;
wire   [31:0] select_ln418_7_fu_761_p3;
wire   [31:0] mul415_mid1_fu_888_p2;
wire   [31:0] select_ln418_8_fu_768_p3;
wire   [31:0] mul413_mid1_fu_846_p2;
wire   [31:0] select_ln418_9_fu_775_p3;
wire   [31:0] mul_ln420_3_fu_997_p2;
wire   [0:0] icmp_ln431_1_fu_1015_p2;
wire   [0:0] icmp_ln431_fu_1010_p2;
wire   [0:0] xor_ln431_fu_1020_p2;
wire   [0:0] or_ln431_fu_1026_p2;
wire   [31:0] add_ln436_fu_1037_p2;
wire   [33:0] shl_ln_fu_1043_p3;
wire   [63:0] zext_ln436_fu_1051_p1;
wire   [63:0] add_ln436_1_fu_1055_p2;
wire   [61:0] trunc_ln1_fu_1060_p4;
wire   [31:0] mul_ln420_1_fu_1090_p2;
wire   [31:0] mul_ln420_2_fu_1099_p2;
wire   [0:0] icmp_ln431_3_fu_1118_p2;
wire   [0:0] icmp_ln431_2_fu_1113_p2;
wire   [0:0] xor_ln431_1_fu_1123_p2;
wire   [0:0] or_ln431_2_fu_1129_p2;
wire   [31:0] add_ln436_2_fu_1140_p2;
wire   [33:0] shl_ln436_1_fu_1145_p3;
wire   [63:0] zext_ln436_1_fu_1153_p1;
wire   [63:0] add_ln436_3_fu_1157_p2;
wire   [61:0] trunc_ln436_1_fu_1162_p4;
wire   [0:0] icmp_ln431_5_fu_1206_p2;
wire   [0:0] icmp_ln431_4_fu_1201_p2;
wire   [0:0] xor_ln431_2_fu_1211_p2;
wire   [0:0] or_ln431_4_fu_1217_p2;
wire   [31:0] add_ln436_4_fu_1228_p2;
wire   [33:0] shl_ln436_2_fu_1233_p3;
wire   [63:0] zext_ln436_2_fu_1241_p1;
wire   [63:0] add_ln436_5_fu_1245_p2;
wire   [61:0] trunc_ln436_2_fu_1250_p4;
wire   [31:0] add_ln449_2_fu_1280_p2;
wire   [31:0] mul_ln420_fu_1192_p2;
wire   [31:0] add_ln449_fu_1284_p2;
wire   [33:0] shl_ln1_fu_1290_p3;
wire   [63:0] zext_ln449_fu_1298_p1;
wire   [63:0] add_ln449_1_fu_1302_p2;
wire   [61:0] trunc_ln3_fu_1307_p4;
wire   [31:0] add_ln436_6_fu_1327_p2;
wire   [33:0] shl_ln436_3_fu_1331_p3;
wire   [63:0] zext_ln436_3_fu_1339_p1;
wire   [63:0] add_ln436_7_fu_1343_p2;
wire   [61:0] trunc_ln436_3_fu_1348_p4;
wire   [31:0] add_ln436_8_fu_1368_p2;
wire   [33:0] shl_ln436_4_fu_1372_p3;
wire   [63:0] zext_ln436_4_fu_1380_p1;
wire   [63:0] add_ln436_9_fu_1384_p2;
wire   [61:0] trunc_ln436_4_fu_1389_p4;
wire   [31:0] add_ln436_10_fu_1409_p2;
wire   [33:0] shl_ln436_5_fu_1413_p3;
wire   [63:0] zext_ln436_5_fu_1421_p1;
wire   [63:0] add_ln436_11_fu_1425_p2;
wire   [61:0] trunc_ln436_5_fu_1430_p4;
wire   [31:0] add_ln436_12_fu_1450_p2;
wire   [33:0] shl_ln436_6_fu_1454_p3;
wire   [63:0] zext_ln436_6_fu_1462_p1;
wire   [63:0] add_ln436_13_fu_1466_p2;
wire   [61:0] trunc_ln436_6_fu_1471_p4;
wire   [31:0] add_ln436_14_fu_1491_p2;
wire   [33:0] shl_ln436_7_fu_1495_p3;
wire   [63:0] zext_ln436_7_fu_1503_p1;
wire   [63:0] add_ln436_15_fu_1507_p2;
wire   [61:0] trunc_ln436_7_fu_1512_p4;
wire   [31:0] add_ln436_16_fu_1532_p2;
wire   [33:0] shl_ln436_8_fu_1536_p3;
wire   [63:0] zext_ln436_8_fu_1544_p1;
wire   [63:0] add_ln436_17_fu_1548_p2;
wire   [61:0] trunc_ln436_8_fu_1553_p4;
wire   [31:0] bitcast_ln444_fu_1589_p1;
wire   [31:0] bitcast_ln444_1_fu_1607_p1;
wire   [7:0] tmp_fu_1593_p4;
wire   [22:0] trunc_ln444_fu_1603_p1;
wire   [0:0] icmp_ln444_1_fu_1631_p2;
wire   [0:0] icmp_ln444_fu_1625_p2;
wire   [7:0] tmp_1_fu_1611_p4;
wire   [22:0] trunc_ln444_1_fu_1621_p1;
wire   [0:0] icmp_ln444_3_fu_1649_p2;
wire   [0:0] icmp_ln444_2_fu_1643_p2;
wire   [0:0] or_ln444_fu_1637_p2;
wire   [0:0] or_ln444_1_fu_1655_p2;
wire   [0:0] and_ln444_fu_1661_p2;
wire   [0:0] and_ln444_1_fu_1667_p2;
wire   [31:0] bitcast_ln444_2_fu_1686_p1;
wire   [31:0] bitcast_ln444_3_fu_1704_p1;
wire   [7:0] tmp_3_fu_1690_p4;
wire   [22:0] trunc_ln444_2_fu_1700_p1;
wire   [0:0] icmp_ln444_5_fu_1727_p2;
wire   [0:0] icmp_ln444_4_fu_1721_p2;
wire   [7:0] tmp_4_fu_1707_p4;
wire   [22:0] trunc_ln444_3_fu_1717_p1;
wire   [0:0] icmp_ln444_7_fu_1745_p2;
wire   [0:0] icmp_ln444_6_fu_1739_p2;
wire   [0:0] or_ln444_2_fu_1733_p2;
wire   [0:0] or_ln444_3_fu_1751_p2;
wire   [0:0] and_ln444_2_fu_1757_p2;
wire   [0:0] and_ln444_3_fu_1763_p2;
wire   [31:0] bitcast_ln444_4_fu_1781_p1;
wire   [31:0] bitcast_ln444_5_fu_1799_p1;
wire   [7:0] tmp_6_fu_1785_p4;
wire   [22:0] trunc_ln444_4_fu_1795_p1;
wire   [0:0] icmp_ln444_9_fu_1822_p2;
wire   [0:0] icmp_ln444_8_fu_1816_p2;
wire   [7:0] tmp_7_fu_1802_p4;
wire   [22:0] trunc_ln444_5_fu_1812_p1;
wire   [0:0] icmp_ln444_11_fu_1840_p2;
wire   [0:0] icmp_ln444_10_fu_1834_p2;
wire   [0:0] or_ln444_4_fu_1828_p2;
wire   [0:0] or_ln444_5_fu_1846_p2;
wire   [0:0] and_ln444_4_fu_1852_p2;
wire   [0:0] and_ln444_5_fu_1858_p2;
wire   [31:0] bitcast_ln444_6_fu_1876_p1;
wire   [31:0] bitcast_ln444_7_fu_1894_p1;
wire   [7:0] tmp_9_fu_1880_p4;
wire   [22:0] trunc_ln444_6_fu_1890_p1;
wire   [0:0] icmp_ln444_13_fu_1917_p2;
wire   [0:0] icmp_ln444_12_fu_1911_p2;
wire   [7:0] tmp_s_fu_1897_p4;
wire   [22:0] trunc_ln444_7_fu_1907_p1;
wire   [0:0] icmp_ln444_15_fu_1935_p2;
wire   [0:0] icmp_ln444_14_fu_1929_p2;
wire   [0:0] or_ln444_6_fu_1923_p2;
wire   [0:0] or_ln444_7_fu_1941_p2;
wire   [0:0] and_ln444_6_fu_1947_p2;
wire   [0:0] and_ln444_7_fu_1953_p2;
wire   [31:0] bitcast_ln444_8_fu_1971_p1;
wire   [31:0] bitcast_ln444_9_fu_1989_p1;
wire   [7:0] tmp_11_fu_1975_p4;
wire   [22:0] trunc_ln444_8_fu_1985_p1;
wire   [0:0] icmp_ln444_17_fu_2012_p2;
wire   [0:0] icmp_ln444_16_fu_2006_p2;
wire   [7:0] tmp_12_fu_1992_p4;
wire   [22:0] trunc_ln444_9_fu_2002_p1;
wire   [0:0] icmp_ln444_19_fu_2030_p2;
wire   [0:0] icmp_ln444_18_fu_2024_p2;
wire   [0:0] or_ln444_8_fu_2018_p2;
wire   [0:0] or_ln444_9_fu_2036_p2;
wire   [0:0] and_ln444_8_fu_2042_p2;
wire   [0:0] and_ln444_9_fu_2048_p2;
wire   [31:0] bitcast_ln444_10_fu_2066_p1;
wire   [31:0] bitcast_ln444_11_fu_2084_p1;
wire   [7:0] tmp_14_fu_2070_p4;
wire   [22:0] trunc_ln444_10_fu_2080_p1;
wire   [0:0] icmp_ln444_21_fu_2107_p2;
wire   [0:0] icmp_ln444_20_fu_2101_p2;
wire   [7:0] tmp_15_fu_2087_p4;
wire   [22:0] trunc_ln444_11_fu_2097_p1;
wire   [0:0] icmp_ln444_23_fu_2125_p2;
wire   [0:0] icmp_ln444_22_fu_2119_p2;
wire   [0:0] or_ln444_10_fu_2113_p2;
wire   [0:0] or_ln444_11_fu_2131_p2;
wire   [0:0] and_ln444_10_fu_2137_p2;
wire   [0:0] and_ln444_11_fu_2143_p2;
wire   [31:0] bitcast_ln444_12_fu_2157_p1;
wire   [31:0] bitcast_ln444_13_fu_2175_p1;
wire   [7:0] tmp_17_fu_2161_p4;
wire   [22:0] trunc_ln444_12_fu_2171_p1;
wire   [0:0] icmp_ln444_25_fu_2198_p2;
wire   [0:0] icmp_ln444_24_fu_2192_p2;
wire   [7:0] tmp_18_fu_2178_p4;
wire   [22:0] trunc_ln444_13_fu_2188_p1;
wire   [0:0] icmp_ln444_27_fu_2216_p2;
wire   [0:0] icmp_ln444_26_fu_2210_p2;
wire   [0:0] or_ln444_12_fu_2204_p2;
wire   [0:0] or_ln444_13_fu_2222_p2;
wire   [0:0] and_ln444_12_fu_2228_p2;
wire   [0:0] and_ln444_13_fu_2234_p2;
wire   [31:0] bitcast_ln444_14_fu_2248_p1;
wire   [31:0] bitcast_ln444_15_fu_2266_p1;
wire   [7:0] tmp_20_fu_2252_p4;
wire   [22:0] trunc_ln444_14_fu_2262_p1;
wire   [0:0] icmp_ln444_29_fu_2289_p2;
wire   [0:0] icmp_ln444_28_fu_2283_p2;
wire   [7:0] tmp_21_fu_2269_p4;
wire   [22:0] trunc_ln444_15_fu_2279_p1;
wire   [0:0] icmp_ln444_31_fu_2307_p2;
wire   [0:0] icmp_ln444_30_fu_2301_p2;
wire   [0:0] or_ln444_14_fu_2295_p2;
wire   [0:0] or_ln444_15_fu_2313_p2;
wire   [0:0] and_ln444_14_fu_2319_p2;
wire   [0:0] and_ln444_15_fu_2325_p2;
reg    grp_fu_464_ce;
reg    ap_block_pp0_stage5_00001;
reg    ap_block_pp0_stage6_00001;
reg    ap_block_pp0_stage7_00001;
reg    ap_block_pp0_stage8_00001;
reg    ap_block_pp0_stage0_00001;
reg    ap_block_pp0_stage1_00001;
reg    ap_block_pp0_stage2_00001;
reg    ap_block_pp0_stage3_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter2_stage1;
reg    ap_idle_pp0_0to1;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [8:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to3;
reg    ap_done_pending_pp0;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage7_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_818;
reg    ap_condition_794;
reg    ap_condition_806;
reg    ap_condition_737;
reg    ap_condition_756;
reg    ap_condition_766;
reg    ap_condition_775;
reg    ap_condition_784;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 9'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

conv_kernel_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U347(
    .din0(f_fu_128),
    .din1(noy),
    .dout(mul39_fu_508_p2)
);

conv_kernel_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U348(
    .din0(f_3_fu_513_p2),
    .din1(noy),
    .dout(mul39_mid1_fu_538_p2)
);

conv_kernel_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U349(
    .din0(mul39_reg_2494),
    .din1(stride),
    .dout(mul40_fu_586_p2)
);

conv_kernel_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U350(
    .din0(y_fu_120),
    .din1(stride),
    .dout(mul20_fu_590_p2)
);

conv_kernel_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U351(
    .din0(mul39_mid1_reg_2521),
    .din1(stride),
    .dout(mul40_mid1_fu_710_p2)
);

conv_kernel_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U352(
    .din0(y_3_fu_793_p2),
    .din1(stride),
    .dout(mul20_mid1_fu_811_p2)
);

conv_kernel_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U353(
    .din0(select_ln420_7_reg_2595),
    .din1(mul35),
    .dout(mul_ln420_3_fu_997_p2)
);

conv_kernel_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U354(
    .din0(select_ln420_reg_2553),
    .din1(stride),
    .dout(mul29_fu_1006_p2)
);

conv_kernel_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U355(
    .din0(select_ln420_5_reg_2585),
    .din1(mul35),
    .dout(mul_ln420_1_fu_1090_p2)
);

conv_kernel_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U356(
    .din0(select_ln420_6_reg_2590),
    .din1(mul35),
    .dout(mul_ln420_2_fu_1099_p2)
);

conv_kernel_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U357(
    .din0(select_ln420_1_reg_2559),
    .din1(nox),
    .dout(mul_ln420_fu_1192_p2)
);

conv_kernel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage8),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage8)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to1 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter2_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to1 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter2_stage1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (or_ln431_1_reg_2614 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd0))) begin
        ap_phi_reg_pp0_iter1_max_reg_356 <= in_val_reg_2736;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        ap_phi_reg_pp0_iter1_max_reg_356 <= ap_phi_reg_pp0_iter0_max_reg_356;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        f_fu_128 <= 32'd0;
    end else if (((icmp_ln418_fu_519_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        f_fu_128 <= select_ln418_11_fu_543_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_818)) begin
        if (((or_ln431_11_reg_2690_pp0_iter1_reg == 1'd0) & (icmp_ln418_reg_2501_pp0_iter2_reg == 1'd0))) begin
            in_val_18_reg_452 <= in_val_16_reg_2811;
        end else if ((1'b1 == 1'b1)) begin
            in_val_18_reg_452 <= ap_phi_reg_pp0_iter2_in_val_18_reg_452;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten66_fu_132 <= 96'd0;
    end else if (((icmp_ln418_fu_519_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        indvar_flatten66_fu_132 <= add_ln418_fu_524_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_fu_124 <= 64'd0;
    end else if (((icmp_ln418_fu_519_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        indvar_flatten_fu_124 <= select_ln420_9_fu_560_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_794)) begin
        if (((or_ln431_9_reg_2628_pp0_iter1_reg == 1'd0) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd0))) begin
            max_11_reg_428 <= in_val_12_reg_2787;
        end else if ((1'b1 == 1'b1)) begin
            max_11_reg_428 <= ap_phi_reg_pp0_iter2_max_11_reg_428;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_806)) begin
        if (((icmp_ln418_reg_2501_pp0_iter2_reg == 1'd0) & (or_ln431_10_reg_2666_pp0_iter1_reg == 1'd0))) begin
            max_13_reg_440 <= in_val_14_reg_2799;
        end else if ((1'b1 == 1'b1)) begin
            max_13_reg_440 <= ap_phi_reg_pp0_iter2_max_13_reg_440;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_737)) begin
        if (((or_ln431_3_reg_2652 == 1'd0) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd0))) begin
            max_1_reg_368 <= in_val_2_reg_2741;
        end else if ((1'b1 == 1'b1)) begin
            max_1_reg_368 <= ap_phi_reg_pp0_iter1_max_1_reg_368;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_756)) begin
        if (((or_ln431_5_reg_2676 == 1'd0) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd0))) begin
            max_3_reg_380 <= in_val_4_reg_2746;
        end else if ((1'b1 == 1'b1)) begin
            max_3_reg_380 <= ap_phi_reg_pp0_iter1_max_3_reg_380;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_766)) begin
        if (((or_ln431_6_reg_2624_pp0_iter1_reg == 1'd0) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd0))) begin
            max_5_reg_392 <= in_val_6_reg_2751;
        end else if ((1'b1 == 1'b1)) begin
            max_5_reg_392 <= ap_phi_reg_pp0_iter1_max_5_reg_392;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_775)) begin
        if (((or_ln431_7_reg_2662_pp0_iter1_reg == 1'd0) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd0))) begin
            max_7_reg_404 <= in_val_8_reg_2763;
        end else if ((1'b1 == 1'b1)) begin
            max_7_reg_404 <= ap_phi_reg_pp0_iter1_max_7_reg_404;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_784)) begin
        if (((or_ln431_8_reg_2686_pp0_iter1_reg == 1'd0) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd0))) begin
            max_9_reg_416 <= in_val_10_reg_2775;
        end else if ((1'b1 == 1'b1)) begin
            max_9_reg_416 <= ap_phi_reg_pp0_iter2_max_9_reg_416;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        x_fu_116 <= 32'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln418_reg_2501 == 1'd0))) begin
        x_fu_116 <= add_ln422_fu_981_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        y_fu_120 <= 32'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln418_reg_2501 == 1'd0))) begin
        y_fu_120 <= select_ln420_8_fu_974_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln418_reg_2501 == 1'd0))) begin
        add_ln420_1_reg_2632 <= add_ln420_1_fu_1094_p2;
        add_ln420_2_reg_2639 <= add_ln420_2_fu_1103_p2;
        add_ln431_reg_2646 <= add_ln431_fu_1108_p2;
        or_ln431_10_reg_2666 <= or_ln431_10_fu_1187_p2;
        or_ln431_3_reg_2652 <= or_ln431_3_fu_1135_p2;
        or_ln431_7_reg_2662 <= or_ln431_7_fu_1182_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln418_reg_2501 == 1'd0))) begin
        add_ln420_3_reg_2600 <= add_ln420_3_fu_1001_p2;
        mul29_reg_2606 <= mul29_fu_1006_p2;
        or_ln431_1_reg_2614 <= or_ln431_1_fu_1032_p2;
        or_ln431_6_reg_2624 <= or_ln431_6_fu_1080_p2;
        or_ln431_9_reg_2628 <= or_ln431_9_fu_1085_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln418_reg_2501 == 1'd0))) begin
        add_ln431_1_reg_2670 <= add_ln431_1_fu_1196_p2;
        gmem0_addr_9_reg_2694 <= sext_ln449_fu_1317_p1;
        or_ln431_11_reg_2690 <= or_ln431_11_fu_1275_p2;
        or_ln431_5_reg_2676 <= or_ln431_5_fu_1223_p2;
        or_ln431_8_reg_2686 <= or_ln431_8_fu_1270_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln431_3_fu_1135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln418_reg_2501 == 1'd0))) begin
        gmem0_addr_1_reg_2656 <= sext_ln436_1_fu_1172_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln431_5_fu_1223_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln418_reg_2501 == 1'd0))) begin
        gmem0_addr_2_reg_2680 <= sext_ln436_2_fu_1260_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (or_ln431_6_reg_2624 == 1'd0) & (icmp_ln418_reg_2501 == 1'd0))) begin
        gmem0_addr_3_reg_2700 <= sext_ln436_3_fu_1358_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln431_7_reg_2662 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln418_reg_2501 == 1'd0))) begin
        gmem0_addr_4_reg_2706 <= sext_ln436_4_fu_1399_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (or_ln431_8_reg_2686 == 1'd0) & (icmp_ln418_reg_2501 == 1'd0))) begin
        gmem0_addr_5_reg_2712 <= sext_ln436_5_fu_1440_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln431_9_reg_2628 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln418_reg_2501 == 1'd0))) begin
        gmem0_addr_6_reg_2718 <= sext_ln436_6_fu_1481_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln431_10_reg_2666 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln418_reg_2501 == 1'd0))) begin
        gmem0_addr_7_reg_2724 <= sext_ln436_7_fu_1522_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln431_11_reg_2690 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln418_reg_2501 == 1'd0))) begin
        gmem0_addr_8_reg_2730 <= sext_ln436_8_fu_1563_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        gmem0_addr_9_reg_2694_pp0_iter1_reg <= gmem0_addr_9_reg_2694;
        max_2_reg_2756 <= max_2_fu_1673_p3;
        or_ln431_11_reg_2690_pp0_iter1_reg <= or_ln431_11_reg_2690;
        or_ln431_8_reg_2686_pp0_iter1_reg <= or_ln431_8_reg_2686;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln431_1_fu_1032_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln418_reg_2501 == 1'd0))) begin
        gmem0_addr_reg_2618 <= sext_ln436_fu_1070_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        icmp_ln418_reg_2501 <= icmp_ln418_fu_519_p2;
        icmp_ln418_reg_2501_pp0_iter1_reg <= icmp_ln418_reg_2501;
        icmp_ln418_reg_2501_pp0_iter2_reg <= icmp_ln418_reg_2501_pp0_iter1_reg;
        max_10_reg_2804 <= max_10_fu_2054_p3;
        mul39_reg_2494 <= mul39_fu_508_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln418_fu_519_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        icmp_ln420_reg_2505 <= icmp_ln420_fu_533_p2;
        mul39_mid1_reg_2521 <= mul39_mid1_fu_538_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001) & (or_ln431_8_reg_2686_pp0_iter1_reg == 1'd0) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd0))) begin
        in_val_10_reg_2775 <= in_val_10_fu_1777_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln431_9_reg_2628_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd0))) begin
        in_val_12_reg_2787 <= in_val_12_fu_1872_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln431_10_reg_2666_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd0))) begin
        in_val_14_reg_2799 <= in_val_14_fu_1967_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln431_11_reg_2690_pp0_iter1_reg == 1'd0) & (icmp_ln418_reg_2501_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        in_val_16_reg_2811 <= in_val_16_fu_2062_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln431_3_reg_2652 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd0))) begin
        in_val_2_reg_2741 <= in_val_2_fu_1577_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln431_5_reg_2676 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd0))) begin
        in_val_4_reg_2746 <= in_val_4_fu_1581_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln431_6_reg_2624_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd0))) begin
        in_val_6_reg_2751 <= in_val_6_fu_1585_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln431_7_reg_2662_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd0))) begin
        in_val_8_reg_2763 <= in_val_8_fu_1682_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (or_ln431_1_reg_2614 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd0))) begin
        in_val_reg_2736 <= in_val_fu_1573_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        max_12_reg_2816 <= max_12_fu_2149_p3;
        mul20_reg_2533 <= mul20_fu_590_p2;
        mul40_reg_2528 <= mul40_fu_586_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        max_14_reg_2823 <= max_14_fu_2240_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        max_16_reg_2830 <= max_16_fu_2331_p3;
        or_ln431_6_reg_2624_pp0_iter1_reg <= or_ln431_6_reg_2624;
        or_ln431_9_reg_2628_pp0_iter1_reg <= or_ln431_9_reg_2628;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        max_4_reg_2768 <= max_4_fu_1769_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        max_6_reg_2780 <= max_6_fu_1864_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        max_8_reg_2792 <= max_8_fu_1959_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        max_reg_356 <= ap_phi_reg_pp0_iter1_max_reg_356;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln420_reg_2505 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        mul781_reg_2542 <= mul781_fu_595_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        or_ln431_10_reg_2666_pp0_iter1_reg <= or_ln431_10_reg_2666;
        or_ln431_7_reg_2662_pp0_iter1_reg <= or_ln431_7_reg_2662;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln418_reg_2501 == 1'd0))) begin
        select_ln418_reg_2547 <= select_ln418_fu_600_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln418_reg_2501 == 1'd0))) begin
        select_ln420_1_reg_2559 <= select_ln420_1_fu_822_p3;
        select_ln420_2_reg_2564 <= select_ln420_2_fu_858_p3;
        select_ln420_3_reg_2571 <= select_ln420_3_fu_900_p3;
        select_ln420_4_reg_2578 <= select_ln420_4_fu_942_p3;
        select_ln420_5_reg_2585 <= select_ln420_5_fu_950_p3;
        select_ln420_6_reg_2590 <= select_ln420_6_fu_958_p3;
        select_ln420_7_reg_2595 <= select_ln420_7_fu_966_p3;
        select_ln420_reg_2553 <= select_ln420_fu_803_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_subdone) & (icmp_ln418_reg_2501 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage8 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage8 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter2_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter2_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (~((ap_loop_exit_ready_pp0_iter2_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0) & (ap_loop_exit_ready == 1'b0))) begin
        ap_done_pending_pp0 = 1'b1;
    end else begin
        ap_done_pending_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to3 = 1'b1;
    end else begin
        ap_idle_pp0_1to3 = 1'b0;
    end
end

always @ (*) begin
    if (((or_ln431_11_reg_2690_pp0_iter1_reg == 1'd0) & (icmp_ln418_reg_2501_pp0_iter2_reg == 1'd0))) begin
        ap_phi_mux_in_val_18_phi_fu_456_p4 = in_val_16_reg_2811;
    end else begin
        ap_phi_mux_in_val_18_phi_fu_456_p4 = 32'd0;
    end
end

always @ (*) begin
    if (((or_ln431_9_reg_2628_pp0_iter1_reg == 1'd0) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_max_11_phi_fu_432_p4 = in_val_12_reg_2787;
    end else begin
        ap_phi_mux_max_11_phi_fu_432_p4 = 32'd0;
    end
end

always @ (*) begin
    if (((icmp_ln418_reg_2501_pp0_iter2_reg == 1'd0) & (or_ln431_10_reg_2666_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_max_13_phi_fu_444_p4 = in_val_14_reg_2799;
    end else begin
        ap_phi_mux_max_13_phi_fu_444_p4 = 32'd0;
    end
end

always @ (*) begin
    if (((or_ln431_3_reg_2652 == 1'd0) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_max_1_phi_fu_372_p4 = in_val_2_reg_2741;
    end else begin
        ap_phi_mux_max_1_phi_fu_372_p4 = 32'd0;
    end
end

always @ (*) begin
    if (((or_ln431_5_reg_2676 == 1'd0) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_max_3_phi_fu_384_p4 = in_val_4_reg_2746;
    end else begin
        ap_phi_mux_max_3_phi_fu_384_p4 = 32'd0;
    end
end

always @ (*) begin
    if (((or_ln431_6_reg_2624_pp0_iter1_reg == 1'd0) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_max_5_phi_fu_396_p4 = in_val_6_reg_2751;
    end else begin
        ap_phi_mux_max_5_phi_fu_396_p4 = 32'd0;
    end
end

always @ (*) begin
    if (((or_ln431_7_reg_2662_pp0_iter1_reg == 1'd0) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_max_7_phi_fu_408_p4 = in_val_8_reg_2763;
    end else begin
        ap_phi_mux_max_7_phi_fu_408_p4 = 32'd0;
    end
end

always @ (*) begin
    if (((or_ln431_8_reg_2686_pp0_iter1_reg == 1'd0) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_max_9_phi_fu_420_p4 = in_val_10_reg_2775;
    end else begin
        ap_phi_mux_max_9_phi_fu_420_p4 = 32'd0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if ((((or_ln431_11_reg_2690 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd0)) | ((or_ln431_10_reg_2666 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (or_ln431_9_reg_2628 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (or_ln431_7_reg_2662 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln418_reg_2501 == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (or_ln431_8_reg_2686 == 1'd0) & (icmp_ln418_reg_2501 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8) & (ap_predicate_op272_readreq_state9 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln431_5_reg_2676 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7) & (icmp_ln418_reg_2501 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln431_3_reg_2652 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6) & (icmp_ln418_reg_2501 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (or_ln431_1_reg_2614 == 1'd0) & (1'b0 == ap_block_pp0_stage5) & (icmp_ln418_reg_2501 == 1'd0)))) begin
        gmem0_blk_n_AR = m_axi_gmem0_ARREADY;
    end else begin
        gmem0_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        gmem0_blk_n_AW = m_axi_gmem0_AWREADY;
    end else begin
        gmem0_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        gmem0_blk_n_B = m_axi_gmem0_BVALID;
    end else begin
        gmem0_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (or_ln431_11_reg_2690_pp0_iter1_reg == 1'd0) & (icmp_ln418_reg_2501_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (or_ln431_10_reg_2666_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (or_ln431_9_reg_2628_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8) & (ap_predicate_op375_read_state18 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (or_ln431_7_reg_2662_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (or_ln431_6_reg_2624_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (or_ln431_5_reg_2676 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (or_ln431_3_reg_2652 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (or_ln431_1_reg_2614 == 1'd0) & (1'b0 == ap_block_pp0_stage3) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd0)))) begin
        gmem0_blk_n_R = m_axi_gmem0_RVALID;
    end else begin
        gmem0_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
        gmem0_blk_n_W = m_axi_gmem0_WREADY;
    end else begin
        gmem0_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)))) begin
        grp_fu_464_ce = 1'b1;
    end else begin
        grp_fu_464_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_464_p0 = ap_phi_mux_in_val_18_phi_fu_456_p4;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_464_p0 = ap_phi_mux_max_13_phi_fu_444_p4;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_464_p0 = ap_phi_mux_max_11_phi_fu_432_p4;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_464_p0 = ap_phi_mux_max_9_phi_fu_420_p4;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8))) begin
        grp_fu_464_p0 = ap_phi_mux_max_7_phi_fu_408_p4;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7))) begin
        grp_fu_464_p0 = ap_phi_mux_max_5_phi_fu_396_p4;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6))) begin
        grp_fu_464_p0 = ap_phi_mux_max_3_phi_fu_384_p4;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
        grp_fu_464_p0 = ap_phi_mux_max_1_phi_fu_372_p4;
    end else begin
        grp_fu_464_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_464_p1 = max_14_fu_2240_p3;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_464_p1 = max_12_fu_2149_p3;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_464_p1 = max_10_fu_2054_p3;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_464_p1 = max_8_fu_1959_p3;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8))) begin
        grp_fu_464_p1 = max_6_fu_1864_p3;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7))) begin
        grp_fu_464_p1 = max_4_fu_1769_p3;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6))) begin
        grp_fu_464_p1 = max_2_fu_1673_p3;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
        grp_fu_464_p1 = ap_phi_reg_pp0_iter1_max_reg_356;
    end else begin
        grp_fu_464_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_predicate_op309_readreq_state14 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        m_axi_gmem0_ARADDR = gmem0_addr_8_reg_2730;
    end else if (((ap_predicate_op299_readreq_state13 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        m_axi_gmem0_ARADDR = gmem0_addr_7_reg_2724;
    end else if (((ap_predicate_op290_readreq_state12 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        m_axi_gmem0_ARADDR = gmem0_addr_6_reg_2718;
    end else if (((ap_predicate_op283_readreq_state11 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        m_axi_gmem0_ARADDR = gmem0_addr_5_reg_2712;
    end else if (((ap_predicate_op277_readreq_state10 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_axi_gmem0_ARADDR = gmem0_addr_4_reg_2706;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_predicate_op272_readreq_state9 == 1'b1))) begin
        m_axi_gmem0_ARADDR = gmem0_addr_3_reg_2700;
    end else if (((ap_predicate_op226_readreq_state8 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        m_axi_gmem0_ARADDR = gmem0_addr_2_reg_2680;
    end else if (((ap_predicate_op197_readreq_state7 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        m_axi_gmem0_ARADDR = gmem0_addr_1_reg_2656;
    end else if (((ap_predicate_op172_readreq_state6 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        m_axi_gmem0_ARADDR = gmem0_addr_reg_2618;
    end else begin
        m_axi_gmem0_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op226_readreq_state8 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_predicate_op197_readreq_state7 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_predicate_op172_readreq_state6 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_predicate_op309_readreq_state14 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_predicate_op299_readreq_state13 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_predicate_op290_readreq_state12 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_predicate_op283_readreq_state11 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_predicate_op277_readreq_state10 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_predicate_op272_readreq_state9 == 1'b1)))) begin
        m_axi_gmem0_ARVALID = 1'b1;
    end else begin
        m_axi_gmem0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        m_axi_gmem0_AWVALID = 1'b1;
    end else begin
        m_axi_gmem0_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        m_axi_gmem0_BREADY = 1'b1;
    end else begin
        m_axi_gmem0_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op350_read_state17 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_predicate_op324_read_state16 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_predicate_op313_read_state15 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_predicate_op301_read_state14 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_predicate_op291_read_state13 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_predicate_op444_read_state21 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_predicate_op422_read_state20 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_predicate_op399_read_state19 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_predicate_op375_read_state18 == 1'b1)))) begin
        m_axi_gmem0_RREADY = 1'b1;
    end else begin
        m_axi_gmem0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        m_axi_gmem0_WVALID = 1'b1;
    end else begin
        m_axi_gmem0_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_done_pending_pp0 == 1'b0) & (ap_idle_pp0_1to3 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (((ap_idle_pp0_0to1 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter2_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add21_1_fu_636_p2 = (mul20_reg_2533 + 32'd1);

assign add21_1_mid1_fu_866_p2 = (mul20_mid1_fu_811_p2 + 32'd1);

assign add21_2_fu_669_p2 = (mul20_reg_2533 + 32'd2);

assign add21_2_mid1_fu_908_p2 = (mul20_mid1_fu_811_p2 + 32'd2);

assign add_ln418_fu_524_p2 = (indvar_flatten66_fu_132 + 96'd1);

assign add_ln420_1_fu_1094_p2 = (mul_ln420_1_fu_1090_p2 + sub_ln435);

assign add_ln420_2_fu_1103_p2 = (mul_ln420_2_fu_1099_p2 + sub_ln435);

assign add_ln420_3_fu_1001_p2 = (mul_ln420_3_fu_997_p2 + sub_ln435);

assign add_ln420_4_fu_554_p2 = (indvar_flatten_fu_124 + 64'd1);

assign add_ln422_fu_981_p2 = ($signed(select_ln420_fu_803_p3) + $signed(32'd1));

assign add_ln431_1_fu_1196_p2 = (mul29_reg_2606 + 32'd2);

assign add_ln431_fu_1108_p2 = (mul29_reg_2606 + 32'd1);

assign add_ln436_10_fu_1409_p2 = (add_ln431_1_reg_2670 + add_ln420_2_reg_2639);

assign add_ln436_11_fu_1425_p2 = (zext_ln436_5_fu_1421_p1 + act_mem);

assign add_ln436_12_fu_1450_p2 = (mul29_reg_2606 + add_ln420_1_reg_2632);

assign add_ln436_13_fu_1466_p2 = (zext_ln436_6_fu_1462_p1 + act_mem);

assign add_ln436_14_fu_1491_p2 = (add_ln431_reg_2646 + add_ln420_1_reg_2632);

assign add_ln436_15_fu_1507_p2 = (zext_ln436_7_fu_1503_p1 + act_mem);

assign add_ln436_16_fu_1532_p2 = (add_ln431_1_reg_2670 + add_ln420_1_reg_2632);

assign add_ln436_17_fu_1548_p2 = (zext_ln436_8_fu_1544_p1 + act_mem);

assign add_ln436_1_fu_1055_p2 = (zext_ln436_fu_1051_p1 + act_mem);

assign add_ln436_2_fu_1140_p2 = (add_ln431_fu_1108_p2 + add_ln420_3_reg_2600);

assign add_ln436_3_fu_1157_p2 = (zext_ln436_1_fu_1153_p1 + act_mem);

assign add_ln436_4_fu_1228_p2 = (add_ln431_1_fu_1196_p2 + add_ln420_3_reg_2600);

assign add_ln436_5_fu_1245_p2 = (zext_ln436_2_fu_1241_p1 + act_mem);

assign add_ln436_6_fu_1327_p2 = (mul29_reg_2606 + add_ln420_2_reg_2639);

assign add_ln436_7_fu_1343_p2 = (zext_ln436_3_fu_1339_p1 + act_mem);

assign add_ln436_8_fu_1368_p2 = (add_ln431_reg_2646 + add_ln420_2_reg_2639);

assign add_ln436_9_fu_1384_p2 = (zext_ln436_4_fu_1380_p1 + act_mem);

assign add_ln436_fu_1037_p2 = (mul29_fu_1006_p2 + add_ln420_3_fu_1001_p2);

assign add_ln449_1_fu_1302_p2 = (zext_ln449_fu_1298_p1 + act_mem);

assign add_ln449_2_fu_1280_p2 = ($signed(select_ln420_reg_2553) + $signed(out_base_addr));

assign add_ln449_fu_1284_p2 = (add_ln449_2_fu_1280_p2 + mul_ln420_fu_1192_p2);

assign and_ln444_10_fu_2137_p2 = (or_ln444_11_fu_2131_p2 & or_ln444_10_fu_2113_p2);

assign and_ln444_11_fu_2143_p2 = (grp_fu_371_p_dout0 & and_ln444_10_fu_2137_p2);

assign and_ln444_12_fu_2228_p2 = (or_ln444_13_fu_2222_p2 & or_ln444_12_fu_2204_p2);

assign and_ln444_13_fu_2234_p2 = (grp_fu_371_p_dout0 & and_ln444_12_fu_2228_p2);

assign and_ln444_14_fu_2319_p2 = (or_ln444_15_fu_2313_p2 & or_ln444_14_fu_2295_p2);

assign and_ln444_15_fu_2325_p2 = (grp_fu_371_p_dout0 & and_ln444_14_fu_2319_p2);

assign and_ln444_1_fu_1667_p2 = (grp_fu_371_p_dout0 & and_ln444_fu_1661_p2);

assign and_ln444_2_fu_1757_p2 = (or_ln444_3_fu_1751_p2 & or_ln444_2_fu_1733_p2);

assign and_ln444_3_fu_1763_p2 = (grp_fu_371_p_dout0 & and_ln444_2_fu_1757_p2);

assign and_ln444_4_fu_1852_p2 = (or_ln444_5_fu_1846_p2 & or_ln444_4_fu_1828_p2);

assign and_ln444_5_fu_1858_p2 = (grp_fu_371_p_dout0 & and_ln444_4_fu_1852_p2);

assign and_ln444_6_fu_1947_p2 = (or_ln444_7_fu_1941_p2 & or_ln444_6_fu_1923_p2);

assign and_ln444_7_fu_1953_p2 = (grp_fu_371_p_dout0 & and_ln444_6_fu_1947_p2);

assign and_ln444_8_fu_2042_p2 = (or_ln444_9_fu_2036_p2 & or_ln444_8_fu_2018_p2);

assign and_ln444_9_fu_2048_p2 = (grp_fu_371_p_dout0 & and_ln444_8_fu_2042_p2);

assign and_ln444_fu_1661_p2 = (or_ln444_fu_1637_p2 & or_ln444_1_fu_1655_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_00001 = ((m_axi_gmem0_RVALID == 1'b0) & (ap_predicate_op399_read_state19 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state10_io)) | ((m_axi_gmem0_RVALID == 1'b0) & (ap_predicate_op399_read_state19 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state10_io)) | ((m_axi_gmem0_RVALID == 1'b0) & (ap_predicate_op399_read_state19 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_00001 = (((m_axi_gmem0_BVALID == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((m_axi_gmem0_RVALID == 1'b0) & (ap_predicate_op422_read_state20 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((m_axi_gmem0_BVALID == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state11_io)) | ((m_axi_gmem0_RVALID == 1'b0) & (ap_predicate_op422_read_state20 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((m_axi_gmem0_BVALID == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state11_io)) | ((m_axi_gmem0_RVALID == 1'b0) & (ap_predicate_op422_read_state20 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_00001 = ((m_axi_gmem0_RVALID == 1'b0) & (ap_predicate_op444_read_state21 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state12_io)) | ((m_axi_gmem0_RVALID == 1'b0) & (ap_predicate_op444_read_state21 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state12_io)) | ((m_axi_gmem0_RVALID == 1'b0) & (ap_predicate_op444_read_state21 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_00001 = ((m_axi_gmem0_RVALID == 1'b0) & (ap_predicate_op291_read_state13 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state13_io) | ((m_axi_gmem0_RVALID == 1'b0) & (ap_predicate_op291_read_state13 == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state13_io) | ((m_axi_gmem0_RVALID == 1'b0) & (ap_predicate_op291_read_state13 == 1'b1))));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = (((m_axi_gmem0_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state14_io) | ((m_axi_gmem0_RVALID == 1'b0) & (ap_predicate_op301_read_state14 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = (((m_axi_gmem0_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state14_io) | ((m_axi_gmem0_RVALID == 1'b0) & (ap_predicate_op301_read_state14 == 1'b1)))));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_00001 = ((m_axi_gmem0_RVALID == 1'b0) & (ap_predicate_op313_read_state15 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage5_01001 = ((m_axi_gmem0_RVALID == 1'b0) & (ap_predicate_op313_read_state15 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage5_11001 = (((m_axi_gmem0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((m_axi_gmem0_RVALID == 1'b0) & (ap_predicate_op313_read_state15 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state6_io)));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = (((m_axi_gmem0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((m_axi_gmem0_RVALID == 1'b0) & (ap_predicate_op313_read_state15 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state6_io)));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_00001 = ((m_axi_gmem0_RVALID == 1'b0) & (ap_predicate_op324_read_state16 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage6_11001 = (((m_axi_gmem0_RVALID == 1'b0) & (ap_predicate_op324_read_state16 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state7_io)));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = (((m_axi_gmem0_RVALID == 1'b0) & (ap_predicate_op324_read_state16 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state7_io)));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_00001 = ((m_axi_gmem0_RVALID == 1'b0) & (ap_predicate_op350_read_state17 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage7_11001 = (((m_axi_gmem0_RVALID == 1'b0) & (ap_predicate_op350_read_state17 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state8_io)));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = (((m_axi_gmem0_RVALID == 1'b0) & (ap_predicate_op350_read_state17 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state8_io)));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_00001 = ((m_axi_gmem0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op375_read_state18 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage8_11001 = (((m_axi_gmem0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op375_read_state18 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state9_io)));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = (((m_axi_gmem0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op375_read_state18 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state9_io)));
end

always @ (*) begin
    ap_block_state10_io = ((m_axi_gmem0_ARREADY == 1'b0) & (ap_predicate_op277_readreq_state10 == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_io = ((m_axi_gmem0_ARREADY == 1'b0) & (ap_predicate_op283_readreq_state11 == 1'b1));
end

assign ap_block_state11_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state12_io = ((m_axi_gmem0_ARREADY == 1'b0) & (ap_predicate_op290_readreq_state12 == 1'b1));
end

assign ap_block_state12_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_io = ((m_axi_gmem0_ARREADY == 1'b0) & (ap_predicate_op299_readreq_state13 == 1'b1));
end

always @ (*) begin
    ap_block_state13_pp0_stage3_iter1 = ((m_axi_gmem0_RVALID == 1'b0) & (ap_predicate_op291_read_state13 == 1'b1));
end

always @ (*) begin
    ap_block_state14_io = ((m_axi_gmem0_ARREADY == 1'b0) & (ap_predicate_op309_readreq_state14 == 1'b1));
end

always @ (*) begin
    ap_block_state14_pp0_stage4_iter1 = ((m_axi_gmem0_RVALID == 1'b0) & (ap_predicate_op301_read_state14 == 1'b1));
end

always @ (*) begin
    ap_block_state15_pp0_stage5_iter1 = ((m_axi_gmem0_RVALID == 1'b0) & (ap_predicate_op313_read_state15 == 1'b1));
end

always @ (*) begin
    ap_block_state16_pp0_stage6_iter1 = ((m_axi_gmem0_RVALID == 1'b0) & (ap_predicate_op324_read_state16 == 1'b1));
end

always @ (*) begin
    ap_block_state17_pp0_stage7_iter1 = ((m_axi_gmem0_RVALID == 1'b0) & (ap_predicate_op350_read_state17 == 1'b1));
end

always @ (*) begin
    ap_block_state18_pp0_stage8_iter1 = ((m_axi_gmem0_RVALID == 1'b0) & (ap_predicate_op375_read_state18 == 1'b1));
end

always @ (*) begin
    ap_block_state19_pp0_stage0_iter2 = ((m_axi_gmem0_RVALID == 1'b0) & (ap_predicate_op399_read_state19 == 1'b1));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state20_pp0_stage1_iter2 = ((m_axi_gmem0_RVALID == 1'b0) & (ap_predicate_op422_read_state20 == 1'b1));
end

always @ (*) begin
    ap_block_state21_pp0_stage2_iter2 = ((m_axi_gmem0_RVALID == 1'b0) & (ap_predicate_op444_read_state21 == 1'b1));
end

assign ap_block_state22_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage8_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state29_pp0_stage1_iter3 = (m_axi_gmem0_BVALID == 1'b0);
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_io = ((m_axi_gmem0_ARREADY == 1'b0) & (ap_predicate_op172_readreq_state6 == 1'b1));
end

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_io = ((m_axi_gmem0_ARREADY == 1'b0) & (ap_predicate_op197_readreq_state7 == 1'b1));
end

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_io = ((m_axi_gmem0_ARREADY == 1'b0) & (ap_predicate_op226_readreq_state8 == 1'b1));
end

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_io = ((m_axi_gmem0_ARREADY == 1'b0) & (ap_predicate_op272_readreq_state9 == 1'b1));
end

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_737 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001));
end

always @ (*) begin
    ap_condition_756 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001));
end

always @ (*) begin
    ap_condition_766 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001));
end

always @ (*) begin
    ap_condition_775 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001));
end

always @ (*) begin
    ap_condition_784 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_794 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001));
end

always @ (*) begin
    ap_condition_806 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001));
end

always @ (*) begin
    ap_condition_818 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage8;

assign ap_phi_reg_pp0_iter0_max_reg_356 = 32'd0;

assign ap_phi_reg_pp0_iter1_max_1_reg_368 = 32'd0;

assign ap_phi_reg_pp0_iter1_max_3_reg_380 = 32'd0;

assign ap_phi_reg_pp0_iter1_max_5_reg_392 = 32'd0;

assign ap_phi_reg_pp0_iter1_max_7_reg_404 = 32'd0;

assign ap_phi_reg_pp0_iter2_in_val_18_reg_452 = 32'd0;

assign ap_phi_reg_pp0_iter2_max_11_reg_428 = 32'd0;

assign ap_phi_reg_pp0_iter2_max_13_reg_440 = 32'd0;

assign ap_phi_reg_pp0_iter2_max_9_reg_416 = 32'd0;

always @ (*) begin
    ap_predicate_op172_readreq_state6 = ((or_ln431_1_reg_2614 == 1'd0) & (icmp_ln418_reg_2501 == 1'd0));
end

always @ (*) begin
    ap_predicate_op197_readreq_state7 = ((or_ln431_3_reg_2652 == 1'd0) & (icmp_ln418_reg_2501 == 1'd0));
end

always @ (*) begin
    ap_predicate_op226_readreq_state8 = ((or_ln431_5_reg_2676 == 1'd0) & (icmp_ln418_reg_2501 == 1'd0));
end

always @ (*) begin
    ap_predicate_op272_readreq_state9 = ((or_ln431_6_reg_2624 == 1'd0) & (icmp_ln418_reg_2501 == 1'd0));
end

always @ (*) begin
    ap_predicate_op277_readreq_state10 = ((or_ln431_7_reg_2662 == 1'd0) & (icmp_ln418_reg_2501 == 1'd0));
end

always @ (*) begin
    ap_predicate_op283_readreq_state11 = ((or_ln431_8_reg_2686 == 1'd0) & (icmp_ln418_reg_2501 == 1'd0));
end

always @ (*) begin
    ap_predicate_op290_readreq_state12 = ((or_ln431_9_reg_2628 == 1'd0) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op291_read_state13 = ((or_ln431_1_reg_2614 == 1'd0) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op299_readreq_state13 = ((or_ln431_10_reg_2666 == 1'd0) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op301_read_state14 = ((or_ln431_3_reg_2652 == 1'd0) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op309_readreq_state14 = ((or_ln431_11_reg_2690 == 1'd0) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op313_read_state15 = ((or_ln431_5_reg_2676 == 1'd0) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op324_read_state16 = ((or_ln431_6_reg_2624_pp0_iter1_reg == 1'd0) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op350_read_state17 = ((or_ln431_7_reg_2662_pp0_iter1_reg == 1'd0) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op375_read_state18 = ((or_ln431_8_reg_2686_pp0_iter1_reg == 1'd0) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op399_read_state19 = ((or_ln431_9_reg_2628_pp0_iter1_reg == 1'd0) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op422_read_state20 = ((or_ln431_10_reg_2666_pp0_iter1_reg == 1'd0) & (icmp_ln418_reg_2501_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op444_read_state21 = ((or_ln431_11_reg_2690_pp0_iter1_reg == 1'd0) & (icmp_ln418_reg_2501_pp0_iter2_reg == 1'd0));
end

assign bitcast_ln444_10_fu_2066_p1 = max_11_reg_428;

assign bitcast_ln444_11_fu_2084_p1 = max_10_reg_2804;

assign bitcast_ln444_12_fu_2157_p1 = max_13_reg_440;

assign bitcast_ln444_13_fu_2175_p1 = max_12_reg_2816;

assign bitcast_ln444_14_fu_2248_p1 = in_val_18_reg_452;

assign bitcast_ln444_15_fu_2266_p1 = max_14_reg_2823;

assign bitcast_ln444_1_fu_1607_p1 = max_reg_356;

assign bitcast_ln444_2_fu_1686_p1 = max_3_reg_380;

assign bitcast_ln444_3_fu_1704_p1 = max_2_reg_2756;

assign bitcast_ln444_4_fu_1781_p1 = max_5_reg_392;

assign bitcast_ln444_5_fu_1799_p1 = max_4_reg_2768;

assign bitcast_ln444_6_fu_1876_p1 = max_7_reg_404;

assign bitcast_ln444_7_fu_1894_p1 = max_6_reg_2780;

assign bitcast_ln444_8_fu_1971_p1 = max_9_reg_416;

assign bitcast_ln444_9_fu_1989_p1 = max_8_reg_2792;

assign bitcast_ln444_fu_1589_p1 = max_1_reg_368;

assign brmerge46_fu_663_p2 = (rev36_fu_651_p2 | cmp22_1_fu_641_p2);

assign brmerge46_mid1_fu_894_p2 = (rev46_fu_882_p2 | cmp22_1_mid1_fu_872_p2);

assign brmerge49_fu_696_p2 = (rev38_fu_684_p2 | cmp22_2_fu_674_p2);

assign brmerge49_mid1_fu_936_p2 = (rev48_fu_924_p2 | cmp22_2_mid1_fu_914_p2);

assign brmerge_fu_630_p2 = (rev34_fu_619_p2 | cmp22_fu_611_p2);

assign brmerge_mid1_fu_852_p2 = (rev44_fu_840_p2 | cmp22_mid1_fu_830_p2);

assign cmp22_1_fu_641_p2 = ((add21_1_fu_636_p2 < pad) ? 1'b1 : 1'b0);

assign cmp22_1_mid1_fu_872_p2 = ((add21_1_mid1_fu_866_p2 < pad) ? 1'b1 : 1'b0);

assign cmp22_2_fu_674_p2 = ((add21_2_fu_669_p2 < pad) ? 1'b1 : 1'b0);

assign cmp22_2_mid1_fu_914_p2 = ((add21_2_mid1_fu_908_p2 < pad) ? 1'b1 : 1'b0);

assign cmp22_fu_611_p2 = ((mul20_reg_2533 < pad) ? 1'b1 : 1'b0);

assign cmp22_mid1_fu_830_p2 = ((mul20_mid1_fu_811_p2 < pad) ? 1'b1 : 1'b0);

assign f_3_fu_513_p0 = f_fu_128;

assign f_3_fu_513_p2 = ($signed(f_3_fu_513_p0) + $signed(32'd1));

assign grp_fu_371_p_ce = grp_fu_464_ce;

assign grp_fu_371_p_din0 = grp_fu_464_p0;

assign grp_fu_371_p_din1 = grp_fu_464_p1;

assign grp_fu_371_p_opcode = 5'd2;

assign icmp_ln418_fu_519_p2 = ((indvar_flatten66_fu_132 == mul_ln410_1) ? 1'b1 : 1'b0);

assign icmp_ln420_fu_533_p2 = ((indvar_flatten_fu_124 == mul_ln410) ? 1'b1 : 1'b0);

assign icmp_ln422_fu_782_p1 = nox;

assign icmp_ln422_fu_782_p2 = ((x_fu_116 == icmp_ln422_fu_782_p1) ? 1'b1 : 1'b0);

assign icmp_ln431_1_fu_1015_p2 = ((mul29_fu_1006_p2 < add36) ? 1'b1 : 1'b0);

assign icmp_ln431_2_fu_1113_p2 = ((add_ln431_fu_1108_p2 < pad) ? 1'b1 : 1'b0);

assign icmp_ln431_3_fu_1118_p2 = ((add_ln431_fu_1108_p2 < add36) ? 1'b1 : 1'b0);

assign icmp_ln431_4_fu_1201_p2 = ((add_ln431_1_fu_1196_p2 < pad) ? 1'b1 : 1'b0);

assign icmp_ln431_5_fu_1206_p2 = ((add_ln431_1_fu_1196_p2 < add36) ? 1'b1 : 1'b0);

assign icmp_ln431_fu_1010_p2 = ((mul29_fu_1006_p2 < pad) ? 1'b1 : 1'b0);

assign icmp_ln444_10_fu_1834_p2 = ((tmp_7_fu_1802_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln444_11_fu_1840_p2 = ((trunc_ln444_5_fu_1812_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln444_12_fu_1911_p2 = ((tmp_9_fu_1880_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln444_13_fu_1917_p2 = ((trunc_ln444_6_fu_1890_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln444_14_fu_1929_p2 = ((tmp_s_fu_1897_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln444_15_fu_1935_p2 = ((trunc_ln444_7_fu_1907_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln444_16_fu_2006_p2 = ((tmp_11_fu_1975_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln444_17_fu_2012_p2 = ((trunc_ln444_8_fu_1985_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln444_18_fu_2024_p2 = ((tmp_12_fu_1992_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln444_19_fu_2030_p2 = ((trunc_ln444_9_fu_2002_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln444_1_fu_1631_p2 = ((trunc_ln444_fu_1603_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln444_20_fu_2101_p2 = ((tmp_14_fu_2070_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln444_21_fu_2107_p2 = ((trunc_ln444_10_fu_2080_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln444_22_fu_2119_p2 = ((tmp_15_fu_2087_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln444_23_fu_2125_p2 = ((trunc_ln444_11_fu_2097_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln444_24_fu_2192_p2 = ((tmp_17_fu_2161_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln444_25_fu_2198_p2 = ((trunc_ln444_12_fu_2171_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln444_26_fu_2210_p2 = ((tmp_18_fu_2178_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln444_27_fu_2216_p2 = ((trunc_ln444_13_fu_2188_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln444_28_fu_2283_p2 = ((tmp_20_fu_2252_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln444_29_fu_2289_p2 = ((trunc_ln444_14_fu_2262_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln444_2_fu_1643_p2 = ((tmp_1_fu_1611_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln444_30_fu_2301_p2 = ((tmp_21_fu_2269_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln444_31_fu_2307_p2 = ((trunc_ln444_15_fu_2279_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln444_3_fu_1649_p2 = ((trunc_ln444_1_fu_1621_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln444_4_fu_1721_p2 = ((tmp_3_fu_1690_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln444_5_fu_1727_p2 = ((trunc_ln444_2_fu_1700_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln444_6_fu_1739_p2 = ((tmp_4_fu_1707_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln444_7_fu_1745_p2 = ((trunc_ln444_3_fu_1717_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln444_8_fu_1816_p2 = ((tmp_6_fu_1785_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln444_9_fu_1822_p2 = ((trunc_ln444_4_fu_1795_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln444_fu_1625_p2 = ((tmp_fu_1593_p4 != 8'd255) ? 1'b1 : 1'b0);

assign in_val_10_fu_1777_p1 = m_axi_gmem0_RDATA;

assign in_val_12_fu_1872_p1 = m_axi_gmem0_RDATA;

assign in_val_14_fu_1967_p1 = m_axi_gmem0_RDATA;

assign in_val_16_fu_2062_p1 = m_axi_gmem0_RDATA;

assign in_val_2_fu_1577_p1 = m_axi_gmem0_RDATA;

assign in_val_4_fu_1581_p1 = m_axi_gmem0_RDATA;

assign in_val_6_fu_1585_p1 = m_axi_gmem0_RDATA;

assign in_val_8_fu_1682_p1 = m_axi_gmem0_RDATA;

assign in_val_fu_1573_p1 = m_axi_gmem0_RDATA;

assign m_axi_gmem0_ARBURST = 2'd0;

assign m_axi_gmem0_ARCACHE = 4'd0;

assign m_axi_gmem0_ARID = 1'd0;

assign m_axi_gmem0_ARLEN = 32'd1;

assign m_axi_gmem0_ARLOCK = 2'd0;

assign m_axi_gmem0_ARPROT = 3'd0;

assign m_axi_gmem0_ARQOS = 4'd0;

assign m_axi_gmem0_ARREGION = 4'd0;

assign m_axi_gmem0_ARSIZE = 3'd0;

assign m_axi_gmem0_ARUSER = 1'd0;

assign m_axi_gmem0_AWADDR = gmem0_addr_9_reg_2694_pp0_iter1_reg;

assign m_axi_gmem0_AWBURST = 2'd0;

assign m_axi_gmem0_AWCACHE = 4'd0;

assign m_axi_gmem0_AWID = 1'd0;

assign m_axi_gmem0_AWLEN = 32'd1;

assign m_axi_gmem0_AWLOCK = 2'd0;

assign m_axi_gmem0_AWPROT = 3'd0;

assign m_axi_gmem0_AWQOS = 4'd0;

assign m_axi_gmem0_AWREGION = 4'd0;

assign m_axi_gmem0_AWSIZE = 3'd0;

assign m_axi_gmem0_AWUSER = 1'd0;

assign m_axi_gmem0_WDATA = max_16_reg_2830;

assign m_axi_gmem0_WID = 1'd0;

assign m_axi_gmem0_WLAST = 1'b0;

assign m_axi_gmem0_WSTRB = 4'd15;

assign m_axi_gmem0_WUSER = 1'd0;

assign max_10_fu_2054_p3 = ((and_ln444_9_fu_2048_p2[0:0] == 1'b1) ? max_9_reg_416 : max_8_reg_2792);

assign max_12_fu_2149_p3 = ((and_ln444_11_fu_2143_p2[0:0] == 1'b1) ? max_11_reg_428 : max_10_reg_2804);

assign max_14_fu_2240_p3 = ((and_ln444_13_fu_2234_p2[0:0] == 1'b1) ? max_13_reg_440 : max_12_reg_2816);

assign max_16_fu_2331_p3 = ((and_ln444_15_fu_2325_p2[0:0] == 1'b1) ? in_val_18_reg_452 : max_14_reg_2823);

assign max_2_fu_1673_p3 = ((and_ln444_1_fu_1667_p2[0:0] == 1'b1) ? max_1_reg_368 : max_reg_356);

assign max_4_fu_1769_p3 = ((and_ln444_3_fu_1763_p2[0:0] == 1'b1) ? max_3_reg_380 : max_2_reg_2756);

assign max_6_fu_1864_p3 = ((and_ln444_5_fu_1858_p2[0:0] == 1'b1) ? max_5_reg_392 : max_4_reg_2768);

assign max_8_fu_1959_p3 = ((and_ln444_7_fu_1953_p2[0:0] == 1'b1) ? max_7_reg_404 : max_6_reg_2780);

assign mul413_fu_625_p2 = (mul20_reg_2533 + sub45_fu_607_p2);

assign mul413_mid1_fu_846_p2 = (mul20_mid1_fu_811_p2 + select_ln418_2_fu_719_p3);

assign mul415_fu_657_p2 = (add21_1_fu_636_p2 + sub45_fu_607_p2);

assign mul415_mid140_fu_737_p2 = (sub45_mid1_fu_714_p2 + 32'd1);

assign mul415_mid1_fu_888_p2 = (add21_1_mid1_fu_866_p2 + select_ln418_2_fu_719_p3);

assign mul417_fu_690_p2 = (add21_2_fu_669_p2 + sub45_fu_607_p2);

assign mul417_mid152_fu_749_p2 = (sub45_mid1_fu_714_p2 + 32'd2);

assign mul417_mid1_fu_930_p2 = (add21_2_mid1_fu_908_p2 + select_ln418_2_fu_719_p3);

assign mul781_fu_595_p0 = y_fu_120;

assign mul781_fu_595_p2 = ($signed(mul781_fu_595_p0) + $signed(mul39_reg_2494));

assign mul781_mid1_fu_816_p2 = ($signed(y_3_fu_793_p2) + $signed(select_ln418_1_fu_705_p3));

assign or_ln420_fu_798_p2 = (select_ln418_10_fu_787_p3 | icmp_ln420_reg_2505);

assign or_ln431_10_fu_1187_p2 = (select_ln420_4_reg_2578 | or_ln431_2_fu_1129_p2);

assign or_ln431_11_fu_1275_p2 = (select_ln420_4_reg_2578 | or_ln431_4_fu_1217_p2);

assign or_ln431_1_fu_1032_p2 = (select_ln420_2_reg_2564 | or_ln431_fu_1026_p2);

assign or_ln431_2_fu_1129_p2 = (xor_ln431_1_fu_1123_p2 | icmp_ln431_2_fu_1113_p2);

assign or_ln431_3_fu_1135_p2 = (select_ln420_2_reg_2564 | or_ln431_2_fu_1129_p2);

assign or_ln431_4_fu_1217_p2 = (xor_ln431_2_fu_1211_p2 | icmp_ln431_4_fu_1201_p2);

assign or_ln431_5_fu_1223_p2 = (select_ln420_2_reg_2564 | or_ln431_4_fu_1217_p2);

assign or_ln431_6_fu_1080_p2 = (select_ln420_3_reg_2571 | or_ln431_fu_1026_p2);

assign or_ln431_7_fu_1182_p2 = (select_ln420_3_reg_2571 | or_ln431_2_fu_1129_p2);

assign or_ln431_8_fu_1270_p2 = (select_ln420_3_reg_2571 | or_ln431_4_fu_1217_p2);

assign or_ln431_9_fu_1085_p2 = (select_ln420_4_reg_2578 | or_ln431_fu_1026_p2);

assign or_ln431_fu_1026_p2 = (xor_ln431_fu_1020_p2 | icmp_ln431_fu_1010_p2);

assign or_ln444_10_fu_2113_p2 = (icmp_ln444_21_fu_2107_p2 | icmp_ln444_20_fu_2101_p2);

assign or_ln444_11_fu_2131_p2 = (icmp_ln444_23_fu_2125_p2 | icmp_ln444_22_fu_2119_p2);

assign or_ln444_12_fu_2204_p2 = (icmp_ln444_25_fu_2198_p2 | icmp_ln444_24_fu_2192_p2);

assign or_ln444_13_fu_2222_p2 = (icmp_ln444_27_fu_2216_p2 | icmp_ln444_26_fu_2210_p2);

assign or_ln444_14_fu_2295_p2 = (icmp_ln444_29_fu_2289_p2 | icmp_ln444_28_fu_2283_p2);

assign or_ln444_15_fu_2313_p2 = (icmp_ln444_31_fu_2307_p2 | icmp_ln444_30_fu_2301_p2);

assign or_ln444_1_fu_1655_p2 = (icmp_ln444_3_fu_1649_p2 | icmp_ln444_2_fu_1643_p2);

assign or_ln444_2_fu_1733_p2 = (icmp_ln444_5_fu_1727_p2 | icmp_ln444_4_fu_1721_p2);

assign or_ln444_3_fu_1751_p2 = (icmp_ln444_7_fu_1745_p2 | icmp_ln444_6_fu_1739_p2);

assign or_ln444_4_fu_1828_p2 = (icmp_ln444_9_fu_1822_p2 | icmp_ln444_8_fu_1816_p2);

assign or_ln444_5_fu_1846_p2 = (icmp_ln444_11_fu_1840_p2 | icmp_ln444_10_fu_1834_p2);

assign or_ln444_6_fu_1923_p2 = (icmp_ln444_13_fu_1917_p2 | icmp_ln444_12_fu_1911_p2);

assign or_ln444_7_fu_1941_p2 = (icmp_ln444_15_fu_1935_p2 | icmp_ln444_14_fu_1929_p2);

assign or_ln444_8_fu_2018_p2 = (icmp_ln444_17_fu_2012_p2 | icmp_ln444_16_fu_2006_p2);

assign or_ln444_9_fu_2036_p2 = (icmp_ln444_19_fu_2030_p2 | icmp_ln444_18_fu_2024_p2);

assign or_ln444_fu_1637_p2 = (icmp_ln444_fu_1625_p2 | icmp_ln444_1_fu_1631_p2);

assign rev34_fu_619_p2 = (ult_fu_615_p2 ^ 1'd1);

assign rev36_fu_651_p2 = (ult35_fu_646_p2 ^ 1'd1);

assign rev38_fu_684_p2 = (ult37_fu_679_p2 ^ 1'd1);

assign rev44_fu_840_p2 = (ult43_fu_835_p2 ^ 1'd1);

assign rev46_fu_882_p2 = (ult45_fu_877_p2 ^ 1'd1);

assign rev48_fu_924_p2 = (ult47_fu_919_p2 ^ 1'd1);

assign select_ln418_10_fu_787_p3 = ((icmp_ln420_reg_2505[0:0] == 1'b1) ? icmp_ln422_1 : icmp_ln422_fu_782_p2);

assign select_ln418_11_fu_543_p2 = f_fu_128;

assign select_ln418_11_fu_543_p3 = ((icmp_ln420_fu_533_p2[0:0] == 1'b1) ? f_3_fu_513_p2 : select_ln418_11_fu_543_p2);

assign select_ln418_1_fu_705_p3 = ((icmp_ln420_reg_2505[0:0] == 1'b1) ? mul39_mid1_reg_2521 : mul39_reg_2494);

assign select_ln418_2_fu_719_p3 = ((icmp_ln420_reg_2505[0:0] == 1'b1) ? sub45_mid1_fu_714_p2 : sub45_fu_607_p2);

assign select_ln418_3_fu_726_p3 = ((icmp_ln420_reg_2505[0:0] == 1'b1) ? mul39_mid1_reg_2521 : mul781_reg_2542);

assign select_ln418_4_fu_731_p3 = ((icmp_ln420_reg_2505[0:0] == 1'b1) ? brmerge_mid132 : brmerge_fu_630_p2);

assign select_ln418_5_fu_743_p3 = ((icmp_ln420_reg_2505[0:0] == 1'b1) ? brmerge46_mid144 : brmerge46_fu_663_p2);

assign select_ln418_6_fu_755_p3 = ((icmp_ln420_reg_2505[0:0] == 1'b1) ? brmerge49_mid156 : brmerge49_fu_696_p2);

assign select_ln418_7_fu_761_p3 = ((icmp_ln420_reg_2505[0:0] == 1'b1) ? mul417_mid152_fu_749_p2 : mul417_fu_690_p2);

assign select_ln418_8_fu_768_p3 = ((icmp_ln420_reg_2505[0:0] == 1'b1) ? mul415_mid140_fu_737_p2 : mul415_fu_657_p2);

assign select_ln418_9_fu_775_p3 = ((icmp_ln420_reg_2505[0:0] == 1'b1) ? sub45_mid1_fu_714_p2 : mul413_fu_625_p2);

assign select_ln418_fu_600_p2 = y_fu_120;

assign select_ln418_fu_600_p3 = ((icmp_ln420_reg_2505[0:0] == 1'b1) ? 32'd0 : select_ln418_fu_600_p2);

assign select_ln420_1_fu_822_p3 = ((select_ln418_10_fu_787_p3[0:0] == 1'b1) ? mul781_mid1_fu_816_p2 : select_ln418_3_fu_726_p3);

assign select_ln420_2_fu_858_p3 = ((select_ln418_10_fu_787_p3[0:0] == 1'b1) ? brmerge_mid1_fu_852_p2 : select_ln418_4_fu_731_p3);

assign select_ln420_3_fu_900_p3 = ((select_ln418_10_fu_787_p3[0:0] == 1'b1) ? brmerge46_mid1_fu_894_p2 : select_ln418_5_fu_743_p3);

assign select_ln420_4_fu_942_p3 = ((select_ln418_10_fu_787_p3[0:0] == 1'b1) ? brmerge49_mid1_fu_936_p2 : select_ln418_6_fu_755_p3);

assign select_ln420_5_fu_950_p3 = ((select_ln418_10_fu_787_p3[0:0] == 1'b1) ? mul417_mid1_fu_930_p2 : select_ln418_7_fu_761_p3);

assign select_ln420_6_fu_958_p3 = ((select_ln418_10_fu_787_p3[0:0] == 1'b1) ? mul415_mid1_fu_888_p2 : select_ln418_8_fu_768_p3);

assign select_ln420_7_fu_966_p3 = ((select_ln418_10_fu_787_p3[0:0] == 1'b1) ? mul413_mid1_fu_846_p2 : select_ln418_9_fu_775_p3);

assign select_ln420_8_fu_974_p3 = ((select_ln418_10_fu_787_p3[0:0] == 1'b1) ? y_3_fu_793_p2 : select_ln418_reg_2547);

assign select_ln420_9_fu_560_p3 = ((icmp_ln420_fu_533_p2[0:0] == 1'b1) ? 64'd1 : add_ln420_4_fu_554_p2);

assign select_ln420_fu_803_p3 = ((or_ln420_fu_798_p2[0:0] == 1'b1) ? 32'd0 : x_fu_116);

assign sext_ln436_1_fu_1172_p1 = $signed(trunc_ln436_1_fu_1162_p4);

assign sext_ln436_2_fu_1260_p1 = $signed(trunc_ln436_2_fu_1250_p4);

assign sext_ln436_3_fu_1358_p1 = $signed(trunc_ln436_3_fu_1348_p4);

assign sext_ln436_4_fu_1399_p1 = $signed(trunc_ln436_4_fu_1389_p4);

assign sext_ln436_5_fu_1440_p1 = $signed(trunc_ln436_5_fu_1430_p4);

assign sext_ln436_6_fu_1481_p1 = $signed(trunc_ln436_6_fu_1471_p4);

assign sext_ln436_7_fu_1522_p1 = $signed(trunc_ln436_7_fu_1512_p4);

assign sext_ln436_8_fu_1563_p1 = $signed(trunc_ln436_8_fu_1553_p4);

assign sext_ln436_fu_1070_p1 = $signed(trunc_ln1_fu_1060_p4);

assign sext_ln449_fu_1317_p1 = $signed(trunc_ln3_fu_1307_p4);

assign shl_ln1_fu_1290_p3 = {{add_ln449_fu_1284_p2}, {2'd0}};

assign shl_ln436_1_fu_1145_p3 = {{add_ln436_2_fu_1140_p2}, {2'd0}};

assign shl_ln436_2_fu_1233_p3 = {{add_ln436_4_fu_1228_p2}, {2'd0}};

assign shl_ln436_3_fu_1331_p3 = {{add_ln436_6_fu_1327_p2}, {2'd0}};

assign shl_ln436_4_fu_1372_p3 = {{add_ln436_8_fu_1368_p2}, {2'd0}};

assign shl_ln436_5_fu_1413_p3 = {{add_ln436_10_fu_1409_p2}, {2'd0}};

assign shl_ln436_6_fu_1454_p3 = {{add_ln436_12_fu_1450_p2}, {2'd0}};

assign shl_ln436_7_fu_1495_p3 = {{add_ln436_14_fu_1491_p2}, {2'd0}};

assign shl_ln436_8_fu_1536_p3 = {{add_ln436_16_fu_1532_p2}, {2'd0}};

assign shl_ln_fu_1043_p3 = {{add_ln436_fu_1037_p2}, {2'd0}};

assign sub45_fu_607_p2 = (mul40_reg_2528 - pad);

assign sub45_mid1_fu_714_p2 = (mul40_mid1_fu_710_p2 - pad);

assign tmp_11_fu_1975_p4 = {{bitcast_ln444_8_fu_1971_p1[30:23]}};

assign tmp_12_fu_1992_p4 = {{bitcast_ln444_9_fu_1989_p1[30:23]}};

assign tmp_14_fu_2070_p4 = {{bitcast_ln444_10_fu_2066_p1[30:23]}};

assign tmp_15_fu_2087_p4 = {{bitcast_ln444_11_fu_2084_p1[30:23]}};

assign tmp_17_fu_2161_p4 = {{bitcast_ln444_12_fu_2157_p1[30:23]}};

assign tmp_18_fu_2178_p4 = {{bitcast_ln444_13_fu_2175_p1[30:23]}};

assign tmp_1_fu_1611_p4 = {{bitcast_ln444_1_fu_1607_p1[30:23]}};

assign tmp_20_fu_2252_p4 = {{bitcast_ln444_14_fu_2248_p1[30:23]}};

assign tmp_21_fu_2269_p4 = {{bitcast_ln444_15_fu_2266_p1[30:23]}};

assign tmp_3_fu_1690_p4 = {{bitcast_ln444_2_fu_1686_p1[30:23]}};

assign tmp_4_fu_1707_p4 = {{bitcast_ln444_3_fu_1704_p1[30:23]}};

assign tmp_6_fu_1785_p4 = {{bitcast_ln444_4_fu_1781_p1[30:23]}};

assign tmp_7_fu_1802_p4 = {{bitcast_ln444_5_fu_1799_p1[30:23]}};

assign tmp_9_fu_1880_p4 = {{bitcast_ln444_6_fu_1876_p1[30:23]}};

assign tmp_fu_1593_p4 = {{bitcast_ln444_fu_1589_p1[30:23]}};

assign tmp_s_fu_1897_p4 = {{bitcast_ln444_7_fu_1894_p1[30:23]}};

assign trunc_ln1_fu_1060_p4 = {{add_ln436_1_fu_1055_p2[63:2]}};

assign trunc_ln3_fu_1307_p4 = {{add_ln449_1_fu_1302_p2[63:2]}};

assign trunc_ln436_1_fu_1162_p4 = {{add_ln436_3_fu_1157_p2[63:2]}};

assign trunc_ln436_2_fu_1250_p4 = {{add_ln436_5_fu_1245_p2[63:2]}};

assign trunc_ln436_3_fu_1348_p4 = {{add_ln436_7_fu_1343_p2[63:2]}};

assign trunc_ln436_4_fu_1389_p4 = {{add_ln436_9_fu_1384_p2[63:2]}};

assign trunc_ln436_5_fu_1430_p4 = {{add_ln436_11_fu_1425_p2[63:2]}};

assign trunc_ln436_6_fu_1471_p4 = {{add_ln436_13_fu_1466_p2[63:2]}};

assign trunc_ln436_7_fu_1512_p4 = {{add_ln436_15_fu_1507_p2[63:2]}};

assign trunc_ln436_8_fu_1553_p4 = {{add_ln436_17_fu_1548_p2[63:2]}};

assign trunc_ln444_10_fu_2080_p1 = bitcast_ln444_10_fu_2066_p1[22:0];

assign trunc_ln444_11_fu_2097_p1 = bitcast_ln444_11_fu_2084_p1[22:0];

assign trunc_ln444_12_fu_2171_p1 = bitcast_ln444_12_fu_2157_p1[22:0];

assign trunc_ln444_13_fu_2188_p1 = bitcast_ln444_13_fu_2175_p1[22:0];

assign trunc_ln444_14_fu_2262_p1 = bitcast_ln444_14_fu_2248_p1[22:0];

assign trunc_ln444_15_fu_2279_p1 = bitcast_ln444_15_fu_2266_p1[22:0];

assign trunc_ln444_1_fu_1621_p1 = bitcast_ln444_1_fu_1607_p1[22:0];

assign trunc_ln444_2_fu_1700_p1 = bitcast_ln444_2_fu_1686_p1[22:0];

assign trunc_ln444_3_fu_1717_p1 = bitcast_ln444_3_fu_1704_p1[22:0];

assign trunc_ln444_4_fu_1795_p1 = bitcast_ln444_4_fu_1781_p1[22:0];

assign trunc_ln444_5_fu_1812_p1 = bitcast_ln444_5_fu_1799_p1[22:0];

assign trunc_ln444_6_fu_1890_p1 = bitcast_ln444_6_fu_1876_p1[22:0];

assign trunc_ln444_7_fu_1907_p1 = bitcast_ln444_7_fu_1894_p1[22:0];

assign trunc_ln444_8_fu_1985_p1 = bitcast_ln444_8_fu_1971_p1[22:0];

assign trunc_ln444_9_fu_2002_p1 = bitcast_ln444_9_fu_1989_p1[22:0];

assign trunc_ln444_fu_1603_p1 = bitcast_ln444_fu_1589_p1[22:0];

assign ult35_fu_646_p2 = ((add21_1_fu_636_p2 < add26) ? 1'b1 : 1'b0);

assign ult37_fu_679_p2 = ((add21_2_fu_669_p2 < add26) ? 1'b1 : 1'b0);

assign ult43_fu_835_p2 = ((mul20_mid1_fu_811_p2 < add26) ? 1'b1 : 1'b0);

assign ult45_fu_877_p2 = ((add21_1_mid1_fu_866_p2 < add26) ? 1'b1 : 1'b0);

assign ult47_fu_919_p2 = ((add21_2_mid1_fu_908_p2 < add26) ? 1'b1 : 1'b0);

assign ult_fu_615_p2 = ((mul20_reg_2533 < add26) ? 1'b1 : 1'b0);

assign xor_ln431_1_fu_1123_p2 = (icmp_ln431_3_fu_1118_p2 ^ 1'd1);

assign xor_ln431_2_fu_1211_p2 = (icmp_ln431_5_fu_1206_p2 ^ 1'd1);

assign xor_ln431_fu_1020_p2 = (icmp_ln431_1_fu_1015_p2 ^ 1'd1);

assign y_3_fu_793_p2 = (select_ln418_reg_2547 + 32'd1);

assign zext_ln436_1_fu_1153_p1 = shl_ln436_1_fu_1145_p3;

assign zext_ln436_2_fu_1241_p1 = shl_ln436_2_fu_1233_p3;

assign zext_ln436_3_fu_1339_p1 = shl_ln436_3_fu_1331_p3;

assign zext_ln436_4_fu_1380_p1 = shl_ln436_4_fu_1372_p3;

assign zext_ln436_5_fu_1421_p1 = shl_ln436_5_fu_1413_p3;

assign zext_ln436_6_fu_1462_p1 = shl_ln436_6_fu_1454_p3;

assign zext_ln436_7_fu_1503_p1 = shl_ln436_7_fu_1495_p3;

assign zext_ln436_8_fu_1544_p1 = shl_ln436_8_fu_1536_p3;

assign zext_ln436_fu_1051_p1 = shl_ln_fu_1043_p3;

assign zext_ln449_fu_1298_p1 = shl_ln1_fu_1290_p3;

endmodule //conv_kernel_max_pool_Pipeline_max_pool_loop1_max_pool_loop2_max_pool_loop3
