// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_kernel_load_input (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST,
        m_axi_gmem0_WID,
        m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST,
        m_axi_gmem0_RID,
        m_axi_gmem0_RFIFONUM,
        m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP,
        m_axi_gmem0_BID,
        m_axi_gmem0_BUSER,
        act_mem,
        load_input_fifo5_din,
        load_input_fifo5_full_n,
        load_input_fifo5_write,
        base_addr,
        nky,
        nkx,
        nof,
        nif,
        noy,
        nox,
        stride,
        pad,
        bb_en,
        conv_en
);

parameter    ap_ST_fsm_state1 = 12'd1;
parameter    ap_ST_fsm_state2 = 12'd2;
parameter    ap_ST_fsm_state3 = 12'd4;
parameter    ap_ST_fsm_state4 = 12'd8;
parameter    ap_ST_fsm_state5 = 12'd16;
parameter    ap_ST_fsm_state6 = 12'd32;
parameter    ap_ST_fsm_state7 = 12'd64;
parameter    ap_ST_fsm_state8 = 12'd128;
parameter    ap_ST_fsm_state9 = 12'd256;
parameter    ap_ST_fsm_state10 = 12'd512;
parameter    ap_ST_fsm_state11 = 12'd1024;
parameter    ap_ST_fsm_state12 = 12'd2048;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem0_AWVALID;
input   m_axi_gmem0_AWREADY;
output  [63:0] m_axi_gmem0_AWADDR;
output  [0:0] m_axi_gmem0_AWID;
output  [31:0] m_axi_gmem0_AWLEN;
output  [2:0] m_axi_gmem0_AWSIZE;
output  [1:0] m_axi_gmem0_AWBURST;
output  [1:0] m_axi_gmem0_AWLOCK;
output  [3:0] m_axi_gmem0_AWCACHE;
output  [2:0] m_axi_gmem0_AWPROT;
output  [3:0] m_axi_gmem0_AWQOS;
output  [3:0] m_axi_gmem0_AWREGION;
output  [0:0] m_axi_gmem0_AWUSER;
output   m_axi_gmem0_WVALID;
input   m_axi_gmem0_WREADY;
output  [31:0] m_axi_gmem0_WDATA;
output  [3:0] m_axi_gmem0_WSTRB;
output   m_axi_gmem0_WLAST;
output  [0:0] m_axi_gmem0_WID;
output  [0:0] m_axi_gmem0_WUSER;
output   m_axi_gmem0_ARVALID;
input   m_axi_gmem0_ARREADY;
output  [63:0] m_axi_gmem0_ARADDR;
output  [0:0] m_axi_gmem0_ARID;
output  [31:0] m_axi_gmem0_ARLEN;
output  [2:0] m_axi_gmem0_ARSIZE;
output  [1:0] m_axi_gmem0_ARBURST;
output  [1:0] m_axi_gmem0_ARLOCK;
output  [3:0] m_axi_gmem0_ARCACHE;
output  [2:0] m_axi_gmem0_ARPROT;
output  [3:0] m_axi_gmem0_ARQOS;
output  [3:0] m_axi_gmem0_ARREGION;
output  [0:0] m_axi_gmem0_ARUSER;
input   m_axi_gmem0_RVALID;
output   m_axi_gmem0_RREADY;
input  [31:0] m_axi_gmem0_RDATA;
input   m_axi_gmem0_RLAST;
input  [0:0] m_axi_gmem0_RID;
input  [8:0] m_axi_gmem0_RFIFONUM;
input  [0:0] m_axi_gmem0_RUSER;
input  [1:0] m_axi_gmem0_RRESP;
input   m_axi_gmem0_BVALID;
output   m_axi_gmem0_BREADY;
input  [1:0] m_axi_gmem0_BRESP;
input  [0:0] m_axi_gmem0_BID;
input  [0:0] m_axi_gmem0_BUSER;
input  [63:0] act_mem;
output  [31:0] load_input_fifo5_din;
input   load_input_fifo5_full_n;
output   load_input_fifo5_write;
input  [31:0] base_addr;
input  [31:0] nky;
input  [31:0] nkx;
input  [31:0] nof;
input  [31:0] nif;
input  [31:0] noy;
input  [31:0] nox;
input  [31:0] stride;
input  [31:0] pad;
input  [0:0] bb_en;
input  [0:0] conv_en;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_gmem0_ARVALID;
reg[63:0] m_axi_gmem0_ARADDR;
reg[0:0] m_axi_gmem0_ARID;
reg[31:0] m_axi_gmem0_ARLEN;
reg[2:0] m_axi_gmem0_ARSIZE;
reg[1:0] m_axi_gmem0_ARBURST;
reg[1:0] m_axi_gmem0_ARLOCK;
reg[3:0] m_axi_gmem0_ARCACHE;
reg[2:0] m_axi_gmem0_ARPROT;
reg[3:0] m_axi_gmem0_ARQOS;
reg[3:0] m_axi_gmem0_ARREGION;
reg[0:0] m_axi_gmem0_ARUSER;
reg m_axi_gmem0_RREADY;
reg[31:0] load_input_fifo5_din;
reg load_input_fifo5_write;

(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] conv_en_read_read_fu_96_p2;
wire   [0:0] bb_en_read_read_fu_102_p2;
reg   [29:0] tmp_reg_567;
reg   [29:0] tmp_2_reg_572;
wire   [31:0] mul52_fu_331_p2;
reg   [31:0] mul52_reg_584;
wire   [31:0] mul58_fu_337_p2;
reg   [31:0] mul58_reg_590;
wire   [31:0] mul73_fu_349_p2;
reg   [31:0] mul73_reg_596;
wire   [31:0] add97_fu_355_p2;
reg   [31:0] add97_reg_604;
wire   [31:0] add107_fu_361_p2;
reg   [31:0] add107_reg_609;
wire   [31:0] sub_ln92_fu_367_p2;
reg   [31:0] sub_ln92_reg_614;
wire   [63:0] bound158_fu_381_p2;
reg   [63:0] bound158_reg_619;
wire   [37:0] mul_ln46_1_fu_395_p2;
reg   [37:0] mul_ln46_1_reg_624;
wire    ap_CS_fsm_state2;
wire   [69:0] mul_ln46_3_fu_408_p2;
reg   [69:0] mul_ln46_3_reg_630;
wire   [101:0] mul_ln46_4_fu_420_p2;
reg   [101:0] mul_ln46_4_reg_636;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln50_fu_426_p2;
reg   [0:0] icmp_ln50_reg_641;
wire   [31:0] f_out_3_fu_439_p2;
reg   [31:0] f_out_3_reg_649;
wire    ap_CS_fsm_state6;
wire   [31:0] y0_1_fu_459_p2;
wire    ap_CS_fsm_state8;
wire   [0:0] icmp_ln72_fu_454_p2;
wire   [31:0] add_ln74_fu_464_p2;
reg   [31:0] add_ln74_reg_665;
wire    ap_CS_fsm_state9;
wire   [31:0] f_in_1_fu_474_p2;
reg   [31:0] f_in_1_reg_673;
wire   [31:0] sub_fu_480_p2;
reg   [31:0] sub_reg_678;
wire   [0:0] icmp_ln74_fu_469_p2;
wire   [31:0] x0_3_fu_485_p2;
wire   [31:0] x_1_fu_500_p2;
reg   [31:0] x_1_reg_694;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln80_fu_495_p2;
wire   [31:0] y_fu_505_p2;
wire    grp_load_input_Pipeline_load_input_loop6_fu_238_ap_start;
wire    grp_load_input_Pipeline_load_input_loop6_fu_238_ap_done;
wire    grp_load_input_Pipeline_load_input_loop6_fu_238_ap_idle;
wire    grp_load_input_Pipeline_load_input_loop6_fu_238_ap_ready;
wire    grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_AWVALID;
wire   [63:0] grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_AWADDR;
wire   [0:0] grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_AWID;
wire   [31:0] grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_AWLEN;
wire   [2:0] grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_AWSIZE;
wire   [1:0] grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_AWBURST;
wire   [1:0] grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_AWLOCK;
wire   [3:0] grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_AWCACHE;
wire   [2:0] grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_AWPROT;
wire   [3:0] grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_AWQOS;
wire   [3:0] grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_AWREGION;
wire   [0:0] grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_AWUSER;
wire    grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_WVALID;
wire   [31:0] grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_WDATA;
wire   [3:0] grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_WSTRB;
wire    grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_WLAST;
wire   [0:0] grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_WID;
wire   [0:0] grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_WUSER;
wire    grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_ARVALID;
wire   [63:0] grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_ARADDR;
wire   [0:0] grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_ARID;
wire   [31:0] grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_ARLEN;
wire   [2:0] grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_ARSIZE;
wire   [1:0] grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_ARBURST;
wire   [1:0] grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_ARLOCK;
wire   [3:0] grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_ARCACHE;
wire   [2:0] grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_ARPROT;
wire   [3:0] grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_ARQOS;
wire   [3:0] grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_ARREGION;
wire   [0:0] grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_ARUSER;
wire    grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_RREADY;
wire    grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_BREADY;
wire   [31:0] grp_load_input_Pipeline_load_input_loop6_fu_238_load_input_fifo5_din;
wire    grp_load_input_Pipeline_load_input_loop6_fu_238_load_input_fifo5_write;
wire    grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_ap_start;
wire    grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_ap_done;
wire    grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_ap_idle;
wire    grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_ap_ready;
wire    grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_AWVALID;
wire   [63:0] grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_AWADDR;
wire   [0:0] grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_AWID;
wire   [31:0] grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_AWLEN;
wire   [2:0] grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_AWSIZE;
wire   [1:0] grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_AWBURST;
wire   [1:0] grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_AWLOCK;
wire   [3:0] grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_AWCACHE;
wire   [2:0] grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_AWPROT;
wire   [3:0] grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_AWQOS;
wire   [3:0] grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_AWREGION;
wire   [0:0] grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_AWUSER;
wire    grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_WVALID;
wire   [31:0] grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_WDATA;
wire   [3:0] grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_WSTRB;
wire    grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_WLAST;
wire   [0:0] grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_WID;
wire   [0:0] grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_WUSER;
wire    grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_ARVALID;
wire   [63:0] grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_ARADDR;
wire   [0:0] grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_ARID;
wire   [31:0] grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_ARLEN;
wire   [2:0] grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_ARSIZE;
wire   [1:0] grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_ARBURST;
wire   [1:0] grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_ARLOCK;
wire   [3:0] grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_ARCACHE;
wire   [2:0] grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_ARPROT;
wire   [3:0] grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_ARQOS;
wire   [3:0] grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_ARREGION;
wire   [0:0] grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_ARUSER;
wire    grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_RREADY;
wire    grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_BREADY;
wire   [31:0] grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_load_input_fifo5_din;
wire    grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_load_input_fifo5_write;
reg   [31:0] y0_reg_168;
wire   [0:0] icmp_ln68_fu_434_p2;
reg   [31:0] x0_reg_180;
wire    ap_CS_fsm_state7;
wire   [0:0] icmp_ln70_fu_445_p2;
reg   [31:0] f_in_reg_192;
wire    ap_CS_fsm_state10;
wire   [0:0] icmp_ln78_fu_490_p2;
reg   [31:0] phi_mul_reg_203;
reg   [31:0] y_2_reg_214;
reg   [31:0] x_reg_226;
wire    ap_CS_fsm_state12;
reg    grp_load_input_Pipeline_load_input_loop6_fu_238_ap_start_reg;
reg   [11:0] ap_NS_fsm;
wire    ap_NS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state4;
reg    grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_ap_start_reg;
reg   [31:0] f_out_1_fu_92;
wire  signed [31:0] add_ln46_fu_279_p0;
wire   [31:0] add_ln46_fu_279_p2;
wire   [31:0] mul_ln46_fu_289_p0;
wire   [33:0] mul_ln46_fu_289_p1;
wire   [64:0] mul_ln46_fu_289_p2;
wire  signed [31:0] add_ln46_1_fu_305_p0;
wire   [31:0] add_ln46_1_fu_305_p2;
wire   [31:0] mul_ln46_2_fu_315_p0;
wire   [33:0] mul_ln46_2_fu_315_p1;
wire   [64:0] mul_ln46_2_fu_315_p2;
wire  signed [31:0] empty_54_fu_343_p0;
wire   [31:0] empty_54_fu_343_p2;
wire  signed [31:0] mul73_fu_349_p1;
wire   [31:0] bound158_fu_381_p0;
wire   [31:0] bound158_fu_381_p1;
wire   [29:0] mul_ln46_1_fu_395_p0;
wire   [6:0] mul_ln46_1_fu_395_p1;
wire   [29:0] mul_ln46_3_fu_408_p0;
wire   [36:0] mul_ln46_3_fu_408_p1;
wire   [31:0] mul_ln46_4_fu_420_p0;
wire   [67:0] mul_ln46_4_fu_420_p1;
wire  signed [31:0] x_1_fu_500_p1;
wire  signed [31:0] y_fu_505_p1;
reg    ap_predicate_op61_call_state5;
reg    ap_block_state5_on_subcall_done;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
reg    ap_ST_fsm_state12_blk;
wire   [63:0] bound158_fu_381_p00;
wire   [63:0] bound158_fu_381_p10;
wire   [37:0] mul_ln46_1_fu_395_p00;
wire   [64:0] mul_ln46_2_fu_315_p00;
wire   [69:0] mul_ln46_3_fu_408_p00;
wire   [69:0] mul_ln46_3_fu_408_p10;
wire   [101:0] mul_ln46_4_fu_420_p00;
wire   [101:0] mul_ln46_4_fu_420_p10;
wire   [64:0] mul_ln46_fu_289_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 12'd1;
#0 grp_load_input_Pipeline_load_input_loop6_fu_238_ap_start_reg = 1'b0;
#0 grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_ap_start_reg = 1'b0;
end

conv_kernel_load_input_Pipeline_load_input_loop6 grp_load_input_Pipeline_load_input_loop6_fu_238(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_load_input_Pipeline_load_input_loop6_fu_238_ap_start),
    .ap_done(grp_load_input_Pipeline_load_input_loop6_fu_238_ap_done),
    .ap_idle(grp_load_input_Pipeline_load_input_loop6_fu_238_ap_idle),
    .ap_ready(grp_load_input_Pipeline_load_input_loop6_fu_238_ap_ready),
    .m_axi_gmem0_AWVALID(grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_AWVALID),
    .m_axi_gmem0_AWREADY(1'b0),
    .m_axi_gmem0_AWADDR(grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_AWADDR),
    .m_axi_gmem0_AWID(grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_AWID),
    .m_axi_gmem0_AWLEN(grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_AWLEN),
    .m_axi_gmem0_AWSIZE(grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_AWSIZE),
    .m_axi_gmem0_AWBURST(grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_AWBURST),
    .m_axi_gmem0_AWLOCK(grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_AWLOCK),
    .m_axi_gmem0_AWCACHE(grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_AWCACHE),
    .m_axi_gmem0_AWPROT(grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_AWPROT),
    .m_axi_gmem0_AWQOS(grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_AWQOS),
    .m_axi_gmem0_AWREGION(grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_AWREGION),
    .m_axi_gmem0_AWUSER(grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_AWUSER),
    .m_axi_gmem0_WVALID(grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_WVALID),
    .m_axi_gmem0_WREADY(1'b0),
    .m_axi_gmem0_WDATA(grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_WDATA),
    .m_axi_gmem0_WSTRB(grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_WSTRB),
    .m_axi_gmem0_WLAST(grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_WLAST),
    .m_axi_gmem0_WID(grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_WID),
    .m_axi_gmem0_WUSER(grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_WUSER),
    .m_axi_gmem0_ARVALID(grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_ARVALID),
    .m_axi_gmem0_ARREADY(m_axi_gmem0_ARREADY),
    .m_axi_gmem0_ARADDR(grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_ARADDR),
    .m_axi_gmem0_ARID(grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_ARID),
    .m_axi_gmem0_ARLEN(grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_ARLEN),
    .m_axi_gmem0_ARSIZE(grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_ARSIZE),
    .m_axi_gmem0_ARBURST(grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_ARBURST),
    .m_axi_gmem0_ARLOCK(grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_ARLOCK),
    .m_axi_gmem0_ARCACHE(grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_ARCACHE),
    .m_axi_gmem0_ARPROT(grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_ARPROT),
    .m_axi_gmem0_ARQOS(grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_ARQOS),
    .m_axi_gmem0_ARREGION(grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_ARREGION),
    .m_axi_gmem0_ARUSER(grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_ARUSER),
    .m_axi_gmem0_RVALID(m_axi_gmem0_RVALID),
    .m_axi_gmem0_RREADY(grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_RREADY),
    .m_axi_gmem0_RDATA(m_axi_gmem0_RDATA),
    .m_axi_gmem0_RLAST(m_axi_gmem0_RLAST),
    .m_axi_gmem0_RID(m_axi_gmem0_RID),
    .m_axi_gmem0_RFIFONUM(m_axi_gmem0_RFIFONUM),
    .m_axi_gmem0_RUSER(m_axi_gmem0_RUSER),
    .m_axi_gmem0_RRESP(m_axi_gmem0_RRESP),
    .m_axi_gmem0_BVALID(1'b0),
    .m_axi_gmem0_BREADY(grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_BREADY),
    .m_axi_gmem0_BRESP(2'd0),
    .m_axi_gmem0_BID(1'd0),
    .m_axi_gmem0_BUSER(1'd0),
    .load_input_fifo5_din(grp_load_input_Pipeline_load_input_loop6_fu_238_load_input_fifo5_din),
    .load_input_fifo5_full_n(load_input_fifo5_full_n),
    .load_input_fifo5_write(grp_load_input_Pipeline_load_input_loop6_fu_238_load_input_fifo5_write),
    .noy(noy),
    .nox(nox),
    .base_addr(base_addr),
    .mul_ln46_4(mul_ln46_4_reg_636),
    .mul_ln46_3(mul_ln46_3_reg_630),
    .mul_ln46_1(mul_ln46_1_reg_624),
    .icmp_ln50(icmp_ln50_reg_641),
    .act_mem(act_mem)
);

conv_kernel_load_input_Pipeline_load_input_loop14_load_input_loop15 grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_ap_start),
    .ap_done(grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_ap_done),
    .ap_idle(grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_ap_idle),
    .ap_ready(grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_ap_ready),
    .m_axi_gmem0_AWVALID(grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_AWVALID),
    .m_axi_gmem0_AWREADY(1'b0),
    .m_axi_gmem0_AWADDR(grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_AWADDR),
    .m_axi_gmem0_AWID(grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_AWID),
    .m_axi_gmem0_AWLEN(grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_AWLEN),
    .m_axi_gmem0_AWSIZE(grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_AWSIZE),
    .m_axi_gmem0_AWBURST(grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_AWBURST),
    .m_axi_gmem0_AWLOCK(grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_AWLOCK),
    .m_axi_gmem0_AWCACHE(grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_AWCACHE),
    .m_axi_gmem0_AWPROT(grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_AWPROT),
    .m_axi_gmem0_AWQOS(grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_AWQOS),
    .m_axi_gmem0_AWREGION(grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_AWREGION),
    .m_axi_gmem0_AWUSER(grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_AWUSER),
    .m_axi_gmem0_WVALID(grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_WVALID),
    .m_axi_gmem0_WREADY(1'b0),
    .m_axi_gmem0_WDATA(grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_WDATA),
    .m_axi_gmem0_WSTRB(grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_WSTRB),
    .m_axi_gmem0_WLAST(grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_WLAST),
    .m_axi_gmem0_WID(grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_WID),
    .m_axi_gmem0_WUSER(grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_WUSER),
    .m_axi_gmem0_ARVALID(grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_ARVALID),
    .m_axi_gmem0_ARREADY(m_axi_gmem0_ARREADY),
    .m_axi_gmem0_ARADDR(grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_ARADDR),
    .m_axi_gmem0_ARID(grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_ARID),
    .m_axi_gmem0_ARLEN(grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_ARLEN),
    .m_axi_gmem0_ARSIZE(grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_ARSIZE),
    .m_axi_gmem0_ARBURST(grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_ARBURST),
    .m_axi_gmem0_ARLOCK(grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_ARLOCK),
    .m_axi_gmem0_ARCACHE(grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_ARCACHE),
    .m_axi_gmem0_ARPROT(grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_ARPROT),
    .m_axi_gmem0_ARQOS(grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_ARQOS),
    .m_axi_gmem0_ARREGION(grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_ARREGION),
    .m_axi_gmem0_ARUSER(grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_ARUSER),
    .m_axi_gmem0_RVALID(m_axi_gmem0_RVALID),
    .m_axi_gmem0_RREADY(grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_RREADY),
    .m_axi_gmem0_RDATA(m_axi_gmem0_RDATA),
    .m_axi_gmem0_RLAST(m_axi_gmem0_RLAST),
    .m_axi_gmem0_RID(m_axi_gmem0_RID),
    .m_axi_gmem0_RFIFONUM(m_axi_gmem0_RFIFONUM),
    .m_axi_gmem0_RUSER(m_axi_gmem0_RUSER),
    .m_axi_gmem0_RRESP(m_axi_gmem0_RRESP),
    .m_axi_gmem0_BVALID(1'b0),
    .m_axi_gmem0_BREADY(grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_BREADY),
    .m_axi_gmem0_BRESP(2'd0),
    .m_axi_gmem0_BID(1'd0),
    .m_axi_gmem0_BUSER(1'd0),
    .load_input_fifo5_din(grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_load_input_fifo5_din),
    .load_input_fifo5_full_n(load_input_fifo5_full_n),
    .load_input_fifo5_write(grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_load_input_fifo5_write),
    .y0(y0_reg_168),
    .y_2(y_2_reg_214),
    .pad(pad),
    .add97(add97_reg_604),
    .bound158(bound158_reg_619),
    .nkx(nkx),
    .sub(sub_reg_678),
    .mul58(mul58_reg_590),
    .x0(x0_reg_180),
    .x_1(x_reg_226),
    .add107(add107_reg_609),
    .sub_ln92(sub_ln92_reg_614),
    .act_mem(act_mem)
);

conv_kernel_mul_32ns_34ns_65_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 34 ),
    .dout_WIDTH( 65 ))
mul_32ns_34ns_65_1_1_U65(
    .din0(mul_ln46_fu_289_p0),
    .din1(mul_ln46_fu_289_p1),
    .dout(mul_ln46_fu_289_p2)
);

conv_kernel_mul_32ns_34ns_65_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 34 ),
    .dout_WIDTH( 65 ))
mul_32ns_34ns_65_1_1_U66(
    .din0(mul_ln46_2_fu_315_p0),
    .din1(mul_ln46_2_fu_315_p1),
    .dout(mul_ln46_2_fu_315_p2)
);

conv_kernel_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U67(
    .din0(stride),
    .din1(noy),
    .dout(mul52_fu_331_p2)
);

conv_kernel_mul_32s_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
mul_32s_32s_32_1_1_U68(
    .din0(stride),
    .din1(nox),
    .dout(mul58_fu_337_p2)
);

conv_kernel_mul_32ns_32ns_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mul_32ns_32ns_64_1_1_U69(
    .din0(bound158_fu_381_p0),
    .din1(bound158_fu_381_p1),
    .dout(bound158_fu_381_p2)
);

conv_kernel_mul_30ns_7ns_38_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 38 ))
mul_30ns_7ns_38_1_1_U70(
    .din0(mul_ln46_1_fu_395_p0),
    .din1(mul_ln46_1_fu_395_p1),
    .dout(mul_ln46_1_fu_395_p2)
);

conv_kernel_mul_30ns_37ns_70_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 37 ),
    .dout_WIDTH( 70 ))
mul_30ns_37ns_70_1_1_U71(
    .din0(mul_ln46_3_fu_408_p0),
    .din1(mul_ln46_3_fu_408_p1),
    .dout(mul_ln46_3_fu_408_p2)
);

conv_kernel_mul_32ns_68ns_102_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 68 ),
    .dout_WIDTH( 102 ))
mul_32ns_68ns_102_1_1_U72(
    .din0(mul_ln46_4_fu_420_p0),
    .din1(mul_ln46_4_fu_420_p1),
    .dout(mul_ln46_4_fu_420_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln80_fu_495_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
            grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_ap_start_reg <= 1'b1;
        end else if ((grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_ap_ready == 1'b1)) begin
            grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_load_input_Pipeline_load_input_loop6_fu_238_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_NS_fsm_state4) & (1'b1 == ap_CS_fsm_state3))) begin
            grp_load_input_Pipeline_load_input_loop6_fu_238_ap_start_reg <= 1'b1;
        end else if ((grp_load_input_Pipeline_load_input_loop6_fu_238_ap_ready == 1'b1)) begin
            grp_load_input_Pipeline_load_input_loop6_fu_238_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_fu_490_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        f_in_reg_192 <= f_in_1_reg_673;
    end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln72_fu_454_p2 == 1'd1))) begin
        f_in_reg_192 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (bb_en == 1'd1) & (conv_en_read_read_fu_96_p2 == 1'd1))) begin
        f_out_1_fu_92 <= 32'd0;
    end else if (((icmp_ln70_fu_445_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        f_out_1_fu_92 <= f_out_3_reg_649;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_fu_490_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        phi_mul_reg_203 <= add_ln74_reg_665;
    end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln72_fu_454_p2 == 1'd1))) begin
        phi_mul_reg_203 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln74_fu_469_p2 == 1'd1))) begin
        x0_reg_180 <= x0_3_fu_485_p2;
    end else if (((icmp_ln70_fu_445_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        x0_reg_180 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
        x_reg_226 <= x_1_reg_694;
    end else if (((icmp_ln78_fu_490_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        x_reg_226 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln72_fu_454_p2 == 1'd0))) begin
        y0_reg_168 <= y0_1_fu_459_p2;
    end else if (((icmp_ln68_fu_434_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        y0_reg_168 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln80_fu_495_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        y_2_reg_214 <= y_fu_505_p2;
    end else if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln74_fu_469_p2 == 1'd0))) begin
        y_2_reg_214 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (bb_en == 1'd1) & (conv_en_read_read_fu_96_p2 == 1'd1))) begin
        add107_reg_609 <= add107_fu_361_p2;
        add97_reg_604 <= add97_fu_355_p2;
        bound158_reg_619 <= bound158_fu_381_p2;
        mul52_reg_584 <= mul52_fu_331_p2;
        mul58_reg_590 <= mul58_fu_337_p2;
        mul73_reg_596 <= mul73_fu_349_p2;
        sub_ln92_reg_614 <= sub_ln92_fu_367_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add_ln74_reg_665 <= add_ln74_fu_464_p2;
        f_in_1_reg_673 <= f_in_1_fu_474_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        f_out_3_reg_649 <= f_out_3_fu_439_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        icmp_ln50_reg_641 <= icmp_ln50_fu_426_p2;
        mul_ln46_4_reg_636 <= mul_ln46_4_fu_420_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        mul_ln46_1_reg_624 <= mul_ln46_1_fu_395_p2;
        mul_ln46_3_reg_630 <= mul_ln46_3_fu_408_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln74_fu_469_p2 == 1'd0))) begin
        sub_reg_678 <= sub_fu_480_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (bb_en == 1'd1) & (conv_en == 1'd0))) begin
        tmp_2_reg_572 <= {{mul_ln46_2_fu_315_p2[64:35]}};
        tmp_reg_567 <= {{mul_ln46_fu_289_p2[64:35]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln80_fu_495_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        x_1_reg_694 <= x_1_fu_500_p2;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

always @ (*) begin
    if ((grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_ap_done == 1'b0)) begin
        ap_ST_fsm_state12_blk = 1'b1;
    end else begin
        ap_ST_fsm_state12_blk = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state5_on_subcall_done)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((((1'b0 == ap_block_state5_on_subcall_done) & (1'b1 == ap_CS_fsm_state5)) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state5_on_subcall_done) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        load_input_fifo5_din = grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_load_input_fifo5_din;
    end else if (((1'b1 == ap_CS_fsm_state5) & (bb_en == 1'd1) & (conv_en == 1'd0))) begin
        load_input_fifo5_din = grp_load_input_Pipeline_load_input_loop6_fu_238_load_input_fifo5_din;
    end else begin
        load_input_fifo5_din = grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_load_input_fifo5_din;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        load_input_fifo5_write = grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_load_input_fifo5_write;
    end else if (((1'b1 == ap_CS_fsm_state5) & (bb_en == 1'd1) & (conv_en == 1'd0))) begin
        load_input_fifo5_write = grp_load_input_Pipeline_load_input_loop6_fu_238_load_input_fifo5_write;
    end else begin
        load_input_fifo5_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((icmp_ln80_fu_495_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11)))) begin
        m_axi_gmem0_ARADDR = grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_ARADDR;
    end else if (((1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state5) & (bb_en == 1'd1) & (conv_en == 1'd0)))) begin
        m_axi_gmem0_ARADDR = grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_ARADDR;
    end else begin
        m_axi_gmem0_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((icmp_ln80_fu_495_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11)))) begin
        m_axi_gmem0_ARBURST = grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_ARBURST;
    end else if (((1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state5) & (bb_en == 1'd1) & (conv_en == 1'd0)))) begin
        m_axi_gmem0_ARBURST = grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_ARBURST;
    end else begin
        m_axi_gmem0_ARBURST = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((icmp_ln80_fu_495_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11)))) begin
        m_axi_gmem0_ARCACHE = grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_ARCACHE;
    end else if (((1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state5) & (bb_en == 1'd1) & (conv_en == 1'd0)))) begin
        m_axi_gmem0_ARCACHE = grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_ARCACHE;
    end else begin
        m_axi_gmem0_ARCACHE = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((icmp_ln80_fu_495_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11)))) begin
        m_axi_gmem0_ARID = grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_ARID;
    end else if (((1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state5) & (bb_en == 1'd1) & (conv_en == 1'd0)))) begin
        m_axi_gmem0_ARID = grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_ARID;
    end else begin
        m_axi_gmem0_ARID = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((icmp_ln80_fu_495_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11)))) begin
        m_axi_gmem0_ARLEN = grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_ARLEN;
    end else if (((1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state5) & (bb_en == 1'd1) & (conv_en == 1'd0)))) begin
        m_axi_gmem0_ARLEN = grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_ARLEN;
    end else begin
        m_axi_gmem0_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((icmp_ln80_fu_495_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11)))) begin
        m_axi_gmem0_ARLOCK = grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_ARLOCK;
    end else if (((1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state5) & (bb_en == 1'd1) & (conv_en == 1'd0)))) begin
        m_axi_gmem0_ARLOCK = grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_ARLOCK;
    end else begin
        m_axi_gmem0_ARLOCK = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((icmp_ln80_fu_495_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11)))) begin
        m_axi_gmem0_ARPROT = grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_ARPROT;
    end else if (((1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state5) & (bb_en == 1'd1) & (conv_en == 1'd0)))) begin
        m_axi_gmem0_ARPROT = grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_ARPROT;
    end else begin
        m_axi_gmem0_ARPROT = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((icmp_ln80_fu_495_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11)))) begin
        m_axi_gmem0_ARQOS = grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_ARQOS;
    end else if (((1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state5) & (bb_en == 1'd1) & (conv_en == 1'd0)))) begin
        m_axi_gmem0_ARQOS = grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_ARQOS;
    end else begin
        m_axi_gmem0_ARQOS = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((icmp_ln80_fu_495_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11)))) begin
        m_axi_gmem0_ARREGION = grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_ARREGION;
    end else if (((1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state5) & (bb_en == 1'd1) & (conv_en == 1'd0)))) begin
        m_axi_gmem0_ARREGION = grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_ARREGION;
    end else begin
        m_axi_gmem0_ARREGION = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((icmp_ln80_fu_495_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11)))) begin
        m_axi_gmem0_ARSIZE = grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_ARSIZE;
    end else if (((1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state5) & (bb_en == 1'd1) & (conv_en == 1'd0)))) begin
        m_axi_gmem0_ARSIZE = grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_ARSIZE;
    end else begin
        m_axi_gmem0_ARSIZE = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((icmp_ln80_fu_495_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11)))) begin
        m_axi_gmem0_ARUSER = grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_ARUSER;
    end else if (((1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state5) & (bb_en == 1'd1) & (conv_en == 1'd0)))) begin
        m_axi_gmem0_ARUSER = grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_ARUSER;
    end else begin
        m_axi_gmem0_ARUSER = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((icmp_ln80_fu_495_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11)))) begin
        m_axi_gmem0_ARVALID = grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_ARVALID;
    end else if (((1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state5) & (bb_en == 1'd1) & (conv_en == 1'd0)))) begin
        m_axi_gmem0_ARVALID = grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_ARVALID;
    end else begin
        m_axi_gmem0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((icmp_ln80_fu_495_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11)))) begin
        m_axi_gmem0_RREADY = grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_m_axi_gmem0_RREADY;
    end else if (((1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state5) & (bb_en == 1'd1) & (conv_en == 1'd0)))) begin
        m_axi_gmem0_RREADY = grp_load_input_Pipeline_load_input_loop6_fu_238_m_axi_gmem0_RREADY;
    end else begin
        m_axi_gmem0_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (bb_en == 1'd1) & (conv_en_read_read_fu_96_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (bb_en == 1'd1) & (conv_en == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (bb_en_read_read_fu_102_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b0 == ap_block_state5_on_subcall_done) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln68_fu_434_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln70_fu_445_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln72_fu_454_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln74_fu_469_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((icmp_ln78_fu_490_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((icmp_ln80_fu_495_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add107_fu_361_p2 = (mul58_fu_337_p2 + pad);

assign add97_fu_355_p2 = (mul52_fu_331_p2 + pad);

assign add_ln46_1_fu_305_p0 = noy;

assign add_ln46_1_fu_305_p2 = ($signed(add_ln46_1_fu_305_p0) + $signed(32'd6));

assign add_ln46_fu_279_p0 = nox;

assign add_ln46_fu_279_p2 = ($signed(add_ln46_fu_279_p0) + $signed(32'd6));

assign add_ln74_fu_464_p2 = (phi_mul_reg_203 + mul52_reg_584);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_NS_fsm_state4 = ap_NS_fsm[32'd3];

always @ (*) begin
    ap_block_state5_on_subcall_done = ((ap_predicate_op61_call_state5 == 1'b1) & (grp_load_input_Pipeline_load_input_loop6_fu_238_ap_done == 1'b0));
end

always @ (*) begin
    ap_predicate_op61_call_state5 = ((bb_en == 1'd1) & (conv_en == 1'd0));
end

assign bb_en_read_read_fu_102_p2 = bb_en;

assign bound158_fu_381_p0 = bound158_fu_381_p00;

assign bound158_fu_381_p00 = nky;

assign bound158_fu_381_p1 = bound158_fu_381_p10;

assign bound158_fu_381_p10 = nkx;

assign conv_en_read_read_fu_96_p2 = conv_en;

assign empty_54_fu_343_p0 = stride;

assign empty_54_fu_343_p2 = empty_54_fu_343_p0 << 32'd3;

assign f_in_1_fu_474_p2 = (f_in_reg_192 + 32'd1);

assign f_out_3_fu_439_p2 = (f_out_1_fu_92 + 32'd1);

assign grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_ap_start = grp_load_input_Pipeline_load_input_loop14_load_input_loop15_fu_254_ap_start_reg;

assign grp_load_input_Pipeline_load_input_loop6_fu_238_ap_start = grp_load_input_Pipeline_load_input_loop6_fu_238_ap_start_reg;

assign icmp_ln50_fu_426_p2 = ((mul_ln46_1_reg_624 == 38'd0) ? 1'b1 : 1'b0);

assign icmp_ln68_fu_434_p2 = ((f_out_1_fu_92 == nof) ? 1'b1 : 1'b0);

assign icmp_ln70_fu_445_p2 = ((y0_reg_168 < mul52_reg_584) ? 1'b1 : 1'b0);

assign icmp_ln72_fu_454_p2 = ((x0_reg_180 < mul58_reg_590) ? 1'b1 : 1'b0);

assign icmp_ln74_fu_469_p2 = ((f_in_reg_192 == nif) ? 1'b1 : 1'b0);

assign icmp_ln78_fu_490_p2 = ((y_2_reg_214 < mul73_reg_596) ? 1'b1 : 1'b0);

assign icmp_ln80_fu_495_p2 = ((x_reg_226 < mul73_reg_596) ? 1'b1 : 1'b0);

assign m_axi_gmem0_AWADDR = 64'd0;

assign m_axi_gmem0_AWBURST = 2'd0;

assign m_axi_gmem0_AWCACHE = 4'd0;

assign m_axi_gmem0_AWID = 1'd0;

assign m_axi_gmem0_AWLEN = 32'd0;

assign m_axi_gmem0_AWLOCK = 2'd0;

assign m_axi_gmem0_AWPROT = 3'd0;

assign m_axi_gmem0_AWQOS = 4'd0;

assign m_axi_gmem0_AWREGION = 4'd0;

assign m_axi_gmem0_AWSIZE = 3'd0;

assign m_axi_gmem0_AWUSER = 1'd0;

assign m_axi_gmem0_AWVALID = 1'b0;

assign m_axi_gmem0_BREADY = 1'b0;

assign m_axi_gmem0_WDATA = 32'd0;

assign m_axi_gmem0_WID = 1'd0;

assign m_axi_gmem0_WLAST = 1'b0;

assign m_axi_gmem0_WSTRB = 4'd0;

assign m_axi_gmem0_WUSER = 1'd0;

assign m_axi_gmem0_WVALID = 1'b0;

assign mul73_fu_349_p1 = stride;

assign mul73_fu_349_p2 = ($signed(empty_54_fu_343_p2) - $signed(mul73_fu_349_p1));

assign mul_ln46_1_fu_395_p0 = mul_ln46_1_fu_395_p00;

assign mul_ln46_1_fu_395_p00 = tmp_reg_567;

assign mul_ln46_1_fu_395_p1 = 38'd49;

assign mul_ln46_2_fu_315_p0 = mul_ln46_2_fu_315_p00;

assign mul_ln46_2_fu_315_p00 = add_ln46_1_fu_305_p2;

assign mul_ln46_2_fu_315_p1 = 65'd4908534053;

assign mul_ln46_3_fu_408_p0 = mul_ln46_3_fu_408_p00;

assign mul_ln46_3_fu_408_p00 = tmp_2_reg_572;

assign mul_ln46_3_fu_408_p1 = mul_ln46_3_fu_408_p10;

assign mul_ln46_3_fu_408_p10 = mul_ln46_1_fu_395_p2;

assign mul_ln46_4_fu_420_p0 = mul_ln46_4_fu_420_p00;

assign mul_ln46_4_fu_420_p00 = nof;

assign mul_ln46_4_fu_420_p1 = mul_ln46_4_fu_420_p10;

assign mul_ln46_4_fu_420_p10 = mul_ln46_3_reg_630;

assign mul_ln46_fu_289_p0 = mul_ln46_fu_289_p00;

assign mul_ln46_fu_289_p00 = add_ln46_fu_279_p2;

assign mul_ln46_fu_289_p1 = 65'd4908534053;

assign sub_fu_480_p2 = (phi_mul_reg_203 - pad);

assign sub_ln92_fu_367_p2 = (base_addr - pad);

assign x0_3_fu_485_p2 = (mul73_reg_596 + x0_reg_180);

assign x_1_fu_500_p1 = stride;

assign x_1_fu_500_p2 = ($signed(x_reg_226) + $signed(x_1_fu_500_p1));

assign y0_1_fu_459_p2 = (mul73_reg_596 + y0_reg_168);

assign y_fu_505_p1 = stride;

assign y_fu_505_p2 = ($signed(y_2_reg_214) + $signed(y_fu_505_p1));

endmodule //conv_kernel_load_input
