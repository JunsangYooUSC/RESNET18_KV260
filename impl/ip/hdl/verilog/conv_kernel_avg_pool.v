// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_kernel_avg_pool (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST,
        m_axi_gmem0_WID,
        m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST,
        m_axi_gmem0_RID,
        m_axi_gmem0_RFIFONUM,
        m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP,
        m_axi_gmem0_BID,
        m_axi_gmem0_BUSER,
        act_mem,
        in_base_addr,
        out_base_addr,
        nif,
        avg_pool_en,
        grp_fu_2953_p_din0,
        grp_fu_2953_p_din1,
        grp_fu_2953_p_opcode,
        grp_fu_2953_p_dout0,
        grp_fu_2953_p_ce
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_state2 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem0_AWVALID;
input   m_axi_gmem0_AWREADY;
output  [63:0] m_axi_gmem0_AWADDR;
output  [0:0] m_axi_gmem0_AWID;
output  [31:0] m_axi_gmem0_AWLEN;
output  [2:0] m_axi_gmem0_AWSIZE;
output  [1:0] m_axi_gmem0_AWBURST;
output  [1:0] m_axi_gmem0_AWLOCK;
output  [3:0] m_axi_gmem0_AWCACHE;
output  [2:0] m_axi_gmem0_AWPROT;
output  [3:0] m_axi_gmem0_AWQOS;
output  [3:0] m_axi_gmem0_AWREGION;
output  [0:0] m_axi_gmem0_AWUSER;
output   m_axi_gmem0_WVALID;
input   m_axi_gmem0_WREADY;
output  [31:0] m_axi_gmem0_WDATA;
output  [3:0] m_axi_gmem0_WSTRB;
output   m_axi_gmem0_WLAST;
output  [0:0] m_axi_gmem0_WID;
output  [0:0] m_axi_gmem0_WUSER;
output   m_axi_gmem0_ARVALID;
input   m_axi_gmem0_ARREADY;
output  [63:0] m_axi_gmem0_ARADDR;
output  [0:0] m_axi_gmem0_ARID;
output  [31:0] m_axi_gmem0_ARLEN;
output  [2:0] m_axi_gmem0_ARSIZE;
output  [1:0] m_axi_gmem0_ARBURST;
output  [1:0] m_axi_gmem0_ARLOCK;
output  [3:0] m_axi_gmem0_ARCACHE;
output  [2:0] m_axi_gmem0_ARPROT;
output  [3:0] m_axi_gmem0_ARQOS;
output  [3:0] m_axi_gmem0_ARREGION;
output  [0:0] m_axi_gmem0_ARUSER;
input   m_axi_gmem0_RVALID;
output   m_axi_gmem0_RREADY;
input  [31:0] m_axi_gmem0_RDATA;
input   m_axi_gmem0_RLAST;
input  [0:0] m_axi_gmem0_RID;
input  [8:0] m_axi_gmem0_RFIFONUM;
input  [0:0] m_axi_gmem0_RUSER;
input  [1:0] m_axi_gmem0_RRESP;
input   m_axi_gmem0_BVALID;
output   m_axi_gmem0_BREADY;
input  [1:0] m_axi_gmem0_BRESP;
input  [0:0] m_axi_gmem0_BID;
input  [0:0] m_axi_gmem0_BUSER;
input  [63:0] act_mem;
input  [31:0] in_base_addr;
input  [31:0] out_base_addr;
input  [31:0] nif;
input  [0:0] avg_pool_en;
output  [31:0] grp_fu_2953_p_din0;
output  [31:0] grp_fu_2953_p_din1;
output  [0:0] grp_fu_2953_p_opcode;
input  [31:0] grp_fu_2953_p_dout0;
output   grp_fu_2953_p_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_gmem0_AWVALID;
reg m_axi_gmem0_WVALID;
reg m_axi_gmem0_ARVALID;
reg m_axi_gmem0_RREADY;
reg m_axi_gmem0_BREADY;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_ap_start;
wire    grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_ap_done;
wire    grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_ap_idle;
wire    grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_ap_ready;
wire    grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_AWVALID;
wire   [63:0] grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_AWADDR;
wire   [0:0] grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_AWID;
wire   [31:0] grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_AWLEN;
wire   [2:0] grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_AWSIZE;
wire   [1:0] grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_AWBURST;
wire   [1:0] grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_AWLOCK;
wire   [3:0] grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_AWCACHE;
wire   [2:0] grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_AWPROT;
wire   [3:0] grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_AWQOS;
wire   [3:0] grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_AWREGION;
wire   [0:0] grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_AWUSER;
wire    grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_WVALID;
wire   [31:0] grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_WDATA;
wire   [3:0] grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_WSTRB;
wire    grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_WLAST;
wire   [0:0] grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_WID;
wire   [0:0] grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_WUSER;
wire    grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_ARVALID;
wire   [63:0] grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_ARADDR;
wire   [0:0] grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_ARID;
wire   [31:0] grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_ARLEN;
wire   [2:0] grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_ARSIZE;
wire   [1:0] grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_ARBURST;
wire   [1:0] grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_ARLOCK;
wire   [3:0] grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_ARCACHE;
wire   [2:0] grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_ARPROT;
wire   [3:0] grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_ARQOS;
wire   [3:0] grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_ARREGION;
wire   [0:0] grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_ARUSER;
wire    grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_RREADY;
wire    grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_BREADY;
wire   [31:0] grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_grp_fu_106_p_din0;
wire   [31:0] grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_grp_fu_106_p_din1;
wire   [0:0] grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_grp_fu_106_p_opcode;
wire    grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_grp_fu_106_p_ce;
reg    grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_ap_start_reg;
wire    ap_CS_fsm_state2;
reg    grp_fu_106_ce;
reg    ap_block_state2_on_subcall_done;
reg   [1:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_ap_start_reg = 1'b0;
end

conv_kernel_avg_pool_Pipeline_avg_pool_loop1 grp_avg_pool_Pipeline_avg_pool_loop1_fu_68(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_ap_start),
    .ap_done(grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_ap_done),
    .ap_idle(grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_ap_idle),
    .ap_ready(grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_ap_ready),
    .m_axi_gmem0_AWVALID(grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_AWVALID),
    .m_axi_gmem0_AWREADY(m_axi_gmem0_AWREADY),
    .m_axi_gmem0_AWADDR(grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_AWADDR),
    .m_axi_gmem0_AWID(grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_AWID),
    .m_axi_gmem0_AWLEN(grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_AWLEN),
    .m_axi_gmem0_AWSIZE(grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_AWSIZE),
    .m_axi_gmem0_AWBURST(grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_AWBURST),
    .m_axi_gmem0_AWLOCK(grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_AWLOCK),
    .m_axi_gmem0_AWCACHE(grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_AWCACHE),
    .m_axi_gmem0_AWPROT(grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_AWPROT),
    .m_axi_gmem0_AWQOS(grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_AWQOS),
    .m_axi_gmem0_AWREGION(grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_AWREGION),
    .m_axi_gmem0_AWUSER(grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_AWUSER),
    .m_axi_gmem0_WVALID(grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_WVALID),
    .m_axi_gmem0_WREADY(m_axi_gmem0_WREADY),
    .m_axi_gmem0_WDATA(grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_WDATA),
    .m_axi_gmem0_WSTRB(grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_WSTRB),
    .m_axi_gmem0_WLAST(grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_WLAST),
    .m_axi_gmem0_WID(grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_WID),
    .m_axi_gmem0_WUSER(grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_WUSER),
    .m_axi_gmem0_ARVALID(grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_ARVALID),
    .m_axi_gmem0_ARREADY(m_axi_gmem0_ARREADY),
    .m_axi_gmem0_ARADDR(grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_ARADDR),
    .m_axi_gmem0_ARID(grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_ARID),
    .m_axi_gmem0_ARLEN(grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_ARLEN),
    .m_axi_gmem0_ARSIZE(grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_ARSIZE),
    .m_axi_gmem0_ARBURST(grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_ARBURST),
    .m_axi_gmem0_ARLOCK(grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_ARLOCK),
    .m_axi_gmem0_ARCACHE(grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_ARCACHE),
    .m_axi_gmem0_ARPROT(grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_ARPROT),
    .m_axi_gmem0_ARQOS(grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_ARQOS),
    .m_axi_gmem0_ARREGION(grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_ARREGION),
    .m_axi_gmem0_ARUSER(grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_ARUSER),
    .m_axi_gmem0_RVALID(m_axi_gmem0_RVALID),
    .m_axi_gmem0_RREADY(grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_RREADY),
    .m_axi_gmem0_RDATA(m_axi_gmem0_RDATA),
    .m_axi_gmem0_RLAST(m_axi_gmem0_RLAST),
    .m_axi_gmem0_RID(m_axi_gmem0_RID),
    .m_axi_gmem0_RFIFONUM(m_axi_gmem0_RFIFONUM),
    .m_axi_gmem0_RUSER(m_axi_gmem0_RUSER),
    .m_axi_gmem0_RRESP(m_axi_gmem0_RRESP),
    .m_axi_gmem0_BVALID(m_axi_gmem0_BVALID),
    .m_axi_gmem0_BREADY(grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_BREADY),
    .m_axi_gmem0_BRESP(m_axi_gmem0_BRESP),
    .m_axi_gmem0_BID(m_axi_gmem0_BID),
    .m_axi_gmem0_BUSER(m_axi_gmem0_BUSER),
    .nif(nif),
    .in_base_addr(in_base_addr),
    .act_mem(act_mem),
    .out_base_addr(out_base_addr),
    .grp_fu_106_p_din0(grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_grp_fu_106_p_din0),
    .grp_fu_106_p_din1(grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_grp_fu_106_p_din1),
    .grp_fu_106_p_opcode(grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_grp_fu_106_p_opcode),
    .grp_fu_106_p_dout0(grp_fu_2953_p_dout0),
    .grp_fu_106_p_ce(grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_grp_fu_106_p_ce)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (avg_pool_en == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_ap_start_reg <= 1'b1;
        end else if ((grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_ap_ready == 1'b1)) begin
            grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_ap_start_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state2_on_subcall_done)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_on_subcall_done)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_on_subcall_done))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_106_ce = grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_grp_fu_106_p_ce;
    end else begin
        grp_fu_106_ce = 1'b1;
    end
end

always @ (*) begin
    if ((((avg_pool_en == 1'd1) & (1'b1 == ap_CS_fsm_state1)) | ((avg_pool_en == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_gmem0_ARVALID = grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_ARVALID;
    end else begin
        m_axi_gmem0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((avg_pool_en == 1'd1) & (1'b1 == ap_CS_fsm_state1)) | ((avg_pool_en == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_gmem0_AWVALID = grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_AWVALID;
    end else begin
        m_axi_gmem0_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((avg_pool_en == 1'd1) & (1'b1 == ap_CS_fsm_state1)) | ((avg_pool_en == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_gmem0_BREADY = grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_BREADY;
    end else begin
        m_axi_gmem0_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((avg_pool_en == 1'd1) & (1'b1 == ap_CS_fsm_state1)) | ((avg_pool_en == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_gmem0_RREADY = grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_RREADY;
    end else begin
        m_axi_gmem0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((avg_pool_en == 1'd1) & (1'b1 == ap_CS_fsm_state1)) | ((avg_pool_en == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        m_axi_gmem0_WVALID = grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_WVALID;
    end else begin
        m_axi_gmem0_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (1'b0 == ap_block_state2_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

always @ (*) begin
    ap_block_state2_on_subcall_done = ((grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_ap_done == 1'b0) & (avg_pool_en == 1'd1));
end

assign grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_ap_start = grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_ap_start_reg;

assign grp_fu_2953_p_ce = grp_fu_106_ce;

assign grp_fu_2953_p_din0 = grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_grp_fu_106_p_din0;

assign grp_fu_2953_p_din1 = grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_grp_fu_106_p_din1;

assign grp_fu_2953_p_opcode = grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_grp_fu_106_p_opcode;

assign m_axi_gmem0_ARADDR = grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_ARADDR;

assign m_axi_gmem0_ARBURST = grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_ARBURST;

assign m_axi_gmem0_ARCACHE = grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_ARCACHE;

assign m_axi_gmem0_ARID = grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_ARID;

assign m_axi_gmem0_ARLEN = grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_ARLEN;

assign m_axi_gmem0_ARLOCK = grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_ARLOCK;

assign m_axi_gmem0_ARPROT = grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_ARPROT;

assign m_axi_gmem0_ARQOS = grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_ARQOS;

assign m_axi_gmem0_ARREGION = grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_ARREGION;

assign m_axi_gmem0_ARSIZE = grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_ARSIZE;

assign m_axi_gmem0_ARUSER = grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_ARUSER;

assign m_axi_gmem0_AWADDR = grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_AWADDR;

assign m_axi_gmem0_AWBURST = grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_AWBURST;

assign m_axi_gmem0_AWCACHE = grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_AWCACHE;

assign m_axi_gmem0_AWID = grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_AWID;

assign m_axi_gmem0_AWLEN = grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_AWLEN;

assign m_axi_gmem0_AWLOCK = grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_AWLOCK;

assign m_axi_gmem0_AWPROT = grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_AWPROT;

assign m_axi_gmem0_AWQOS = grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_AWQOS;

assign m_axi_gmem0_AWREGION = grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_AWREGION;

assign m_axi_gmem0_AWSIZE = grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_AWSIZE;

assign m_axi_gmem0_AWUSER = grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_AWUSER;

assign m_axi_gmem0_WDATA = grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_WDATA;

assign m_axi_gmem0_WID = grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_WID;

assign m_axi_gmem0_WLAST = grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_WLAST;

assign m_axi_gmem0_WSTRB = grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_WSTRB;

assign m_axi_gmem0_WUSER = grp_avg_pool_Pipeline_avg_pool_loop1_fu_68_m_axi_gmem0_WUSER;

endmodule //conv_kernel_avg_pool
