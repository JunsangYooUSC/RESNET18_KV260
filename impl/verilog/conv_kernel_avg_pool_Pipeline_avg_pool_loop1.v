// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_kernel_avg_pool_Pipeline_avg_pool_loop1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST,
        m_axi_gmem0_WID,
        m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST,
        m_axi_gmem0_RID,
        m_axi_gmem0_RFIFONUM,
        m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP,
        m_axi_gmem0_BID,
        m_axi_gmem0_BUSER,
        nif,
        in_base_addr,
        act_mem,
        out_base_addr,
        grp_fu_106_p_din0,
        grp_fu_106_p_din1,
        grp_fu_106_p_opcode,
        grp_fu_106_p_dout0,
        grp_fu_106_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 49'd1;
parameter    ap_ST_fsm_pp0_stage1 = 49'd2;
parameter    ap_ST_fsm_pp0_stage2 = 49'd4;
parameter    ap_ST_fsm_pp0_stage3 = 49'd8;
parameter    ap_ST_fsm_pp0_stage4 = 49'd16;
parameter    ap_ST_fsm_pp0_stage5 = 49'd32;
parameter    ap_ST_fsm_pp0_stage6 = 49'd64;
parameter    ap_ST_fsm_pp0_stage7 = 49'd128;
parameter    ap_ST_fsm_pp0_stage8 = 49'd256;
parameter    ap_ST_fsm_pp0_stage9 = 49'd512;
parameter    ap_ST_fsm_pp0_stage10 = 49'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 49'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 49'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 49'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 49'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 49'd32768;
parameter    ap_ST_fsm_pp0_stage16 = 49'd65536;
parameter    ap_ST_fsm_pp0_stage17 = 49'd131072;
parameter    ap_ST_fsm_pp0_stage18 = 49'd262144;
parameter    ap_ST_fsm_pp0_stage19 = 49'd524288;
parameter    ap_ST_fsm_pp0_stage20 = 49'd1048576;
parameter    ap_ST_fsm_pp0_stage21 = 49'd2097152;
parameter    ap_ST_fsm_pp0_stage22 = 49'd4194304;
parameter    ap_ST_fsm_pp0_stage23 = 49'd8388608;
parameter    ap_ST_fsm_pp0_stage24 = 49'd16777216;
parameter    ap_ST_fsm_pp0_stage25 = 49'd33554432;
parameter    ap_ST_fsm_pp0_stage26 = 49'd67108864;
parameter    ap_ST_fsm_pp0_stage27 = 49'd134217728;
parameter    ap_ST_fsm_pp0_stage28 = 49'd268435456;
parameter    ap_ST_fsm_pp0_stage29 = 49'd536870912;
parameter    ap_ST_fsm_pp0_stage30 = 49'd1073741824;
parameter    ap_ST_fsm_pp0_stage31 = 49'd2147483648;
parameter    ap_ST_fsm_pp0_stage32 = 49'd4294967296;
parameter    ap_ST_fsm_pp0_stage33 = 49'd8589934592;
parameter    ap_ST_fsm_pp0_stage34 = 49'd17179869184;
parameter    ap_ST_fsm_pp0_stage35 = 49'd34359738368;
parameter    ap_ST_fsm_pp0_stage36 = 49'd68719476736;
parameter    ap_ST_fsm_pp0_stage37 = 49'd137438953472;
parameter    ap_ST_fsm_pp0_stage38 = 49'd274877906944;
parameter    ap_ST_fsm_pp0_stage39 = 49'd549755813888;
parameter    ap_ST_fsm_pp0_stage40 = 49'd1099511627776;
parameter    ap_ST_fsm_pp0_stage41 = 49'd2199023255552;
parameter    ap_ST_fsm_pp0_stage42 = 49'd4398046511104;
parameter    ap_ST_fsm_pp0_stage43 = 49'd8796093022208;
parameter    ap_ST_fsm_pp0_stage44 = 49'd17592186044416;
parameter    ap_ST_fsm_pp0_stage45 = 49'd35184372088832;
parameter    ap_ST_fsm_pp0_stage46 = 49'd70368744177664;
parameter    ap_ST_fsm_pp0_stage47 = 49'd140737488355328;
parameter    ap_ST_fsm_pp0_stage48 = 49'd281474976710656;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem0_AWVALID;
input   m_axi_gmem0_AWREADY;
output  [63:0] m_axi_gmem0_AWADDR;
output  [0:0] m_axi_gmem0_AWID;
output  [31:0] m_axi_gmem0_AWLEN;
output  [2:0] m_axi_gmem0_AWSIZE;
output  [1:0] m_axi_gmem0_AWBURST;
output  [1:0] m_axi_gmem0_AWLOCK;
output  [3:0] m_axi_gmem0_AWCACHE;
output  [2:0] m_axi_gmem0_AWPROT;
output  [3:0] m_axi_gmem0_AWQOS;
output  [3:0] m_axi_gmem0_AWREGION;
output  [0:0] m_axi_gmem0_AWUSER;
output   m_axi_gmem0_WVALID;
input   m_axi_gmem0_WREADY;
output  [31:0] m_axi_gmem0_WDATA;
output  [3:0] m_axi_gmem0_WSTRB;
output   m_axi_gmem0_WLAST;
output  [0:0] m_axi_gmem0_WID;
output  [0:0] m_axi_gmem0_WUSER;
output   m_axi_gmem0_ARVALID;
input   m_axi_gmem0_ARREADY;
output  [63:0] m_axi_gmem0_ARADDR;
output  [0:0] m_axi_gmem0_ARID;
output  [31:0] m_axi_gmem0_ARLEN;
output  [2:0] m_axi_gmem0_ARSIZE;
output  [1:0] m_axi_gmem0_ARBURST;
output  [1:0] m_axi_gmem0_ARLOCK;
output  [3:0] m_axi_gmem0_ARCACHE;
output  [2:0] m_axi_gmem0_ARPROT;
output  [3:0] m_axi_gmem0_ARQOS;
output  [3:0] m_axi_gmem0_ARREGION;
output  [0:0] m_axi_gmem0_ARUSER;
input   m_axi_gmem0_RVALID;
output   m_axi_gmem0_RREADY;
input  [31:0] m_axi_gmem0_RDATA;
input   m_axi_gmem0_RLAST;
input  [0:0] m_axi_gmem0_RID;
input  [8:0] m_axi_gmem0_RFIFONUM;
input  [0:0] m_axi_gmem0_RUSER;
input  [1:0] m_axi_gmem0_RRESP;
input   m_axi_gmem0_BVALID;
output   m_axi_gmem0_BREADY;
input  [1:0] m_axi_gmem0_BRESP;
input  [0:0] m_axi_gmem0_BID;
input  [0:0] m_axi_gmem0_BUSER;
input  [31:0] nif;
input  [31:0] in_base_addr;
input  [63:0] act_mem;
input  [31:0] out_base_addr;
output  [31:0] grp_fu_106_p_din0;
output  [31:0] grp_fu_106_p_din1;
output  [0:0] grp_fu_106_p_opcode;
input  [31:0] grp_fu_106_p_dout0;
output   grp_fu_106_p_ce;

reg ap_idle;
reg m_axi_gmem0_AWVALID;
reg m_axi_gmem0_WVALID;
reg m_axi_gmem0_ARVALID;
reg m_axi_gmem0_RREADY;
reg m_axi_gmem0_BREADY;

(* fsm_encoding = "none" *) reg   [48:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage48;
reg   [0:0] icmp_ln477_reg_533;
reg    ap_block_state49_pp0_stage48_iter0;
wire    ap_block_state98_pp0_stage48_iter1;
wire    ap_block_state147_pp0_stage48_iter2;
wire    ap_block_state196_pp0_stage48_iter3;
reg    ap_block_pp0_stage48_subdone;
reg    ap_condition_exit_pp0_iter0_stage48;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem0_blk_n_AR;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
reg    gmem0_blk_n_R;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_pp0_stage16;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_pp0_stage17;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_pp0_stage18;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_pp0_stage19;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_pp0_stage20;
wire    ap_CS_fsm_pp0_stage21;
wire    ap_block_pp0_stage21;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_pp0_stage22;
wire    ap_CS_fsm_pp0_stage23;
wire    ap_block_pp0_stage23;
wire    ap_CS_fsm_pp0_stage24;
wire    ap_block_pp0_stage24;
wire    ap_CS_fsm_pp0_stage25;
wire    ap_block_pp0_stage25;
wire    ap_CS_fsm_pp0_stage26;
wire    ap_block_pp0_stage26;
wire    ap_CS_fsm_pp0_stage27;
wire    ap_block_pp0_stage27;
wire    ap_CS_fsm_pp0_stage28;
wire    ap_block_pp0_stage28;
wire    ap_CS_fsm_pp0_stage29;
wire    ap_block_pp0_stage29;
wire    ap_CS_fsm_pp0_stage30;
wire    ap_block_pp0_stage30;
wire    ap_CS_fsm_pp0_stage31;
wire    ap_block_pp0_stage31;
wire    ap_CS_fsm_pp0_stage32;
wire    ap_block_pp0_stage32;
wire    ap_CS_fsm_pp0_stage33;
wire    ap_block_pp0_stage33;
wire    ap_CS_fsm_pp0_stage34;
wire    ap_block_pp0_stage34;
wire    ap_CS_fsm_pp0_stage35;
wire    ap_block_pp0_stage35;
wire    ap_CS_fsm_pp0_stage36;
wire    ap_block_pp0_stage36;
wire    ap_CS_fsm_pp0_stage37;
wire    ap_block_pp0_stage37;
wire    ap_CS_fsm_pp0_stage38;
wire    ap_block_pp0_stage38;
wire    ap_CS_fsm_pp0_stage39;
wire    ap_block_pp0_stage39;
wire    ap_CS_fsm_pp0_stage40;
wire    ap_block_pp0_stage40;
wire    ap_CS_fsm_pp0_stage41;
wire    ap_block_pp0_stage41;
wire    ap_CS_fsm_pp0_stage42;
wire    ap_block_pp0_stage42;
wire    ap_CS_fsm_pp0_stage43;
wire    ap_block_pp0_stage43;
wire    ap_CS_fsm_pp0_stage44;
wire    ap_block_pp0_stage44;
wire    ap_CS_fsm_pp0_stage45;
wire    ap_block_pp0_stage45;
wire    ap_CS_fsm_pp0_stage46;
wire    ap_block_pp0_stage46;
wire    ap_CS_fsm_pp0_stage47;
wire    ap_block_pp0_stage47;
wire    ap_block_pp0_stage48;
wire    ap_block_pp0_stage0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
reg    gmem0_blk_n_AW;
reg    gmem0_blk_n_W;
reg    gmem0_blk_n_B;
reg   [31:0] reg_138;
reg    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_state59_pp0_stage9_iter1;
wire    ap_block_state108_pp0_stage9_iter2;
wire    ap_block_state157_pp0_stage9_iter3;
wire    ap_block_state206_pp0_stage9_iter4;
reg    ap_block_pp0_stage9_11001;
reg    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_state60_pp0_stage10_iter1;
wire    ap_block_state109_pp0_stage10_iter2;
wire    ap_block_state158_pp0_stage10_iter3;
wire    ap_block_state207_pp0_stage10_iter4;
reg    ap_block_pp0_stage10_11001;
reg    ap_block_state15_pp0_stage14_iter0;
wire    ap_block_state64_pp0_stage14_iter1;
wire    ap_block_state113_pp0_stage14_iter2;
wire    ap_block_state162_pp0_stage14_iter3;
wire    ap_block_state211_pp0_stage14_iter4;
reg    ap_block_pp0_stage14_11001;
reg   [31:0] reg_142;
reg    ap_block_state12_pp0_stage11_iter0;
wire    ap_block_state61_pp0_stage11_iter1;
wire    ap_block_state110_pp0_stage11_iter2;
wire    ap_block_state159_pp0_stage11_iter3;
wire    ap_block_state208_pp0_stage11_iter4;
reg    ap_block_pp0_stage11_11001;
reg    ap_block_state19_pp0_stage18_iter0;
wire    ap_block_state68_pp0_stage18_iter1;
wire    ap_block_state117_pp0_stage18_iter2;
wire    ap_block_state166_pp0_stage18_iter3;
wire    ap_block_state215_pp0_stage18_iter4;
reg    ap_block_pp0_stage18_11001;
reg   [31:0] reg_146;
reg    ap_block_state14_pp0_stage13_iter0;
wire    ap_block_state63_pp0_stage13_iter1;
wire    ap_block_state112_pp0_stage13_iter2;
wire    ap_block_state161_pp0_stage13_iter3;
wire    ap_block_state210_pp0_stage13_iter4;
reg    ap_block_pp0_stage13_11001;
reg    ap_block_state18_pp0_stage17_iter0;
wire    ap_block_state67_pp0_stage17_iter1;
wire    ap_block_state116_pp0_stage17_iter2;
wire    ap_block_state165_pp0_stage17_iter3;
wire    ap_block_state214_pp0_stage17_iter4;
reg    ap_block_pp0_stage17_11001;
reg    ap_block_state22_pp0_stage21_iter0;
wire    ap_block_state71_pp0_stage21_iter1;
wire    ap_block_state120_pp0_stage21_iter2;
wire    ap_block_state169_pp0_stage21_iter3;
wire    ap_block_state218_pp0_stage21_iter4;
reg    ap_block_pp0_stage21_11001;
reg    ap_block_state26_pp0_stage25_iter0;
wire    ap_block_state75_pp0_stage25_iter1;
wire    ap_block_state124_pp0_stage25_iter2;
wire    ap_block_state173_pp0_stage25_iter3;
reg    ap_block_pp0_stage25_11001;
reg    ap_block_state30_pp0_stage29_iter0;
wire    ap_block_state79_pp0_stage29_iter1;
wire    ap_block_state128_pp0_stage29_iter2;
wire    ap_block_state177_pp0_stage29_iter3;
reg    ap_block_pp0_stage29_11001;
reg    ap_block_state34_pp0_stage33_iter0;
wire    ap_block_state83_pp0_stage33_iter1;
wire    ap_block_state132_pp0_stage33_iter2;
wire    ap_block_state181_pp0_stage33_iter3;
reg    ap_block_pp0_stage33_11001;
reg    ap_block_state38_pp0_stage37_iter0;
wire    ap_block_state87_pp0_stage37_iter1;
wire    ap_block_state136_pp0_stage37_iter2;
wire    ap_block_state185_pp0_stage37_iter3;
reg    ap_block_pp0_stage37_11001;
reg    ap_block_state42_pp0_stage41_iter0;
wire    ap_block_state91_pp0_stage41_iter1;
wire    ap_block_state140_pp0_stage41_iter2;
wire    ap_block_state189_pp0_stage41_iter3;
reg    ap_block_pp0_stage41_11001;
reg    ap_block_state46_pp0_stage45_iter0;
wire    ap_block_state95_pp0_stage45_iter1;
wire    ap_block_state144_pp0_stage45_iter2;
wire    ap_block_state193_pp0_stage45_iter3;
reg    ap_block_pp0_stage45_11001;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state50_pp0_stage0_iter1;
wire    ap_block_state99_pp0_stage0_iter2;
wire    ap_block_state148_pp0_stage0_iter3;
wire    ap_block_state197_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
wire    ap_block_state5_pp0_stage4_iter0;
reg    ap_block_state54_pp0_stage4_iter1;
wire    ap_block_state103_pp0_stage4_iter2;
wire    ap_block_state152_pp0_stage4_iter3;
wire    ap_block_state201_pp0_stage4_iter4;
reg    ap_block_pp0_stage4_11001;
wire    ap_block_state9_pp0_stage8_iter0;
reg    ap_block_state58_pp0_stage8_iter1;
wire    ap_block_state107_pp0_stage8_iter2;
wire    ap_block_state156_pp0_stage8_iter3;
wire    ap_block_state205_pp0_stage8_iter4;
reg    ap_block_pp0_stage8_11001;
reg   [31:0] reg_151;
reg    ap_block_state13_pp0_stage12_iter0;
wire    ap_block_state62_pp0_stage12_iter1;
wire    ap_block_state111_pp0_stage12_iter2;
wire    ap_block_state160_pp0_stage12_iter3;
wire    ap_block_state209_pp0_stage12_iter4;
reg    ap_block_pp0_stage12_11001;
reg    ap_block_state17_pp0_stage16_iter0;
wire    ap_block_state66_pp0_stage16_iter1;
wire    ap_block_state115_pp0_stage16_iter2;
wire    ap_block_state164_pp0_stage16_iter3;
wire    ap_block_state213_pp0_stage16_iter4;
reg    ap_block_pp0_stage16_11001;
reg    ap_block_state21_pp0_stage20_iter0;
wire    ap_block_state70_pp0_stage20_iter1;
wire    ap_block_state119_pp0_stage20_iter2;
wire    ap_block_state168_pp0_stage20_iter3;
wire    ap_block_state217_pp0_stage20_iter4;
reg    ap_block_pp0_stage20_11001;
reg    ap_block_state25_pp0_stage24_iter0;
wire    ap_block_state74_pp0_stage24_iter1;
wire    ap_block_state123_pp0_stage24_iter2;
wire    ap_block_state172_pp0_stage24_iter3;
reg    ap_block_state221_pp0_stage24_iter4;
reg    ap_block_pp0_stage24_11001;
reg    ap_block_state29_pp0_stage28_iter0;
wire    ap_block_state78_pp0_stage28_iter1;
wire    ap_block_state127_pp0_stage28_iter2;
wire    ap_block_state176_pp0_stage28_iter3;
reg    ap_block_pp0_stage28_11001;
reg    ap_block_state33_pp0_stage32_iter0;
wire    ap_block_state82_pp0_stage32_iter1;
wire    ap_block_state131_pp0_stage32_iter2;
wire    ap_block_state180_pp0_stage32_iter3;
reg    ap_block_pp0_stage32_11001;
reg    ap_block_state37_pp0_stage36_iter0;
wire    ap_block_state86_pp0_stage36_iter1;
wire    ap_block_state135_pp0_stage36_iter2;
wire    ap_block_state184_pp0_stage36_iter3;
reg    ap_block_pp0_stage36_11001;
reg    ap_block_state41_pp0_stage40_iter0;
wire    ap_block_state90_pp0_stage40_iter1;
wire    ap_block_state139_pp0_stage40_iter2;
wire    ap_block_state188_pp0_stage40_iter3;
reg    ap_block_pp0_stage40_11001;
reg    ap_block_state45_pp0_stage44_iter0;
wire    ap_block_state94_pp0_stage44_iter1;
wire    ap_block_state143_pp0_stage44_iter2;
wire    ap_block_state192_pp0_stage44_iter3;
reg    ap_block_pp0_stage44_11001;
reg    ap_block_pp0_stage48_11001;
wire    ap_block_state4_pp0_stage3_iter0;
reg    ap_block_state53_pp0_stage3_iter1;
wire    ap_block_state102_pp0_stage3_iter2;
wire    ap_block_state151_pp0_stage3_iter3;
wire    ap_block_state200_pp0_stage3_iter4;
reg    ap_block_pp0_stage3_11001;
wire    ap_block_state8_pp0_stage7_iter0;
reg    ap_block_state57_pp0_stage7_iter1;
wire    ap_block_state106_pp0_stage7_iter2;
wire    ap_block_state155_pp0_stage7_iter3;
wire    ap_block_state204_pp0_stage7_iter4;
reg    ap_block_pp0_stage7_11001;
reg   [31:0] reg_156;
reg    ap_block_state16_pp0_stage15_iter0;
wire    ap_block_state65_pp0_stage15_iter1;
wire    ap_block_state114_pp0_stage15_iter2;
wire    ap_block_state163_pp0_stage15_iter3;
wire    ap_block_state212_pp0_stage15_iter4;
reg    ap_block_pp0_stage15_11001;
reg    ap_block_state20_pp0_stage19_iter0;
wire    ap_block_state69_pp0_stage19_iter1;
wire    ap_block_state118_pp0_stage19_iter2;
wire    ap_block_state167_pp0_stage19_iter3;
wire    ap_block_state216_pp0_stage19_iter4;
reg    ap_block_pp0_stage19_11001;
reg    ap_block_state24_pp0_stage23_iter0;
wire    ap_block_state73_pp0_stage23_iter1;
wire    ap_block_state122_pp0_stage23_iter2;
wire    ap_block_state171_pp0_stage23_iter3;
wire    ap_block_state220_pp0_stage23_iter4;
reg    ap_block_pp0_stage23_11001;
reg    ap_block_state28_pp0_stage27_iter0;
wire    ap_block_state77_pp0_stage27_iter1;
wire    ap_block_state126_pp0_stage27_iter2;
wire    ap_block_state175_pp0_stage27_iter3;
reg    ap_block_pp0_stage27_11001;
reg    ap_block_state32_pp0_stage31_iter0;
wire    ap_block_state81_pp0_stage31_iter1;
wire    ap_block_state130_pp0_stage31_iter2;
wire    ap_block_state179_pp0_stage31_iter3;
reg    ap_block_pp0_stage31_11001;
reg    ap_block_state36_pp0_stage35_iter0;
wire    ap_block_state85_pp0_stage35_iter1;
wire    ap_block_state134_pp0_stage35_iter2;
wire    ap_block_state183_pp0_stage35_iter3;
reg    ap_block_pp0_stage35_11001;
reg    ap_block_state40_pp0_stage39_iter0;
wire    ap_block_state89_pp0_stage39_iter1;
wire    ap_block_state138_pp0_stage39_iter2;
wire    ap_block_state187_pp0_stage39_iter3;
reg    ap_block_pp0_stage39_11001;
reg    ap_block_state44_pp0_stage43_iter0;
wire    ap_block_state93_pp0_stage43_iter1;
wire    ap_block_state142_pp0_stage43_iter2;
wire    ap_block_state191_pp0_stage43_iter3;
reg    ap_block_pp0_stage43_11001;
reg    ap_block_state48_pp0_stage47_iter0;
wire    ap_block_state97_pp0_stage47_iter1;
wire    ap_block_state146_pp0_stage47_iter2;
wire    ap_block_state195_pp0_stage47_iter3;
reg    ap_block_pp0_stage47_11001;
wire    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_state3_io;
reg    ap_block_state52_pp0_stage2_iter1;
wire    ap_block_state101_pp0_stage2_iter2;
wire    ap_block_state150_pp0_stage2_iter3;
wire    ap_block_state199_pp0_stage2_iter4;
reg    ap_block_pp0_stage2_11001;
wire    ap_block_state7_pp0_stage6_iter0;
reg    ap_block_state56_pp0_stage6_iter1;
wire    ap_block_state105_pp0_stage6_iter2;
wire    ap_block_state154_pp0_stage6_iter3;
wire    ap_block_state203_pp0_stage6_iter4;
reg    ap_block_pp0_stage6_11001;
reg   [31:0] reg_161;
reg    ap_block_state23_pp0_stage22_iter0;
wire    ap_block_state72_pp0_stage22_iter1;
wire    ap_block_state121_pp0_stage22_iter2;
wire    ap_block_state170_pp0_stage22_iter3;
wire    ap_block_state219_pp0_stage22_iter4;
reg    ap_block_pp0_stage22_11001;
reg    ap_block_state27_pp0_stage26_iter0;
wire    ap_block_state76_pp0_stage26_iter1;
wire    ap_block_state125_pp0_stage26_iter2;
wire    ap_block_state174_pp0_stage26_iter3;
reg    ap_block_pp0_stage26_11001;
reg    ap_block_state31_pp0_stage30_iter0;
wire    ap_block_state80_pp0_stage30_iter1;
wire    ap_block_state129_pp0_stage30_iter2;
wire    ap_block_state178_pp0_stage30_iter3;
reg    ap_block_pp0_stage30_11001;
reg    ap_block_state35_pp0_stage34_iter0;
wire    ap_block_state84_pp0_stage34_iter1;
wire    ap_block_state133_pp0_stage34_iter2;
wire    ap_block_state182_pp0_stage34_iter3;
reg    ap_block_pp0_stage34_11001;
reg    ap_block_state39_pp0_stage38_iter0;
wire    ap_block_state88_pp0_stage38_iter1;
wire    ap_block_state137_pp0_stage38_iter2;
wire    ap_block_state186_pp0_stage38_iter3;
reg    ap_block_pp0_stage38_11001;
reg    ap_block_state43_pp0_stage42_iter0;
wire    ap_block_state92_pp0_stage42_iter1;
wire    ap_block_state141_pp0_stage42_iter2;
wire    ap_block_state190_pp0_stage42_iter3;
reg    ap_block_pp0_stage42_11001;
reg    ap_block_state47_pp0_stage46_iter0;
wire    ap_block_state96_pp0_stage46_iter1;
wire    ap_block_state145_pp0_stage46_iter2;
wire    ap_block_state194_pp0_stage46_iter3;
reg    ap_block_pp0_stage46_11001;
wire    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_state51_pp0_stage1_iter1;
wire    ap_block_state100_pp0_stage1_iter2;
wire    ap_block_state149_pp0_stage1_iter3;
wire    ap_block_state198_pp0_stage1_iter4;
reg    ap_block_pp0_stage1_11001;
wire    ap_block_state6_pp0_stage5_iter0;
reg    ap_block_state55_pp0_stage5_iter1;
wire    ap_block_state104_pp0_stage5_iter2;
wire    ap_block_state153_pp0_stage5_iter3;
wire    ap_block_state202_pp0_stage5_iter4;
reg    ap_block_pp0_stage5_11001;
wire   [0:0] icmp_ln477_fu_179_p2;
reg   [0:0] icmp_ln477_reg_533_pp0_iter1_reg;
reg   [0:0] icmp_ln477_reg_533_pp0_iter2_reg;
reg   [0:0] icmp_ln477_reg_533_pp0_iter3_reg;
reg   [63:0] gmem0_addr_reg_537;
reg   [63:0] gmem0_addr_19_reg_543;
reg   [63:0] gmem0_addr_19_reg_543_pp0_iter1_reg;
reg   [63:0] gmem0_addr_19_reg_543_pp0_iter2_reg;
reg   [63:0] gmem0_addr_19_reg_543_pp0_iter3_reg;
reg   [63:0] gmem0_addr_19_reg_543_pp0_iter4_reg;
wire   [31:0] bitcast_ln486_fu_293_p1;
reg   [31:0] gmem0_addr_read_3_reg_554;
reg   [31:0] gmem0_addr_read_4_reg_559;
wire   [31:0] bitcast_ln486_1_fu_298_p1;
reg   [31:0] gmem0_addr_read_6_reg_569;
reg   [31:0] gmem0_addr_read_7_reg_574;
reg   [31:0] gmem0_addr_read_8_reg_579;
wire   [31:0] bitcast_ln486_2_fu_303_p1;
reg   [31:0] gmem0_addr_read_10_reg_589;
reg   [31:0] gmem0_addr_read_11_reg_594;
reg   [31:0] gmem0_addr_read_12_reg_599;
wire   [31:0] bitcast_ln486_3_fu_308_p1;
reg   [31:0] gmem0_addr_read_13_reg_609;
reg   [31:0] gmem0_addr_read_14_reg_614;
reg   [31:0] gmem0_addr_read_15_reg_619;
reg   [31:0] gmem0_addr_read_16_reg_624;
wire   [31:0] bitcast_ln486_4_fu_312_p1;
reg   [31:0] gmem0_addr_read_17_reg_634;
reg   [31:0] gmem0_addr_read_17_reg_634_pp0_iter1_reg;
reg   [31:0] gmem0_addr_read_18_reg_639;
reg   [31:0] gmem0_addr_read_18_reg_639_pp0_iter1_reg;
reg   [31:0] gmem0_addr_read_19_reg_644;
reg   [31:0] gmem0_addr_read_19_reg_644_pp0_iter1_reg;
reg   [31:0] gmem0_addr_read_20_reg_649;
reg   [31:0] gmem0_addr_read_20_reg_649_pp0_iter1_reg;
wire   [31:0] bitcast_ln486_5_fu_316_p1;
reg   [31:0] gmem0_addr_read_21_reg_659;
reg   [31:0] gmem0_addr_read_21_reg_659_pp0_iter1_reg;
reg   [31:0] gmem0_addr_read_22_reg_664;
reg   [31:0] gmem0_addr_read_22_reg_664_pp0_iter1_reg;
reg   [31:0] gmem0_addr_read_23_reg_669;
reg   [31:0] gmem0_addr_read_23_reg_669_pp0_iter1_reg;
reg   [31:0] gmem0_addr_read_24_reg_674;
reg   [31:0] gmem0_addr_read_24_reg_674_pp0_iter1_reg;
wire   [31:0] bitcast_ln486_6_fu_321_p1;
reg   [31:0] gmem0_addr_read_25_reg_684;
reg   [31:0] gmem0_addr_read_25_reg_684_pp0_iter1_reg;
reg   [31:0] gmem0_addr_read_26_reg_689;
reg   [31:0] gmem0_addr_read_26_reg_689_pp0_iter1_reg;
reg   [31:0] gmem0_addr_read_27_reg_694;
reg   [31:0] gmem0_addr_read_27_reg_694_pp0_iter1_reg;
reg   [31:0] gmem0_addr_read_28_reg_699;
reg   [31:0] gmem0_addr_read_28_reg_699_pp0_iter1_reg;
wire   [31:0] bitcast_ln486_7_fu_325_p1;
reg   [31:0] gmem0_addr_read_29_reg_709;
reg   [31:0] gmem0_addr_read_29_reg_709_pp0_iter1_reg;
reg   [31:0] gmem0_addr_read_30_reg_714;
reg   [31:0] gmem0_addr_read_30_reg_714_pp0_iter1_reg;
reg   [31:0] gmem0_addr_read_31_reg_719;
reg   [31:0] gmem0_addr_read_31_reg_719_pp0_iter1_reg;
reg   [31:0] gmem0_addr_read_32_reg_724;
reg   [31:0] gmem0_addr_read_32_reg_724_pp0_iter1_reg;
wire   [31:0] bitcast_ln486_8_fu_329_p1;
reg   [31:0] gmem0_addr_read_33_reg_734;
reg   [31:0] gmem0_addr_read_33_reg_734_pp0_iter1_reg;
reg   [31:0] gmem0_addr_read_33_reg_734_pp0_iter2_reg;
reg   [31:0] gmem0_addr_read_34_reg_739;
reg   [31:0] gmem0_addr_read_34_reg_739_pp0_iter1_reg;
reg   [31:0] gmem0_addr_read_34_reg_739_pp0_iter2_reg;
reg   [31:0] gmem0_addr_read_35_reg_744;
reg   [31:0] gmem0_addr_read_35_reg_744_pp0_iter1_reg;
reg   [31:0] gmem0_addr_read_35_reg_744_pp0_iter2_reg;
reg   [31:0] gmem0_addr_read_36_reg_749;
reg   [31:0] gmem0_addr_read_36_reg_749_pp0_iter1_reg;
reg   [31:0] gmem0_addr_read_36_reg_749_pp0_iter2_reg;
wire   [31:0] bitcast_ln486_9_fu_333_p1;
reg   [31:0] gmem0_addr_read_37_reg_759;
reg   [31:0] gmem0_addr_read_37_reg_759_pp0_iter1_reg;
reg   [31:0] gmem0_addr_read_37_reg_759_pp0_iter2_reg;
reg   [31:0] gmem0_addr_read_38_reg_764;
reg   [31:0] gmem0_addr_read_38_reg_764_pp0_iter1_reg;
reg   [31:0] gmem0_addr_read_38_reg_764_pp0_iter2_reg;
reg   [31:0] gmem0_addr_read_39_reg_769;
reg   [31:0] gmem0_addr_read_39_reg_769_pp0_iter1_reg;
reg   [31:0] gmem0_addr_read_39_reg_769_pp0_iter2_reg;
reg   [31:0] gmem0_addr_read_40_reg_774;
reg   [31:0] gmem0_addr_read_40_reg_774_pp0_iter2_reg;
reg   [31:0] gmem0_addr_read_40_reg_774_pp0_iter3_reg;
wire   [31:0] bitcast_ln486_10_fu_338_p1;
reg   [31:0] gmem0_addr_read_41_reg_784;
reg   [31:0] gmem0_addr_read_41_reg_784_pp0_iter2_reg;
reg   [31:0] gmem0_addr_read_41_reg_784_pp0_iter3_reg;
reg   [31:0] gmem0_addr_read_42_reg_789;
reg   [31:0] gmem0_addr_read_42_reg_789_pp0_iter2_reg;
reg   [31:0] gmem0_addr_read_42_reg_789_pp0_iter3_reg;
reg   [31:0] gmem0_addr_read_43_reg_794;
reg   [31:0] gmem0_addr_read_43_reg_794_pp0_iter2_reg;
reg   [31:0] gmem0_addr_read_43_reg_794_pp0_iter3_reg;
reg   [31:0] gmem0_addr_read_44_reg_799;
reg   [31:0] gmem0_addr_read_44_reg_799_pp0_iter2_reg;
reg   [31:0] gmem0_addr_read_44_reg_799_pp0_iter3_reg;
wire   [31:0] bitcast_ln486_11_fu_342_p1;
reg   [31:0] gmem0_addr_read_45_reg_809;
reg   [31:0] gmem0_addr_read_45_reg_809_pp0_iter2_reg;
reg   [31:0] gmem0_addr_read_45_reg_809_pp0_iter3_reg;
reg   [31:0] gmem0_addr_read_46_reg_814;
reg   [31:0] gmem0_addr_read_46_reg_814_pp0_iter2_reg;
reg   [31:0] gmem0_addr_read_46_reg_814_pp0_iter3_reg;
reg   [31:0] gmem0_addr_read_47_reg_819;
reg   [31:0] gmem0_addr_read_47_reg_819_pp0_iter2_reg;
reg   [31:0] gmem0_addr_read_47_reg_819_pp0_iter3_reg;
reg   [31:0] gmem0_addr_read_48_reg_824;
reg   [31:0] gmem0_addr_read_48_reg_824_pp0_iter2_reg;
reg   [31:0] gmem0_addr_read_48_reg_824_pp0_iter3_reg;
wire   [31:0] bitcast_ln486_12_fu_346_p1;
wire   [31:0] bitcast_ln486_13_fu_350_p1;
wire   [31:0] bitcast_ln486_14_fu_354_p1;
wire   [31:0] bitcast_ln486_15_fu_358_p1;
wire   [31:0] bitcast_ln486_16_fu_362_p1;
wire   [31:0] bitcast_ln486_17_fu_366_p1;
wire   [31:0] bitcast_ln486_18_fu_370_p1;
wire   [31:0] bitcast_ln486_19_fu_374_p1;
wire   [31:0] bitcast_ln486_20_fu_378_p1;
wire   [31:0] bitcast_ln486_21_fu_382_p1;
wire   [31:0] bitcast_ln486_22_fu_386_p1;
wire   [31:0] bitcast_ln486_23_fu_390_p1;
wire   [31:0] bitcast_ln486_24_fu_394_p1;
wire   [31:0] bitcast_ln486_25_fu_398_p1;
wire   [31:0] bitcast_ln486_26_fu_402_p1;
wire   [31:0] bitcast_ln486_27_fu_406_p1;
wire   [31:0] bitcast_ln486_28_fu_410_p1;
wire   [31:0] bitcast_ln486_29_fu_414_p1;
wire   [31:0] bitcast_ln486_30_fu_418_p1;
wire   [31:0] bitcast_ln486_31_fu_422_p1;
wire   [31:0] bitcast_ln486_32_fu_426_p1;
wire   [31:0] bitcast_ln486_33_fu_430_p1;
wire   [31:0] bitcast_ln486_34_fu_434_p1;
wire   [31:0] bitcast_ln486_35_fu_438_p1;
wire   [31:0] bitcast_ln486_36_fu_442_p1;
wire   [31:0] bitcast_ln486_37_fu_446_p1;
wire   [31:0] bitcast_ln486_38_fu_450_p1;
wire   [31:0] bitcast_ln486_39_fu_454_p1;
wire   [31:0] bitcast_ln486_40_fu_458_p1;
wire   [31:0] bitcast_ln486_41_fu_462_p1;
wire   [31:0] bitcast_ln486_42_fu_466_p1;
wire   [31:0] bitcast_ln486_43_fu_470_p1;
wire   [31:0] bitcast_ln486_44_fu_474_p1;
wire   [31:0] bitcast_ln486_45_fu_478_p1;
wire   [31:0] bitcast_ln486_46_fu_482_p1;
wire   [31:0] bitcast_ln486_47_fu_486_p1;
wire   [31:0] bitcast_ln486_48_fu_490_p1;
reg   [31:0] sum_48_reg_1014;
wire   [31:0] grp_fu_133_p2;
reg   [31:0] div_reg_1019;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage24_subdone;
wire  signed [63:0] sext_ln486_fu_231_p1;
wire  signed [63:0] sext_ln489_fu_273_p1;
reg    ap_block_pp0_stage19_01001;
reg   [31:0] phi_mul_fu_68;
wire   [31:0] next_mul_fu_193_p2;
wire    ap_loop_init;
reg   [31:0] f_fu_72;
wire   [31:0] add_ln477_fu_184_p2;
reg   [31:0] grp_fu_128_p0;
reg   [31:0] grp_fu_128_p1;
wire   [31:0] empty_fu_199_p2;
wire   [33:0] tmp_fu_204_p3;
wire   [63:0] p_cast1_fu_212_p1;
wire   [63:0] empty_80_fu_216_p2;
wire   [61:0] trunc_ln_fu_221_p4;
wire   [31:0] add_ln489_fu_241_p2;
wire   [33:0] shl_ln_fu_246_p3;
wire   [63:0] zext_ln489_fu_254_p1;
wire   [63:0] add_ln489_1_fu_258_p2;
wire   [61:0] trunc_ln2_fu_263_p4;
reg    ap_block_pp0_stage10_00001;
reg    ap_block_pp0_stage14_00001;
reg    ap_block_pp0_stage18_00001;
reg    ap_block_pp0_stage22_00001;
reg    ap_block_pp0_stage26_00001;
reg    ap_block_pp0_stage30_00001;
reg    ap_block_pp0_stage34_00001;
reg    ap_block_pp0_stage38_00001;
reg    ap_block_pp0_stage42_00001;
reg    ap_block_pp0_stage46_00001;
reg    ap_block_pp0_stage1_00001;
reg    ap_block_pp0_stage5_00001;
reg    ap_block_pp0_stage9_00001;
reg    ap_block_pp0_stage13_00001;
reg    ap_block_pp0_stage17_00001;
reg    ap_block_pp0_stage21_00001;
reg    ap_block_pp0_stage25_00001;
reg    ap_block_pp0_stage29_00001;
reg    ap_block_pp0_stage33_00001;
reg    ap_block_pp0_stage37_00001;
reg    ap_block_pp0_stage41_00001;
reg    ap_block_pp0_stage45_00001;
reg    ap_block_pp0_stage0_00001;
reg    ap_block_pp0_stage4_00001;
reg    ap_block_pp0_stage8_00001;
reg    ap_block_pp0_stage12_00001;
reg    ap_block_pp0_stage16_00001;
reg    ap_block_pp0_stage20_00001;
reg    ap_block_pp0_stage24_00001;
reg    ap_block_pp0_stage28_00001;
reg    ap_block_pp0_stage32_00001;
reg    ap_block_pp0_stage36_00001;
reg    ap_block_pp0_stage40_00001;
reg    ap_block_pp0_stage44_00001;
reg    ap_block_pp0_stage48_00001;
reg    ap_block_pp0_stage3_00001;
reg    ap_block_pp0_stage7_00001;
reg    ap_block_pp0_stage11_00001;
reg    ap_block_pp0_stage15_00001;
reg    ap_block_pp0_stage19_00001;
reg    ap_block_pp0_stage23_00001;
reg    ap_block_pp0_stage27_00001;
reg    ap_block_pp0_stage31_00001;
reg    ap_block_pp0_stage35_00001;
reg    ap_block_pp0_stage39_00001;
reg    ap_block_pp0_stage43_00001;
reg    ap_block_pp0_stage47_00001;
reg    ap_block_pp0_stage2_00001;
reg    ap_block_pp0_stage6_00001;
reg    grp_fu_128_ce;
reg    grp_fu_133_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter3_stage24;
reg    ap_idle_pp0_0to2;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg   [48:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to4;
reg    ap_done_pending_pp0;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage8_subdone;
reg    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage10_subdone;
reg    ap_block_pp0_stage11_subdone;
reg    ap_block_pp0_stage12_subdone;
reg    ap_block_pp0_stage13_subdone;
reg    ap_block_pp0_stage14_subdone;
reg    ap_block_pp0_stage15_subdone;
reg    ap_block_pp0_stage16_subdone;
reg    ap_block_pp0_stage17_subdone;
reg    ap_block_pp0_stage18_subdone;
reg    ap_block_pp0_stage19_subdone;
reg    ap_block_pp0_stage20_subdone;
reg    ap_block_pp0_stage21_subdone;
reg    ap_block_pp0_stage22_subdone;
reg    ap_block_pp0_stage23_subdone;
reg    ap_block_pp0_stage25_subdone;
reg    ap_block_pp0_stage26_subdone;
reg    ap_block_pp0_stage27_subdone;
reg    ap_block_pp0_stage28_subdone;
reg    ap_block_pp0_stage29_subdone;
reg    ap_block_pp0_stage30_subdone;
reg    ap_block_pp0_stage31_subdone;
reg    ap_block_pp0_stage32_subdone;
reg    ap_block_pp0_stage33_subdone;
reg    ap_block_pp0_stage34_subdone;
reg    ap_block_pp0_stage35_subdone;
reg    ap_block_pp0_stage36_subdone;
reg    ap_block_pp0_stage37_subdone;
reg    ap_block_pp0_stage38_subdone;
reg    ap_block_pp0_stage39_subdone;
reg    ap_block_pp0_stage40_subdone;
reg    ap_block_pp0_stage41_subdone;
reg    ap_block_pp0_stage42_subdone;
reg    ap_block_pp0_stage43_subdone;
reg    ap_block_pp0_stage44_subdone;
reg    ap_block_pp0_stage45_subdone;
reg    ap_block_pp0_stage46_subdone;
reg    ap_block_pp0_stage47_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 49'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

conv_kernel_fdiv_32ns_32ns_32_9_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_9_no_dsp_1_U392(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_48_reg_1014),
    .din1(32'd1111752704),
    .ce(grp_fu_133_ce),
    .dout(grp_fu_133_p2)
);

conv_kernel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage48),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage48)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage48) & (1'b0 == ap_block_pp0_stage48_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage48) & (1'b0 == ap_block_pp0_stage48_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage48) & (1'b0 == ap_block_pp0_stage48_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_subdone))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage48) & (1'b0 == ap_block_pp0_stage48_subdone))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to2 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter3_stage24))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage48) & (1'b0 == ap_block_pp0_stage48_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to2 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter3_stage24))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage48) & (1'b0 == ap_block_pp0_stage48_11001))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to2 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter3_stage24))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage48) & (1'b0 == ap_block_pp0_stage48_11001))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        f_fu_72 <= 32'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln477_fu_179_p2 == 1'd0))) begin
        f_fu_72 <= add_ln477_fu_184_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        phi_mul_fu_68 <= 32'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln477_fu_179_p2 == 1'd0))) begin
        phi_mul_fu_68 <= next_mul_fu_193_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001))) begin
        div_reg_1019 <= grp_fu_133_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln477_fu_179_p2 == 1'd0))) begin
        gmem0_addr_19_reg_543 <= sext_ln489_fu_273_p1;
        gmem0_addr_reg_537 <= sext_ln486_fu_231_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        gmem0_addr_19_reg_543_pp0_iter1_reg <= gmem0_addr_19_reg_543;
        gmem0_addr_19_reg_543_pp0_iter2_reg <= gmem0_addr_19_reg_543_pp0_iter1_reg;
        gmem0_addr_19_reg_543_pp0_iter3_reg <= gmem0_addr_19_reg_543_pp0_iter2_reg;
        gmem0_addr_19_reg_543_pp0_iter4_reg <= gmem0_addr_19_reg_543_pp0_iter3_reg;
        gmem0_addr_read_41_reg_784_pp0_iter2_reg <= gmem0_addr_read_41_reg_784;
        gmem0_addr_read_41_reg_784_pp0_iter3_reg <= gmem0_addr_read_41_reg_784_pp0_iter2_reg;
        icmp_ln477_reg_533 <= icmp_ln477_fu_179_p2;
        icmp_ln477_reg_533_pp0_iter1_reg <= icmp_ln477_reg_533;
        icmp_ln477_reg_533_pp0_iter2_reg <= icmp_ln477_reg_533_pp0_iter1_reg;
        icmp_ln477_reg_533_pp0_iter3_reg <= icmp_ln477_reg_533_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001) & (icmp_ln477_reg_533 == 1'd0))) begin
        gmem0_addr_read_10_reg_589 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001) & (icmp_ln477_reg_533 == 1'd0))) begin
        gmem0_addr_read_11_reg_594 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001) & (icmp_ln477_reg_533 == 1'd0))) begin
        gmem0_addr_read_12_reg_599 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001) & (icmp_ln477_reg_533 == 1'd0))) begin
        gmem0_addr_read_13_reg_609 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001) & (icmp_ln477_reg_533 == 1'd0))) begin
        gmem0_addr_read_14_reg_614 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001) & (icmp_ln477_reg_533 == 1'd0))) begin
        gmem0_addr_read_15_reg_619 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_11001) & (icmp_ln477_reg_533 == 1'd0))) begin
        gmem0_addr_read_16_reg_624 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26_11001) & (icmp_ln477_reg_533 == 1'd0))) begin
        gmem0_addr_read_17_reg_634 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26_11001))) begin
        gmem0_addr_read_17_reg_634_pp0_iter1_reg <= gmem0_addr_read_17_reg_634;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27_11001) & (icmp_ln477_reg_533 == 1'd0))) begin
        gmem0_addr_read_18_reg_639 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27_11001))) begin
        gmem0_addr_read_18_reg_639_pp0_iter1_reg <= gmem0_addr_read_18_reg_639;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28) & (1'b0 == ap_block_pp0_stage28_11001) & (icmp_ln477_reg_533 == 1'd0))) begin
        gmem0_addr_read_19_reg_644 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage28) & (1'b0 == ap_block_pp0_stage28_11001))) begin
        gmem0_addr_read_19_reg_644_pp0_iter1_reg <= gmem0_addr_read_19_reg_644;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage29) & (1'b0 == ap_block_pp0_stage29_11001) & (icmp_ln477_reg_533 == 1'd0))) begin
        gmem0_addr_read_20_reg_649 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage29) & (1'b0 == ap_block_pp0_stage29_11001))) begin
        gmem0_addr_read_20_reg_649_pp0_iter1_reg <= gmem0_addr_read_20_reg_649;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30_11001) & (icmp_ln477_reg_533 == 1'd0))) begin
        gmem0_addr_read_21_reg_659 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30_11001))) begin
        gmem0_addr_read_21_reg_659_pp0_iter1_reg <= gmem0_addr_read_21_reg_659;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31_11001) & (icmp_ln477_reg_533 == 1'd0))) begin
        gmem0_addr_read_22_reg_664 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31_11001))) begin
        gmem0_addr_read_22_reg_664_pp0_iter1_reg <= gmem0_addr_read_22_reg_664;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage32) & (1'b0 == ap_block_pp0_stage32_11001) & (icmp_ln477_reg_533 == 1'd0))) begin
        gmem0_addr_read_23_reg_669 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage32) & (1'b0 == ap_block_pp0_stage32_11001))) begin
        gmem0_addr_read_23_reg_669_pp0_iter1_reg <= gmem0_addr_read_23_reg_669;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage33) & (1'b0 == ap_block_pp0_stage33_11001) & (icmp_ln477_reg_533 == 1'd0))) begin
        gmem0_addr_read_24_reg_674 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage33) & (1'b0 == ap_block_pp0_stage33_11001))) begin
        gmem0_addr_read_24_reg_674_pp0_iter1_reg <= gmem0_addr_read_24_reg_674;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage34) & (1'b0 == ap_block_pp0_stage34_11001) & (icmp_ln477_reg_533 == 1'd0))) begin
        gmem0_addr_read_25_reg_684 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage34) & (1'b0 == ap_block_pp0_stage34_11001))) begin
        gmem0_addr_read_25_reg_684_pp0_iter1_reg <= gmem0_addr_read_25_reg_684;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage35) & (1'b0 == ap_block_pp0_stage35_11001) & (icmp_ln477_reg_533 == 1'd0))) begin
        gmem0_addr_read_26_reg_689 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage35) & (1'b0 == ap_block_pp0_stage35_11001))) begin
        gmem0_addr_read_26_reg_689_pp0_iter1_reg <= gmem0_addr_read_26_reg_689;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage36) & (1'b0 == ap_block_pp0_stage36_11001) & (icmp_ln477_reg_533 == 1'd0))) begin
        gmem0_addr_read_27_reg_694 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage36) & (1'b0 == ap_block_pp0_stage36_11001))) begin
        gmem0_addr_read_27_reg_694_pp0_iter1_reg <= gmem0_addr_read_27_reg_694;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage37) & (1'b0 == ap_block_pp0_stage37_11001) & (icmp_ln477_reg_533 == 1'd0))) begin
        gmem0_addr_read_28_reg_699 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage37) & (1'b0 == ap_block_pp0_stage37_11001))) begin
        gmem0_addr_read_28_reg_699_pp0_iter1_reg <= gmem0_addr_read_28_reg_699;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage38) & (1'b0 == ap_block_pp0_stage38_11001) & (icmp_ln477_reg_533 == 1'd0))) begin
        gmem0_addr_read_29_reg_709 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage38) & (1'b0 == ap_block_pp0_stage38_11001))) begin
        gmem0_addr_read_29_reg_709_pp0_iter1_reg <= gmem0_addr_read_29_reg_709;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage39) & (1'b0 == ap_block_pp0_stage39_11001) & (icmp_ln477_reg_533 == 1'd0))) begin
        gmem0_addr_read_30_reg_714 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage39) & (1'b0 == ap_block_pp0_stage39_11001))) begin
        gmem0_addr_read_30_reg_714_pp0_iter1_reg <= gmem0_addr_read_30_reg_714;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage40) & (1'b0 == ap_block_pp0_stage40_11001) & (icmp_ln477_reg_533 == 1'd0))) begin
        gmem0_addr_read_31_reg_719 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage40) & (1'b0 == ap_block_pp0_stage40_11001))) begin
        gmem0_addr_read_31_reg_719_pp0_iter1_reg <= gmem0_addr_read_31_reg_719;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage41) & (1'b0 == ap_block_pp0_stage41_11001) & (icmp_ln477_reg_533 == 1'd0))) begin
        gmem0_addr_read_32_reg_724 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage41) & (1'b0 == ap_block_pp0_stage41_11001))) begin
        gmem0_addr_read_32_reg_724_pp0_iter1_reg <= gmem0_addr_read_32_reg_724;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage42) & (1'b0 == ap_block_pp0_stage42_11001) & (icmp_ln477_reg_533 == 1'd0))) begin
        gmem0_addr_read_33_reg_734 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage42) & (1'b0 == ap_block_pp0_stage42_11001))) begin
        gmem0_addr_read_33_reg_734_pp0_iter1_reg <= gmem0_addr_read_33_reg_734;
        gmem0_addr_read_33_reg_734_pp0_iter2_reg <= gmem0_addr_read_33_reg_734_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage43) & (1'b0 == ap_block_pp0_stage43_11001) & (icmp_ln477_reg_533 == 1'd0))) begin
        gmem0_addr_read_34_reg_739 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage43) & (1'b0 == ap_block_pp0_stage43_11001))) begin
        gmem0_addr_read_34_reg_739_pp0_iter1_reg <= gmem0_addr_read_34_reg_739;
        gmem0_addr_read_34_reg_739_pp0_iter2_reg <= gmem0_addr_read_34_reg_739_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage44) & (1'b0 == ap_block_pp0_stage44_11001) & (icmp_ln477_reg_533 == 1'd0))) begin
        gmem0_addr_read_35_reg_744 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage44) & (1'b0 == ap_block_pp0_stage44_11001))) begin
        gmem0_addr_read_35_reg_744_pp0_iter1_reg <= gmem0_addr_read_35_reg_744;
        gmem0_addr_read_35_reg_744_pp0_iter2_reg <= gmem0_addr_read_35_reg_744_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage45) & (1'b0 == ap_block_pp0_stage45_11001) & (icmp_ln477_reg_533 == 1'd0))) begin
        gmem0_addr_read_36_reg_749 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage45) & (1'b0 == ap_block_pp0_stage45_11001))) begin
        gmem0_addr_read_36_reg_749_pp0_iter1_reg <= gmem0_addr_read_36_reg_749;
        gmem0_addr_read_36_reg_749_pp0_iter2_reg <= gmem0_addr_read_36_reg_749_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage46) & (1'b0 == ap_block_pp0_stage46_11001) & (icmp_ln477_reg_533 == 1'd0))) begin
        gmem0_addr_read_37_reg_759 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage46) & (1'b0 == ap_block_pp0_stage46_11001))) begin
        gmem0_addr_read_37_reg_759_pp0_iter1_reg <= gmem0_addr_read_37_reg_759;
        gmem0_addr_read_37_reg_759_pp0_iter2_reg <= gmem0_addr_read_37_reg_759_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage47) & (1'b0 == ap_block_pp0_stage47_11001) & (icmp_ln477_reg_533 == 1'd0))) begin
        gmem0_addr_read_38_reg_764 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage47) & (1'b0 == ap_block_pp0_stage47_11001))) begin
        gmem0_addr_read_38_reg_764_pp0_iter1_reg <= gmem0_addr_read_38_reg_764;
        gmem0_addr_read_38_reg_764_pp0_iter2_reg <= gmem0_addr_read_38_reg_764_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage48) & (1'b0 == ap_block_pp0_stage48_11001) & (icmp_ln477_reg_533 == 1'd0))) begin
        gmem0_addr_read_39_reg_769 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage48) & (1'b0 == ap_block_pp0_stage48_11001))) begin
        gmem0_addr_read_39_reg_769_pp0_iter1_reg <= gmem0_addr_read_39_reg_769;
        gmem0_addr_read_39_reg_769_pp0_iter2_reg <= gmem0_addr_read_39_reg_769_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (icmp_ln477_reg_533 == 1'd0))) begin
        gmem0_addr_read_3_reg_554 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln477_reg_533 == 1'd0))) begin
        gmem0_addr_read_40_reg_774 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        gmem0_addr_read_40_reg_774_pp0_iter2_reg <= gmem0_addr_read_40_reg_774;
        gmem0_addr_read_40_reg_774_pp0_iter3_reg <= gmem0_addr_read_40_reg_774_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        gmem0_addr_read_41_reg_784 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        gmem0_addr_read_42_reg_789 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        gmem0_addr_read_42_reg_789_pp0_iter2_reg <= gmem0_addr_read_42_reg_789;
        gmem0_addr_read_42_reg_789_pp0_iter3_reg <= gmem0_addr_read_42_reg_789_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        gmem0_addr_read_43_reg_794 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        gmem0_addr_read_43_reg_794_pp0_iter2_reg <= gmem0_addr_read_43_reg_794;
        gmem0_addr_read_43_reg_794_pp0_iter3_reg <= gmem0_addr_read_43_reg_794_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        gmem0_addr_read_44_reg_799 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        gmem0_addr_read_44_reg_799_pp0_iter2_reg <= gmem0_addr_read_44_reg_799;
        gmem0_addr_read_44_reg_799_pp0_iter3_reg <= gmem0_addr_read_44_reg_799_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        gmem0_addr_read_45_reg_809 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        gmem0_addr_read_45_reg_809_pp0_iter2_reg <= gmem0_addr_read_45_reg_809;
        gmem0_addr_read_45_reg_809_pp0_iter3_reg <= gmem0_addr_read_45_reg_809_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        gmem0_addr_read_46_reg_814 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        gmem0_addr_read_46_reg_814_pp0_iter2_reg <= gmem0_addr_read_46_reg_814;
        gmem0_addr_read_46_reg_814_pp0_iter3_reg <= gmem0_addr_read_46_reg_814_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        gmem0_addr_read_47_reg_819 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        gmem0_addr_read_47_reg_819_pp0_iter2_reg <= gmem0_addr_read_47_reg_819;
        gmem0_addr_read_47_reg_819_pp0_iter3_reg <= gmem0_addr_read_47_reg_819_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        gmem0_addr_read_48_reg_824 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        gmem0_addr_read_48_reg_824_pp0_iter2_reg <= gmem0_addr_read_48_reg_824;
        gmem0_addr_read_48_reg_824_pp0_iter3_reg <= gmem0_addr_read_48_reg_824_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (icmp_ln477_reg_533 == 1'd0))) begin
        gmem0_addr_read_4_reg_559 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (icmp_ln477_reg_533 == 1'd0))) begin
        gmem0_addr_read_6_reg_569 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001) & (icmp_ln477_reg_533 == 1'd0))) begin
        gmem0_addr_read_7_reg_574 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001) & (icmp_ln477_reg_533 == 1'd0))) begin
        gmem0_addr_read_8_reg_579 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln477_reg_533 == 1'd0)))) begin
        reg_138 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln477_reg_533 == 1'd0)))) begin
        reg_142 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage45) & (1'b0 == ap_block_pp0_stage45_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage41) & (1'b0 == ap_block_pp0_stage41_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage37) & (1'b0 == ap_block_pp0_stage37_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage33) & (1'b0 == ap_block_pp0_stage33_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage29) & (1'b0 == ap_block_pp0_stage29_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (icmp_ln477_reg_533 == 1'd0)))) begin
        reg_146 <= grp_fu_106_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage48) & (1'b0 == ap_block_pp0_stage48_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage44) & (1'b0 == ap_block_pp0_stage44_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage40) & (1'b0 == ap_block_pp0_stage40_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage36) & (1'b0 == ap_block_pp0_stage36_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage32) & (1'b0 == ap_block_pp0_stage32_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28) & (1'b0 == ap_block_pp0_stage28_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        reg_151 <= grp_fu_106_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage47) & (1'b0 == ap_block_pp0_stage47_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage43) & (1'b0 == ap_block_pp0_stage43_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage39) & (1'b0 == ap_block_pp0_stage39_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage35) & (1'b0 == ap_block_pp0_stage35_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001)))) begin
        reg_156 <= grp_fu_106_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage46) & (1'b0 == ap_block_pp0_stage46_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage42) & (1'b0 == ap_block_pp0_stage42_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage38) & (1'b0 == ap_block_pp0_stage38_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage34) & (1'b0 == ap_block_pp0_stage34_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)))) begin
        reg_161 <= grp_fu_106_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001))) begin
        sum_48_reg_1014 <= grp_fu_106_p_dout0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage48) & (1'b0 == ap_block_pp0_stage48_subdone) & (icmp_ln477_reg_533 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage48 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage48 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_subdone) & (icmp_ln477_reg_533_pp0_iter3_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter3_stage24 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter3_stage24 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter3_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (~((ap_loop_exit_ready_pp0_iter3_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0) & (ap_loop_exit_ready == 1'b0))) begin
        ap_done_pending_pp0 = 1'b1;
    end else begin
        ap_done_pending_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to4 = 1'b1;
    end else begin
        ap_idle_pp0_1to4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage48) & (1'b0 == ap_block_pp0_stage48_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (icmp_ln477_reg_533 == 1'd0))) begin
        gmem0_blk_n_AR = m_axi_gmem0_ARREADY;
    end else begin
        gmem0_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18))) begin
        gmem0_blk_n_AW = m_axi_gmem0_AWREADY;
    end else begin
        gmem0_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24))) begin
        gmem0_blk_n_B = m_axi_gmem0_BVALID;
    end else begin
        gmem0_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage48) & (1'b0 == ap_block_pp0_stage48) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage47) & (1'b0 == ap_block_pp0_stage47) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage46) & (1'b0 == ap_block_pp0_stage46) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage45) & (1'b0 == ap_block_pp0_stage45) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage44) & (1'b0 == ap_block_pp0_stage44) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage43) & (1'b0 == ap_block_pp0_stage43) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage42) & (1'b0 == ap_block_pp0_stage42) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage41) & (1'b0 == ap_block_pp0_stage41) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage40) & (1'b0 == ap_block_pp0_stage40) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage39) & (1'b0 == ap_block_pp0_stage39) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage38) & (1'b0 == ap_block_pp0_stage38) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage37) & (1'b0 == ap_block_pp0_stage37) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage36) & (1'b0 == ap_block_pp0_stage36) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage35) & (1'b0 == ap_block_pp0_stage35) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage34) & (1'b0 == ap_block_pp0_stage34) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage33) & (1'b0 == ap_block_pp0_stage33) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage32) & (1'b0 == ap_block_pp0_stage32) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage29) & (1'b0 == ap_block_pp0_stage29) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28) & (1'b0 == ap_block_pp0_stage28) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9) & (icmp_ln477_reg_533 == 1'd0)))) begin
        gmem0_blk_n_R = m_axi_gmem0_RVALID;
    end else begin
        gmem0_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19))) begin
        gmem0_blk_n_W = m_axi_gmem0_WREADY;
    end else begin
        gmem0_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage48) & (1'b0 == ap_block_pp0_stage48_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage47) & (1'b0 == ap_block_pp0_stage47_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage46) & (1'b0 == ap_block_pp0_stage46_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage45) & (1'b0 == ap_block_pp0_stage45_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage44) & (1'b0 == ap_block_pp0_stage44_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage43) & (1'b0 == ap_block_pp0_stage43_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage42) & (1'b0 == ap_block_pp0_stage42_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage41) & (1'b0 == ap_block_pp0_stage41_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage40) & (1'b0 == ap_block_pp0_stage40_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage39) & (1'b0 == ap_block_pp0_stage39_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage38) & (1'b0 == ap_block_pp0_stage38_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage37) & (1'b0 == ap_block_pp0_stage37_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage36) & (1'b0 == ap_block_pp0_stage36_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage35) & (1'b0 == ap_block_pp0_stage35_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage34) & (1'b0 == ap_block_pp0_stage34_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage33) & (1'b0 == ap_block_pp0_stage33_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage32) & (1'b0 == ap_block_pp0_stage32_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage29) & (1'b0 == ap_block_pp0_stage29_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage28) & (1'b0 == ap_block_pp0_stage28_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        grp_fu_128_ce = 1'b1;
    end else begin
        grp_fu_128_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage47) & (1'b0 == ap_block_pp0_stage47)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage43) & (1'b0 == ap_block_pp0_stage43)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage39) & (1'b0 == ap_block_pp0_stage39)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage35) & (1'b0 == ap_block_pp0_stage35)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11)))) begin
        grp_fu_128_p0 = reg_161;
    end else if ((((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage48) & (1'b0 == ap_block_pp0_stage48)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage44) & (1'b0 == ap_block_pp0_stage44)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage40) & (1'b0 == ap_block_pp0_stage40)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage36) & (1'b0 == ap_block_pp0_stage36)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage32) & (1'b0 == ap_block_pp0_stage32)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28) & (1'b0 == ap_block_pp0_stage28)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12)))) begin
        grp_fu_128_p0 = reg_156;
    end else if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage45) & (1'b0 == ap_block_pp0_stage45)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage41) & (1'b0 == ap_block_pp0_stage41)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage37) & (1'b0 == ap_block_pp0_stage37)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage33) & (1'b0 == ap_block_pp0_stage33)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage29) & (1'b0 == ap_block_pp0_stage29)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        grp_fu_128_p0 = reg_151;
    end else if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage46) & (1'b0 == ap_block_pp0_stage46)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage42) & (1'b0 == ap_block_pp0_stage42)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage38) & (1'b0 == ap_block_pp0_stage38)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage34) & (1'b0 == ap_block_pp0_stage34)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14)))) begin
        grp_fu_128_p0 = reg_146;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10))) begin
        grp_fu_128_p0 = bitcast_ln486_fu_293_p1;
    end else begin
        grp_fu_128_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6))) begin
        grp_fu_128_p1 = bitcast_ln486_48_fu_490_p1;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        grp_fu_128_p1 = bitcast_ln486_47_fu_486_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage47) & (1'b0 == ap_block_pp0_stage47))) begin
        grp_fu_128_p1 = bitcast_ln486_46_fu_482_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage43) & (1'b0 == ap_block_pp0_stage43))) begin
        grp_fu_128_p1 = bitcast_ln486_45_fu_478_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage39) & (1'b0 == ap_block_pp0_stage39))) begin
        grp_fu_128_p1 = bitcast_ln486_44_fu_474_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage35) & (1'b0 == ap_block_pp0_stage35))) begin
        grp_fu_128_p1 = bitcast_ln486_43_fu_470_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31))) begin
        grp_fu_128_p1 = bitcast_ln486_42_fu_466_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27))) begin
        grp_fu_128_p1 = bitcast_ln486_41_fu_462_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23))) begin
        grp_fu_128_p1 = bitcast_ln486_40_fu_458_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19))) begin
        grp_fu_128_p1 = bitcast_ln486_39_fu_454_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15))) begin
        grp_fu_128_p1 = bitcast_ln486_38_fu_450_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11))) begin
        grp_fu_128_p1 = bitcast_ln486_37_fu_446_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7))) begin
        grp_fu_128_p1 = bitcast_ln486_36_fu_442_p1;
    end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        grp_fu_128_p1 = bitcast_ln486_35_fu_438_p1;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage48) & (1'b0 == ap_block_pp0_stage48))) begin
        grp_fu_128_p1 = bitcast_ln486_34_fu_434_p1;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage44) & (1'b0 == ap_block_pp0_stage44))) begin
        grp_fu_128_p1 = bitcast_ln486_33_fu_430_p1;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage40) & (1'b0 == ap_block_pp0_stage40))) begin
        grp_fu_128_p1 = bitcast_ln486_32_fu_426_p1;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage36) & (1'b0 == ap_block_pp0_stage36))) begin
        grp_fu_128_p1 = bitcast_ln486_31_fu_422_p1;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage32) & (1'b0 == ap_block_pp0_stage32))) begin
        grp_fu_128_p1 = bitcast_ln486_30_fu_418_p1;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28) & (1'b0 == ap_block_pp0_stage28))) begin
        grp_fu_128_p1 = bitcast_ln486_29_fu_414_p1;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24))) begin
        grp_fu_128_p1 = bitcast_ln486_28_fu_410_p1;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20))) begin
        grp_fu_128_p1 = bitcast_ln486_27_fu_406_p1;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16))) begin
        grp_fu_128_p1 = bitcast_ln486_26_fu_402_p1;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12))) begin
        grp_fu_128_p1 = bitcast_ln486_25_fu_398_p1;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8))) begin
        grp_fu_128_p1 = bitcast_ln486_24_fu_394_p1;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        grp_fu_128_p1 = bitcast_ln486_23_fu_390_p1;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_128_p1 = bitcast_ln486_22_fu_386_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage45) & (1'b0 == ap_block_pp0_stage45))) begin
        grp_fu_128_p1 = bitcast_ln486_21_fu_382_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage41) & (1'b0 == ap_block_pp0_stage41))) begin
        grp_fu_128_p1 = bitcast_ln486_20_fu_378_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage37) & (1'b0 == ap_block_pp0_stage37))) begin
        grp_fu_128_p1 = bitcast_ln486_19_fu_374_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage33) & (1'b0 == ap_block_pp0_stage33))) begin
        grp_fu_128_p1 = bitcast_ln486_18_fu_370_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage29) & (1'b0 == ap_block_pp0_stage29))) begin
        grp_fu_128_p1 = bitcast_ln486_17_fu_366_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25))) begin
        grp_fu_128_p1 = bitcast_ln486_16_fu_362_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21))) begin
        grp_fu_128_p1 = bitcast_ln486_15_fu_358_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17))) begin
        grp_fu_128_p1 = bitcast_ln486_14_fu_354_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13))) begin
        grp_fu_128_p1 = bitcast_ln486_13_fu_350_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9))) begin
        grp_fu_128_p1 = bitcast_ln486_12_fu_346_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
        grp_fu_128_p1 = bitcast_ln486_11_fu_342_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        grp_fu_128_p1 = bitcast_ln486_10_fu_338_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage46) & (1'b0 == ap_block_pp0_stage46))) begin
        grp_fu_128_p1 = bitcast_ln486_9_fu_333_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage42) & (1'b0 == ap_block_pp0_stage42))) begin
        grp_fu_128_p1 = bitcast_ln486_8_fu_329_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage38) & (1'b0 == ap_block_pp0_stage38))) begin
        grp_fu_128_p1 = bitcast_ln486_7_fu_325_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage34) & (1'b0 == ap_block_pp0_stage34))) begin
        grp_fu_128_p1 = bitcast_ln486_6_fu_321_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30))) begin
        grp_fu_128_p1 = bitcast_ln486_5_fu_316_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26))) begin
        grp_fu_128_p1 = bitcast_ln486_4_fu_312_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22))) begin
        grp_fu_128_p1 = bitcast_ln486_3_fu_308_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18))) begin
        grp_fu_128_p1 = bitcast_ln486_2_fu_303_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14))) begin
        grp_fu_128_p1 = bitcast_ln486_1_fu_298_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10))) begin
        grp_fu_128_p1 = 32'd0;
    end else begin
        grp_fu_128_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)))) begin
        grp_fu_133_ce = 1'b1;
    end else begin
        grp_fu_133_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln477_reg_533 == 1'd0))) begin
        m_axi_gmem0_ARVALID = 1'b1;
    end else begin
        m_axi_gmem0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001))) begin
        m_axi_gmem0_AWVALID = 1'b1;
    end else begin
        m_axi_gmem0_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001))) begin
        m_axi_gmem0_BREADY = 1'b1;
    end else begin
        m_axi_gmem0_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage48) & (1'b0 == ap_block_pp0_stage48_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage47) & (1'b0 == ap_block_pp0_stage47_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage46) & (1'b0 == ap_block_pp0_stage46_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage45) & (1'b0 == ap_block_pp0_stage45_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage44) & (1'b0 == ap_block_pp0_stage44_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage43) & (1'b0 == ap_block_pp0_stage43_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage42) & (1'b0 == ap_block_pp0_stage42_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage41) & (1'b0 == ap_block_pp0_stage41_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage40) & (1'b0 == ap_block_pp0_stage40_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage39) & (1'b0 == ap_block_pp0_stage39_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage38) & (1'b0 == ap_block_pp0_stage38_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage37) & (1'b0 == ap_block_pp0_stage37_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage36) & (1'b0 == ap_block_pp0_stage36_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage35) & (1'b0 == ap_block_pp0_stage35_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage34) & (1'b0 == ap_block_pp0_stage34_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage33) & (1'b0 == ap_block_pp0_stage33_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage32) & (1'b0 == ap_block_pp0_stage32_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage29) & (1'b0 == ap_block_pp0_stage29_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28) & (1'b0 == ap_block_pp0_stage28_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001) & (icmp_ln477_reg_533 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln477_reg_533 == 1'd0)))) begin
        m_axi_gmem0_RREADY = 1'b1;
    end else begin
        m_axi_gmem0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001))) begin
        m_axi_gmem0_WVALID = 1'b1;
    end else begin
        m_axi_gmem0_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_done_pending_pp0 == 1'b0) & (ap_idle_pp0_1to4 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if (((ap_idle_pp0_0to2 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter3_stage24))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if ((1'b0 == ap_block_pp0_stage25_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        ap_ST_fsm_pp0_stage26 : begin
            if ((1'b0 == ap_block_pp0_stage26_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end
        end
        ap_ST_fsm_pp0_stage27 : begin
            if ((1'b0 == ap_block_pp0_stage27_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end
        end
        ap_ST_fsm_pp0_stage28 : begin
            if ((1'b0 == ap_block_pp0_stage28_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end
        end
        ap_ST_fsm_pp0_stage29 : begin
            if ((1'b0 == ap_block_pp0_stage29_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end
        end
        ap_ST_fsm_pp0_stage30 : begin
            if ((1'b0 == ap_block_pp0_stage30_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end
        end
        ap_ST_fsm_pp0_stage31 : begin
            if ((1'b0 == ap_block_pp0_stage31_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end
        end
        ap_ST_fsm_pp0_stage32 : begin
            if ((1'b0 == ap_block_pp0_stage32_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage32;
            end
        end
        ap_ST_fsm_pp0_stage33 : begin
            if ((1'b0 == ap_block_pp0_stage33_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage33;
            end
        end
        ap_ST_fsm_pp0_stage34 : begin
            if ((1'b0 == ap_block_pp0_stage34_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage34;
            end
        end
        ap_ST_fsm_pp0_stage35 : begin
            if ((1'b0 == ap_block_pp0_stage35_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage35;
            end
        end
        ap_ST_fsm_pp0_stage36 : begin
            if ((1'b0 == ap_block_pp0_stage36_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage36;
            end
        end
        ap_ST_fsm_pp0_stage37 : begin
            if ((1'b0 == ap_block_pp0_stage37_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage37;
            end
        end
        ap_ST_fsm_pp0_stage38 : begin
            if ((1'b0 == ap_block_pp0_stage38_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage38;
            end
        end
        ap_ST_fsm_pp0_stage39 : begin
            if ((1'b0 == ap_block_pp0_stage39_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage39;
            end
        end
        ap_ST_fsm_pp0_stage40 : begin
            if ((1'b0 == ap_block_pp0_stage40_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage40;
            end
        end
        ap_ST_fsm_pp0_stage41 : begin
            if ((1'b0 == ap_block_pp0_stage41_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage41;
            end
        end
        ap_ST_fsm_pp0_stage42 : begin
            if ((1'b0 == ap_block_pp0_stage42_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage42;
            end
        end
        ap_ST_fsm_pp0_stage43 : begin
            if ((1'b0 == ap_block_pp0_stage43_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage43;
            end
        end
        ap_ST_fsm_pp0_stage44 : begin
            if ((1'b0 == ap_block_pp0_stage44_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage44;
            end
        end
        ap_ST_fsm_pp0_stage45 : begin
            if ((1'b0 == ap_block_pp0_stage45_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage45;
            end
        end
        ap_ST_fsm_pp0_stage46 : begin
            if ((1'b0 == ap_block_pp0_stage46_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage46;
            end
        end
        ap_ST_fsm_pp0_stage47 : begin
            if ((1'b0 == ap_block_pp0_stage47_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage47;
            end
        end
        ap_ST_fsm_pp0_stage48 : begin
            if ((1'b0 == ap_block_pp0_stage48_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage48;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln477_fu_184_p2 = (f_fu_72 + 32'd1);

assign add_ln489_1_fu_258_p2 = (zext_ln489_fu_254_p1 + act_mem);

assign add_ln489_fu_241_p2 = (f_fu_72 + out_base_addr);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp0_stage24 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage25 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp0_stage26 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp0_stage27 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp0_stage28 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_pp0_stage29 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage30 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp0_stage31 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_pp0_stage32 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_pp0_stage33 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_pp0_stage34 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_pp0_stage35 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_pp0_stage36 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_pp0_stage37 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_pp0_stage38 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_pp0_stage39 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage40 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_pp0_stage41 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_pp0_stage42 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_pp0_stage43 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_pp0_stage44 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_pp0_stage45 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_pp0_stage46 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_pp0_stage47 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_pp0_stage48 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_00001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage10_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage11_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage12_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage13_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage13_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage14_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage14_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage15_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage16_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage16_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage16_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage17_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage17_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage17_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage18_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage18_11001 = (((m_axi_gmem0_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage18_subdone = (((m_axi_gmem0_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0)));
end

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage19_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage19_01001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage19_11001 = (((ap_enable_reg_pp0_iter4 == 1'b1) & (m_axi_gmem0_WREADY == 1'b0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage19_subdone = (((ap_enable_reg_pp0_iter4 == 1'b1) & (m_axi_gmem0_WREADY == 1'b0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage1_00001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage20_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage20_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage20_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_pp0_stage21 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage21_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage21_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage21_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_pp0_stage22 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage22_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage22_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage22_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_pp0_stage23 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage23_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage23_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage23_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_pp0_stage24 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage24_00001 = (((ap_enable_reg_pp0_iter4 == 1'b1) & (m_axi_gmem0_BVALID == 1'b0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage24_11001 = (((ap_enable_reg_pp0_iter4 == 1'b1) & (m_axi_gmem0_BVALID == 1'b0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage24_subdone = (((ap_enable_reg_pp0_iter4 == 1'b1) & (m_axi_gmem0_BVALID == 1'b0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0)));
end

assign ap_block_pp0_stage25 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage25_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage25_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage25_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_pp0_stage26 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage26_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage26_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage26_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_pp0_stage27 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage27_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage27_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage27_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_pp0_stage28 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage28_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage28_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage28_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_pp0_stage29 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage29_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage29_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage29_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage2_00001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem0_RVALID == 1'b0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io)));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem0_RVALID == 1'b0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_io)));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage30_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage30_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage30_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_pp0_stage31 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage31_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage31_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage31_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_pp0_stage32 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage32_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage32_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage32_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_pp0_stage33 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage33_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage33_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage33_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_pp0_stage34 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage34_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage34_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage34_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_pp0_stage35 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage35_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage35_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage35_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_pp0_stage36 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage36_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage36_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage36_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_pp0_stage37 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage37_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage37_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage37_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_pp0_stage38 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage38_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage38_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage38_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_pp0_stage39 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage39_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage39_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage39_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage3_00001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage40 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage40_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage40_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage40_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_pp0_stage41 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage41_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage41_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage41_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_pp0_stage42 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage42_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage42_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage42_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_pp0_stage43 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage43_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage43_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage43_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_pp0_stage44 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage44_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage44_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage44_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_pp0_stage45 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage45_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage45_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage45_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_pp0_stage46 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage46_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage46_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage46_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_pp0_stage47 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage47_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage47_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage47_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_pp0_stage48 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage48_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage48_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage48_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage4_00001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_00001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_00001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage6_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_00001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage7_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_00001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage8_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_00001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage9_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_state100_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state101_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state102_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state103_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state104_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state105_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state106_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state107_pp0_stage8_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state108_pp0_stage9_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state109_pp0_stage10_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state10_pp0_stage9_iter0 = ((icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_state110_pp0_stage11_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state111_pp0_stage12_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state112_pp0_stage13_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state113_pp0_stage14_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state114_pp0_stage15_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state115_pp0_stage16_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state116_pp0_stage17_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state117_pp0_stage18_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state118_pp0_stage19_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state119_pp0_stage20_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_pp0_stage10_iter0 = ((icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_state120_pp0_stage21_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state121_pp0_stage22_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state122_pp0_stage23_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state123_pp0_stage24_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state124_pp0_stage25_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state125_pp0_stage26_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state126_pp0_stage27_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state127_pp0_stage28_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state128_pp0_stage29_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state129_pp0_stage30_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state12_pp0_stage11_iter0 = ((icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_state130_pp0_stage31_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state131_pp0_stage32_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state132_pp0_stage33_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state133_pp0_stage34_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state134_pp0_stage35_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state135_pp0_stage36_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state136_pp0_stage37_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state137_pp0_stage38_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state138_pp0_stage39_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state139_pp0_stage40_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_pp0_stage12_iter0 = ((icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_state140_pp0_stage41_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state141_pp0_stage42_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state142_pp0_stage43_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state143_pp0_stage44_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state144_pp0_stage45_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state145_pp0_stage46_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state146_pp0_stage47_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state147_pp0_stage48_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state148_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state149_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_pp0_stage13_iter0 = ((icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_state150_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state151_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state152_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state153_pp0_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state154_pp0_stage6_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state155_pp0_stage7_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state156_pp0_stage8_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state157_pp0_stage9_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state158_pp0_stage10_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state159_pp0_stage11_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state15_pp0_stage14_iter0 = ((icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_state160_pp0_stage12_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state161_pp0_stage13_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state162_pp0_stage14_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state163_pp0_stage15_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state164_pp0_stage16_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state165_pp0_stage17_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state166_pp0_stage18_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state167_pp0_stage19_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state168_pp0_stage20_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state169_pp0_stage21_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state16_pp0_stage15_iter0 = ((icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_state170_pp0_stage22_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state171_pp0_stage23_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state172_pp0_stage24_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state173_pp0_stage25_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state174_pp0_stage26_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state175_pp0_stage27_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state176_pp0_stage28_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state177_pp0_stage29_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state178_pp0_stage30_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state179_pp0_stage31_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state17_pp0_stage16_iter0 = ((icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_state180_pp0_stage32_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state181_pp0_stage33_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state182_pp0_stage34_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state183_pp0_stage35_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state184_pp0_stage36_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state185_pp0_stage37_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state186_pp0_stage38_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state187_pp0_stage39_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state188_pp0_stage40_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state189_pp0_stage41_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state18_pp0_stage17_iter0 = ((icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_state190_pp0_stage42_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state191_pp0_stage43_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state192_pp0_stage44_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state193_pp0_stage45_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state194_pp0_stage46_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state195_pp0_stage47_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state196_pp0_stage48_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state197_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state198_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state199_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state19_pp0_stage18_iter0 = ((icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state200_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state201_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state202_pp0_stage5_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state203_pp0_stage6_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state204_pp0_stage7_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state205_pp0_stage8_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state206_pp0_stage9_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state207_pp0_stage10_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state208_pp0_stage11_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state209_pp0_stage12_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state20_pp0_stage19_iter0 = ((icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_state210_pp0_stage13_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state211_pp0_stage14_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state212_pp0_stage15_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state213_pp0_stage16_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state214_pp0_stage17_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state215_pp0_stage18_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state216_pp0_stage19_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state217_pp0_stage20_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state218_pp0_stage21_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state219_pp0_stage22_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state21_pp0_stage20_iter0 = ((icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_state220_pp0_stage23_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state221_pp0_stage24_iter4 = (m_axi_gmem0_BVALID == 1'b0);
end

always @ (*) begin
    ap_block_state22_pp0_stage21_iter0 = ((icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state23_pp0_stage22_iter0 = ((icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state24_pp0_stage23_iter0 = ((icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state25_pp0_stage24_iter0 = ((icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state26_pp0_stage25_iter0 = ((icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state27_pp0_stage26_iter0 = ((icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state28_pp0_stage27_iter0 = ((icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state29_pp0_stage28_iter0 = ((icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state30_pp0_stage29_iter0 = ((icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state31_pp0_stage30_iter0 = ((icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state32_pp0_stage31_iter0 = ((icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state33_pp0_stage32_iter0 = ((icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state34_pp0_stage33_iter0 = ((icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state35_pp0_stage34_iter0 = ((icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state36_pp0_stage35_iter0 = ((icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state37_pp0_stage36_iter0 = ((icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state38_pp0_stage37_iter0 = ((icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state39_pp0_stage38_iter0 = ((icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state3_io = ((icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_ARREADY == 1'b0));
end

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state40_pp0_stage39_iter0 = ((icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state41_pp0_stage40_iter0 = ((icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state42_pp0_stage41_iter0 = ((icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state43_pp0_stage42_iter0 = ((icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state44_pp0_stage43_iter0 = ((icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state45_pp0_stage44_iter0 = ((icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state46_pp0_stage45_iter0 = ((icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state47_pp0_stage46_iter0 = ((icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state48_pp0_stage47_iter0 = ((icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state49_pp0_stage48_iter0 = ((icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state50_pp0_stage0_iter1 = ((icmp_ln477_reg_533 == 1'd0) & (m_axi_gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state51_pp0_stage1_iter1 = (m_axi_gmem0_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state52_pp0_stage2_iter1 = (m_axi_gmem0_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state53_pp0_stage3_iter1 = (m_axi_gmem0_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state54_pp0_stage4_iter1 = (m_axi_gmem0_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state55_pp0_stage5_iter1 = (m_axi_gmem0_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state56_pp0_stage6_iter1 = (m_axi_gmem0_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state57_pp0_stage7_iter1 = (m_axi_gmem0_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state58_pp0_stage8_iter1 = (m_axi_gmem0_RVALID == 1'b0);
end

assign ap_block_state59_pp0_stage9_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage10_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage11_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage12_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage13_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage14_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage15_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage16_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage17_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage18_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage19_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage20_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage21_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage22_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage23_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage24_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage25_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp0_stage26_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp0_stage27_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp0_stage28_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp0_stage29_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp0_stage30_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp0_stage31_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp0_stage32_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp0_stage33_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp0_stage34_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp0_stage35_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp0_stage36_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp0_stage37_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp0_stage38_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp0_stage39_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp0_stage40_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp0_stage41_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp0_stage42_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp0_stage43_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp0_stage44_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state95_pp0_stage45_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state96_pp0_stage46_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state97_pp0_stage47_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state98_pp0_stage48_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state99_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage48;

assign bitcast_ln486_10_fu_338_p1 = gmem0_addr_read_10_reg_589;

assign bitcast_ln486_11_fu_342_p1 = gmem0_addr_read_11_reg_594;

assign bitcast_ln486_12_fu_346_p1 = gmem0_addr_read_12_reg_599;

assign bitcast_ln486_13_fu_350_p1 = gmem0_addr_read_13_reg_609;

assign bitcast_ln486_14_fu_354_p1 = gmem0_addr_read_14_reg_614;

assign bitcast_ln486_15_fu_358_p1 = gmem0_addr_read_15_reg_619;

assign bitcast_ln486_16_fu_362_p1 = gmem0_addr_read_16_reg_624;

assign bitcast_ln486_17_fu_366_p1 = gmem0_addr_read_17_reg_634_pp0_iter1_reg;

assign bitcast_ln486_18_fu_370_p1 = gmem0_addr_read_18_reg_639_pp0_iter1_reg;

assign bitcast_ln486_19_fu_374_p1 = gmem0_addr_read_19_reg_644_pp0_iter1_reg;

assign bitcast_ln486_1_fu_298_p1 = reg_138;

assign bitcast_ln486_20_fu_378_p1 = gmem0_addr_read_20_reg_649_pp0_iter1_reg;

assign bitcast_ln486_21_fu_382_p1 = gmem0_addr_read_21_reg_659_pp0_iter1_reg;

assign bitcast_ln486_22_fu_386_p1 = gmem0_addr_read_22_reg_664_pp0_iter1_reg;

assign bitcast_ln486_23_fu_390_p1 = gmem0_addr_read_23_reg_669_pp0_iter1_reg;

assign bitcast_ln486_24_fu_394_p1 = gmem0_addr_read_24_reg_674_pp0_iter1_reg;

assign bitcast_ln486_25_fu_398_p1 = gmem0_addr_read_25_reg_684_pp0_iter1_reg;

assign bitcast_ln486_26_fu_402_p1 = gmem0_addr_read_26_reg_689_pp0_iter1_reg;

assign bitcast_ln486_27_fu_406_p1 = gmem0_addr_read_27_reg_694_pp0_iter1_reg;

assign bitcast_ln486_28_fu_410_p1 = gmem0_addr_read_28_reg_699_pp0_iter1_reg;

assign bitcast_ln486_29_fu_414_p1 = gmem0_addr_read_29_reg_709_pp0_iter1_reg;

assign bitcast_ln486_2_fu_303_p1 = reg_142;

assign bitcast_ln486_30_fu_418_p1 = gmem0_addr_read_30_reg_714_pp0_iter1_reg;

assign bitcast_ln486_31_fu_422_p1 = gmem0_addr_read_31_reg_719_pp0_iter1_reg;

assign bitcast_ln486_32_fu_426_p1 = gmem0_addr_read_32_reg_724_pp0_iter1_reg;

assign bitcast_ln486_33_fu_430_p1 = gmem0_addr_read_33_reg_734_pp0_iter2_reg;

assign bitcast_ln486_34_fu_434_p1 = gmem0_addr_read_34_reg_739_pp0_iter2_reg;

assign bitcast_ln486_35_fu_438_p1 = gmem0_addr_read_35_reg_744_pp0_iter2_reg;

assign bitcast_ln486_36_fu_442_p1 = gmem0_addr_read_36_reg_749_pp0_iter2_reg;

assign bitcast_ln486_37_fu_446_p1 = gmem0_addr_read_37_reg_759_pp0_iter2_reg;

assign bitcast_ln486_38_fu_450_p1 = gmem0_addr_read_38_reg_764_pp0_iter2_reg;

assign bitcast_ln486_39_fu_454_p1 = gmem0_addr_read_39_reg_769_pp0_iter2_reg;

assign bitcast_ln486_3_fu_308_p1 = gmem0_addr_read_3_reg_554;

assign bitcast_ln486_40_fu_458_p1 = gmem0_addr_read_40_reg_774_pp0_iter3_reg;

assign bitcast_ln486_41_fu_462_p1 = gmem0_addr_read_41_reg_784_pp0_iter3_reg;

assign bitcast_ln486_42_fu_466_p1 = gmem0_addr_read_42_reg_789_pp0_iter3_reg;

assign bitcast_ln486_43_fu_470_p1 = gmem0_addr_read_43_reg_794_pp0_iter3_reg;

assign bitcast_ln486_44_fu_474_p1 = gmem0_addr_read_44_reg_799_pp0_iter3_reg;

assign bitcast_ln486_45_fu_478_p1 = gmem0_addr_read_45_reg_809_pp0_iter3_reg;

assign bitcast_ln486_46_fu_482_p1 = gmem0_addr_read_46_reg_814_pp0_iter3_reg;

assign bitcast_ln486_47_fu_486_p1 = gmem0_addr_read_47_reg_819_pp0_iter3_reg;

assign bitcast_ln486_48_fu_490_p1 = gmem0_addr_read_48_reg_824_pp0_iter3_reg;

assign bitcast_ln486_4_fu_312_p1 = gmem0_addr_read_4_reg_559;

assign bitcast_ln486_5_fu_316_p1 = reg_138;

assign bitcast_ln486_6_fu_321_p1 = gmem0_addr_read_6_reg_569;

assign bitcast_ln486_7_fu_325_p1 = gmem0_addr_read_7_reg_574;

assign bitcast_ln486_8_fu_329_p1 = gmem0_addr_read_8_reg_579;

assign bitcast_ln486_9_fu_333_p1 = reg_142;

assign bitcast_ln486_fu_293_p1 = reg_138;

assign empty_80_fu_216_p2 = (p_cast1_fu_212_p1 + act_mem);

assign empty_fu_199_p2 = (phi_mul_fu_68 + in_base_addr);

assign grp_fu_106_p_ce = grp_fu_128_ce;

assign grp_fu_106_p_din0 = grp_fu_128_p0;

assign grp_fu_106_p_din1 = grp_fu_128_p1;

assign grp_fu_106_p_opcode = 2'd0;

assign icmp_ln477_fu_179_p2 = ((f_fu_72 == nif) ? 1'b1 : 1'b0);

assign m_axi_gmem0_ARADDR = gmem0_addr_reg_537;

assign m_axi_gmem0_ARBURST = 2'd0;

assign m_axi_gmem0_ARCACHE = 4'd0;

assign m_axi_gmem0_ARID = 1'd0;

assign m_axi_gmem0_ARLEN = 32'd49;

assign m_axi_gmem0_ARLOCK = 2'd0;

assign m_axi_gmem0_ARPROT = 3'd0;

assign m_axi_gmem0_ARQOS = 4'd0;

assign m_axi_gmem0_ARREGION = 4'd0;

assign m_axi_gmem0_ARSIZE = 3'd0;

assign m_axi_gmem0_ARUSER = 1'd0;

assign m_axi_gmem0_AWADDR = gmem0_addr_19_reg_543_pp0_iter4_reg;

assign m_axi_gmem0_AWBURST = 2'd0;

assign m_axi_gmem0_AWCACHE = 4'd0;

assign m_axi_gmem0_AWID = 1'd0;

assign m_axi_gmem0_AWLEN = 32'd1;

assign m_axi_gmem0_AWLOCK = 2'd0;

assign m_axi_gmem0_AWPROT = 3'd0;

assign m_axi_gmem0_AWQOS = 4'd0;

assign m_axi_gmem0_AWREGION = 4'd0;

assign m_axi_gmem0_AWSIZE = 3'd0;

assign m_axi_gmem0_AWUSER = 1'd0;

assign m_axi_gmem0_WDATA = div_reg_1019;

assign m_axi_gmem0_WID = 1'd0;

assign m_axi_gmem0_WLAST = 1'b0;

assign m_axi_gmem0_WSTRB = 4'd15;

assign m_axi_gmem0_WUSER = 1'd0;

assign next_mul_fu_193_p2 = (phi_mul_fu_68 + 32'd49);

assign p_cast1_fu_212_p1 = tmp_fu_204_p3;

assign sext_ln486_fu_231_p1 = $signed(trunc_ln_fu_221_p4);

assign sext_ln489_fu_273_p1 = $signed(trunc_ln2_fu_263_p4);

assign shl_ln_fu_246_p3 = {{add_ln489_fu_241_p2}, {2'd0}};

assign tmp_fu_204_p3 = {{empty_fu_199_p2}, {2'd0}};

assign trunc_ln2_fu_263_p4 = {{add_ln489_1_fu_258_p2[63:2]}};

assign trunc_ln_fu_221_p4 = {{empty_80_fu_216_p2[63:2]}};

assign zext_ln489_fu_254_p1 = shl_ln_fu_246_p3;

endmodule //conv_kernel_avg_pool_Pipeline_avg_pool_loop1
